{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/_san@3.5.7@san/dist/san.dev.js","webpack:///./node_modules/_process@0.11.10@process/browser.js","webpack:///./node_modules/_setimmediate@1.0.5@setimmediate/setImmediate.js","webpack:///./node_modules/_timers-browserify@2.0.10@timers-browserify/main.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","default","object","property","prototype","hasOwnProperty","p","s","e","t","g","this","Function","eval","window","setImmediate","root","guidIndex","guidPrefix","Date","getTime","toString","slice","guid","empty","extend","target","source","key","inherits","subClass","superClass","subClassProto","F","constructor","each","array","iterator","length","bind","func","thisArg","nativeBind","Array","apply","arguments","args","concat","on","el","eventName","listener","capture","addEventListener","attachEvent","splitStr2Obj","result","split","svgTags","createEl","tagName","document","createElementNS","createElement","removeEl","parentNode","removeChild","nextHandler","nextTasks","isNativePromise","Promise","test","nextTick","fn","push","tasks","MessageChannel","channel","port","port2","port1","onmessage","postMessage","resolve","then","setTimeout","ieVersionMatch","navigator","userAgent","match","ie","ieOldThan9","trigger","event","createEvent","initEvent","dispatchEvent","activeElement","autoCloseTags","ANONYMOUS_CLASS_NAME","getDataType","obj","nodeType","toLowerCase","createChainableChecker","validate","chainedChecker","isRequired","checkType","data","dataName","componentName","fullDataName","dataValue","dataType","Error","createPrimaryTypeChecker","type","DataTypes","Walker","len","index","createANode","options","textExpr","directives","props","events","children","kebab2camel","replace","alpha","toUpperCase","any","string","number","bool","symbol","arrayOf","arrayItemChecker","instanceOf","expectedClass","dataValueClassName","expectedClassName","shape","shapeTypes","shapeKeyName","checker","oneOf","expectedEnumValues","join","oneOfType","expectedEnumOfTypeValues","objectOf","typeChecker","dataKeyName","exact","secret","dataValueType","allKeys","currentCode","charCode","cut","start","end","go","distance","nextCode","charCodeAt","goUntil","code","reg","lastIndex","exec","ExprType","STRING","NUMBER","BOOL","ACCESSOR","INTERP","CALL","TEXT","BINARY","UNARY","TERTIARY","createAccessor","paths","readIdent","walker","readTertiaryExpr","conditional","readLogicalORExpr","expr","readLogicalANDExpr","readRelationalExpr","operator","segs","yesExpr","readAccessor","firstSeg","accessorLoop","readUnaryExpr","startCode","startIndex","walkLoop","literal","readMultiplicativeExpr","readAdditiveExpr","parseExpr","raw","readCall","defaultArgs","ident","parseCall","parseInterp","interp","filters","callExpr","original","ENTITY_DECODE_MAP","lt","gt","nbsp","quot","emsp","ensp","thinsp","copy","zwnj","zwj","amp","regexpLiteral","parseText","delimiters","exprMatch","exprStartReg","RegExp","beforeIndex","pushStringToSeg","text","String","fromCharCode","parseInt","directiveParsers","for","item","ref","if","elif","else","html","transition","postProp","prop","integrateAttr","aNode","realName","prefix","prefixIndex","indexOf","colonIndex","modifier","parser","integrateProp","vars","xMatch","x","seg","getXPath","stack","currentTagName","path","parseTemplate","trimWhitespace","rootNode","tagMatch","tagReg","attrReg","currentNode","stackIndex","beforeLastIndex","tagEnd","pushTextNode","closeIndex","aElement","tagClose","nextCharCode","attrMatch","parentChildrenLen","parentChild","elses","splice","tbodyNode","DEFAULT_FILTERS","url","encodeURIComponent","_class","_style","_sep","sep","evalExpr","owner","dataCache","leftValue","rightValue","filter","filterName","evalArgs","buf","set","dataCacheSource","dataCacheClearly","clear","id","changeExprCompareExprs","changeExpr","exprs","changeExprCompare","changePaths","changeLen","pathExpr","Math","max","filterResult","lifeCycleOwnIs","LifeCycle","compiled","is","inited","painting","created","attached","leaving","detached","disposed","NodeType","IF","FOR","ELEM","CMPT","SLOT","TPL","getANodeProp","hotspot","HTML_ATTR_PROP_MAP","readonly","cellpadding","cellspacing","colspan","rowspan","valign","usemap","frameborder","defaultElementPropHandler","element","propName","setAttribute","output","bindInfo","svgPropHandler","boolPropHandler","defaultElementPropHandlers","style","cssText","class","className","slot","disabled","autofocus","required","draggable","analInputChecker","checkbox","radio","a","b","elementPropHandlers","input","multiple","checked","state","oper","bindValue","bindType","scope","bindChecked","hintExpr","option","parentSelect","parent","selectValue","selected","select","getPropHandler","attrName","tagPropHandlers","propHandler","isDataChangeByElement","change","changeTarget","findMethod","nameExpr","method","Data","listeners","immutableSet","exprPaths","isNaN","eventDeclarationListener","eventBind","isComponentEvent","$event","checkDataTypes","setTypeChecker","listen","unlisten","fire","silent","silence","quiet","callee","exprRaw","force","merge","oldValue","returnValue","newArray","deleteCount","insertions","pop","shift","unshift","removeAt","remove","hotTags","isBrowser","insertBefore","targetEl","parentEl","beforeEl","appendChild","warnSetHTML","message","console","warn","getNodePath","node","nodePaths","nodeParent","anode","subTag","TextNode","reverseWalker","current","sel","goNext","createTextNode","attach","content","createComment","tempFlag","insertAdjacentHTML","dispose","_prev","textUpdateProp","textContent","changesIsInDataRef","changes","dataRef","overview","extOverview","wildOverview","DOMChildrenWalker","next","child","firstChild","nextSibling","Element","lifeCycle","_elFns","parentComponent","elementInitTagName","_toPhase","reverseElementChildren","_attached","nodeDispose","_ondisposed","createReverseNode","parentIsComponent","childOwner","childScope","IfNode","ForNode","SlotNode","TemplateNode","ComponentType","getComponentType","elementDisposeChildren","noDetach","noTransition","elementUpdateChildren","_update","elementOwnToPhase","createNode","nodeOwnOnlyChildrenAttach","aNodeChildren","realANode","nameBind","isNamed","givenChildren","givenSlots","named","noname","isInserted","me","initData","varItem","isScoped","slotChildren","aNodeChild","cloneDirectives","excludes","nodeOwnSimpleDispose","nodeOwnCreateStump","ForItemData","forElement","directive","createForDirectiveChild","itemScope","itemANode","param","_create","rinseCondANode","cond","elseIndex","elseANode","handleProp","startRemoveEl","removeTarget","elementOwnAttach","detach","elementOwnDetach","elementOwnDispose","elementOwnCreate","_onEl","elementOwnOnEl","_doneLeave","leaveDispose","elementDispose","disposeNoDetach","disposeNoTransition","dynamicProps","j","htmlDirective","innerHTML","elementOwnAttached","isFromOuter","_notifyNeedReload","scopedChanges","relation","exprResolve","resolveItem","resolvedPaths","originalUpdate","oldChildrenLen","childrenChanges","pushToChildrenChanges","isChildrenRebuild","disposeChildren","parentFirstChild","parentLastChild","lastChild","isOnlyParentChild","newList","newLen","cIndex","cLen","forLen","changeIndex","_splice","_set","changeStart","insertionsLen","newCount","indexChange","deleteLen","spliceArgs","newChildrenLen","lengthChange","_doCreateAndUpdate","doCreateAndUpdate","violentClear","disposedChildCount","disposeChild","childDisposed","replaceNode","cloneNode","replaceChild","nextChild","childANode","newChild","san4devtool","emptyPropWhenCreate","isComponent","sourceNode","elementAttach","_contentReady","elementGetTransition","givenANode","elementLeave","leave","warnEventListenMethod","valid","inputOnCompositionEnd","composing","inputOnCompositionStart","xPropOutputer","xProp","inputXPropOutputer","outputer","xProps","CompositionEvent","nativeEvents","native","_isInitFromEl","enter","removeEventListener","detachEvent","emitDevtool","arg","debug","__san_devtool__","emit","Component","clazz","computed","messages","compileComponent","ComponentClass","recordHotspotData","refs","notContentData","analyseANodeHotspot","analyseExprDataHotspot","idProp","valueProp","protoANode","givenNamedSlotBinds","binds","firstCommentNode","stumpMatch","stumpText","previousSibling","_createGivenSlots","dataTypes","dataTypeChecker","dataTypeName","computedDeps","_calcComputed","dataChanger","_dataChanger","defineComponent","proto","components","componentClass","_cmptReady","tpl","template","componentPropExtra","extra","analyseExprs","main","slotBind","givenSlotInited","slotName","_callHook","declaration","un","nameListeners","computedExpr","watch","dispatch","receiver","childrenTraversal","refTarget","needReloadForSlot","bindItem","setExpr","updateExpr","_repaintChildren","slotChildrenLen","slotChild","dataChanges","_updateBindxOwner","updateScopeExpr","dataExpr","san","version","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","Item","noop","title","browser","env","argv","versions","addListener","once","off","removeListener","removeAllListeners","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","global","undefined","registerImmediate","messagePrefix","onGlobalMessage","nextHandle","tasksByHandle","currentlyRunningATask","doc","attachTo","getPrototypeOf","handle","runIfPresent","importScripts","postMessageIsAsynchronous","oldOnMessage","random","documentElement","script","onreadystatechange","callback","task","clearImmediate","self","Timeout","clearFn","_id","_clearFn","setInterval","clearInterval","close","unref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","age","des","isZero","val","reset","body"],"mappings":"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","file":"app.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/**\n * San\n * Copyright 2016 Baidu Inc. All rights reserved.\n *\n * @file 主文件\n * @author errorrik(errorrik@gmail.com)\n *         otakustay(otakustay@gmail.com)\n *         junmer(junmer@foxmail.com)\n */\n\n(function (root) {\n    // 人工调整打包代码顺序，通过注释手工写一些依赖\n//     // require('./util/guid');\n//     // require('./util/empty');\n//     // require('./util/extend');\n//     // require('./util/inherits');\n//     // require('./util/each');\n//     // require('./util/contains');\n//     // require('./util/bind');\n//     // require('./browser/on');\n//     // require('./browser/un');\n//     // require('./browser/svg-tags');\n//     // require('./browser/create-el');\n//     // require('./browser/remove-el');\n//     // require('./util/next-tick');\n//     // require('./browser/ie');\n//     // require('./browser/ie-old-than-9');\n//     // require('./browser/input-event-compatible');\n//     // require('./browser/auto-close-tags');\n//     // require('./util/data-types.js');\n//     // require('./util/create-data-types-checker.js');\n//     // require('./parser/walker');\n//     // require('./parser/create-a-node');\n//     // require('./parser/parse-template');\n//     // require('./runtime/change-expr-compare');\n//     // require('./runtime/data-change-type');\n//     // require('./runtime/default-filters');\n//     // require('./view/life-cycle');\n//     // require('./view/node-type');\n//     // require('./view/get-prop-handler');\n//     // require('./view/is-data-change-by-element');\n//     // require('./view/event-declaration-listener');\n//     // require('./view/create-node');\n\n\n    /**\n * @file 生成唯一id\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 唯一id的起始值\n *\n * @inner\n * @type {number}\n */\nvar guidIndex = 1;\n\n/**\n * 唯一id的前缀\n *\n * @inner\n * @type {string}\n */\nvar guidPrefix = (new Date()).getTime().toString(16).slice(8);\n\n/**\n * 获取唯一id\n *\n * @inner\n * @return {string} 唯一id\n */\nfunction guid() {\n    return '_' + guidPrefix + (guidIndex++);\n}\n\n// exports = module.exports = guid;\n\n\n/**\n * @file 空函数\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 啥都不干\n */\nfunction empty() {}\n\n// exports = module.exports = empty;\n\n\n/**\n * @file 属性拷贝\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 对象属性拷贝\n *\n * @param {Object} target 目标对象\n * @param {Object} source 源对象\n * @return {Object} 返回目标对象\n */\nfunction extend(target, source) {\n    for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n            var value = source[key];\n            if (typeof value !== 'undefined') {\n                target[key] = value;\n            }\n        }\n    }\n\n    return target;\n}\n\n// exports = module.exports = extend;\n\n\n/**\n * @file 构建类之间的继承关系\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var extend = require('./extend');\n\n/**\n * 构建类之间的继承关系\n *\n * @param {Function} subClass 子类函数\n * @param {Function} superClass 父类函数\n */\nfunction inherits(subClass, superClass) {\n    /* jshint -W054 */\n    var subClassProto = subClass.prototype;\n    var F = new Function();\n    F.prototype = superClass.prototype;\n    subClass.prototype = new F();\n    subClass.prototype.constructor = subClass;\n    extend(subClass.prototype, subClassProto);\n    /* jshint +W054 */\n}\n\n// exports = module.exports = inherits;\n\n\n/**\n * @file 遍历数组\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 遍历数组集合\n *\n * @param {Array} array 数组源\n * @param {function(Any,number):boolean} iterator 遍历函数\n */\nfunction each(array, iterator) {\n    if (array && array.length > 0) {\n        for (var i = 0, l = array.length; i < l; i++) {\n            if (iterator(array[i], i) === false) {\n                break;\n            }\n        }\n    }\n}\n\n// exports = module.exports = each;\n\n\n/**\n * @file 判断数组中是否包含某项\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('./each');\n\n/**\n * 判断数组中是否包含某项\n *\n * @param {Array} array 数组\n * @param {*} value 包含的项\n * @return {boolean}\n */\nfunction contains(array, value) {\n    var result = false;\n    each(array, function (item) {\n        result = item === value;\n        return !result;\n    });\n\n    return result;\n}\n\n// exports = module.exports = contains;\n\n\n/**\n * @file bind函数\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * Function.prototype.bind 方法的兼容性封装\n *\n * @param {Function} func 要bind的函数\n * @param {Object} thisArg this指向对象\n * @param {...*} args 预设的初始参数\n * @return {Function}\n */\nfunction bind(func, thisArg) {\n    var nativeBind = Function.prototype.bind;\n    var slice = Array.prototype.slice;\n    // #[begin] allua\n    if (nativeBind && func.bind === nativeBind) {\n    // #[end]\n        return nativeBind.apply(func, slice.call(arguments, 1));\n    // #[begin] allua\n    }\n\n    var args = slice.call(arguments, 2);\n    return function () {\n        return func.apply(thisArg, args.concat(slice.call(arguments)));\n    };\n    // #[end]\n}\n\n// exports = module.exports = bind;\n\n\n/**\n * @file DOM 事件挂载\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * DOM 事件挂载\n *\n * @inner\n * @param {HTMLElement} el DOM元素\n * @param {string} eventName 事件名\n * @param {Function} listener 监听函数\n * @param {boolean} capture 是否是捕获阶段\n */\nfunction on(el, eventName, listener, capture) {\n    // #[begin] allua\n    if (el.addEventListener) {\n    // #[end]\n        el.addEventListener(eventName, listener, capture);\n    // #[begin] allua\n    }\n    else {\n        el.attachEvent('on' + eventName, listener);\n    }\n    // #[end]\n}\n\n// exports = module.exports = on;\n\n\n/**\n * @file DOM 事件卸载\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * DOM 事件卸载\n *\n * @inner\n * @param {HTMLElement} el DOM元素\n * @param {string} eventName 事件名\n * @param {Function} listener 监听函数\n * @param {boolean} capture 是否是捕获阶段\n */\nfunction un(el, eventName, listener, capture) {\n    // #[begin] allua\n    if (el.addEventListener) {\n    // #[end]\n        el.removeEventListener(eventName, listener, capture);\n    // #[begin] allua\n    }\n    else {\n        el.detachEvent('on' + eventName, listener);\n    }\n    // #[end]\n}\n\n// exports = module.exports = un;\n\n\n/**\n * @file 将字符串逗号切分返回对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n\n/**\n * 将字符串逗号切分返回对象\n *\n * @param {string} source 源字符串\n * @return {Object}\n */\nfunction splitStr2Obj(source) {\n    var result = {};\n    each(\n        source.split(','),\n        function (key) {\n            result[key] = 1;\n        }\n    );\n    return result;\n}\n\n// exports = module.exports = splitStr2Obj;\n\n\n/**\n * @file SVG标签表\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var splitStr2Obj = require('../util/split-str-2-obj');\n\n/**\n * svgTags\n *\n * @see https://www.w3.org/TR/SVG/svgdtd.html 只取常用\n * @type {Object}\n */\nvar svgTags = splitStr2Obj(''\n    // structure\n    + 'svg,g,defs,desc,metadata,symbol,use,'\n    // image & shape\n    + 'image,path,rect,circle,line,ellipse,polyline,polygon,'\n    // text\n    + 'text,tspan,tref,textpath,'\n    // other\n    + 'marker,pattern,clippath,mask,filter,cursor,view,animate,'\n    // font\n    + 'font,font-face,glyph,missing-glyph');\n\n// exports = module.exports = svgTags;\n\n\n/**\n * @file DOM创建\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var svgTags = require('./svg-tags');\n\n/**\n * 创建 DOM 元素\n *\n * @param  {string} tagName tagName\n * @return {HTMLElement}\n */\nfunction createEl(tagName) {\n    if (svgTags[tagName]) {\n        return document.createElementNS('http://www.w3.org/2000/svg', tagName);\n    }\n\n    return document.createElement(tagName);\n}\n\n// exports = module.exports = createEl;\n\n\n/**\n * @file 移除DOM\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 将 DOM 从页面中移除\n *\n * @param {HTMLElement} el DOM元素\n */\nfunction removeEl(el) {\n    if (el && el.parentNode) {\n        el.parentNode.removeChild(el);\n    }\n}\n\n// exports = module.exports = removeEl;\n\n\n/**\n * @file 在下一个时间周期运行任务\n * @author errorrik(errorrik@gmail.com)\n */\n\n// 该方法参照了vue2.5.0的实现，感谢vue团队\n// SEE: https://github.com/vuejs/vue/blob/0948d999f2fddf9f90991956493f976273c5da1f/src/core/util/env.js#L68\n\n\n// var bind = require('./bind');\n\n/**\n * 下一个周期要执行的任务列表\n *\n * @inner\n * @type {Array}\n */\nvar nextTasks = [];\n\n/**\n * 执行下一个周期任务的函数\n *\n * @inner\n * @type {Function}\n */\nvar nextHandler;\n\n/**\n * 浏览器是否支持原生Promise\n * 对Promise做判断，是为了禁用一些不严谨的Promise的polyfill\n *\n * @inner\n * @type {boolean}\n */\nvar isNativePromise = typeof Promise === 'function' && /native code/.test(Promise);\n\n/**\n * 在下一个时间周期运行任务\n *\n * @inner\n * @param {Function} fn 要运行的任务函数\n * @param {Object=} thisArg this指向对象\n */\nfunction nextTick(fn, thisArg) {\n    if (thisArg) {\n        fn = bind(fn, thisArg);\n    }\n    nextTasks.push(fn);\n\n    if (nextHandler) {\n        return;\n    }\n\n    nextHandler = function () {\n        var tasks = nextTasks.slice(0);\n        nextTasks = [];\n        nextHandler = null;\n\n        for (var i = 0, l = tasks.length; i < l; i++) {\n            tasks[i]();\n        }\n    };\n\n    // 非标准方法，但是此方法非常吻合要求。\n    if (typeof setImmediate === 'function') {\n        setImmediate(nextHandler);\n    }\n    // 用MessageChannel去做setImmediate的polyfill\n    // 原理是将新的message事件加入到原有的dom events之后\n    else if (typeof MessageChannel === 'function') {\n        var channel = new MessageChannel();\n        var port = channel.port2;\n        channel.port1.onmessage = nextHandler;\n        port.postMessage(1);\n    }\n    // for native app\n    else if (isNativePromise) {\n        Promise.resolve().then(nextHandler);\n    }\n    else {\n        setTimeout(nextHandler, 0);\n    }\n}\n\n// exports = module.exports = nextTick;\n\n\n/**\n * @file ie版本号\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 从userAgent中ie版本号的匹配信息\n *\n * @type {Array}\n */\nvar ieVersionMatch = typeof navigator !== 'undefined'\n    && navigator.userAgent.match(/msie\\s*([0-9]+)/i);\n\n/**\n * ie版本号，非ie时为0\n *\n * @type {number}\n */\nvar ie = ieVersionMatch ? ieVersionMatch[1] - 0 : 0;\n\n// exports = module.exports = ie;\n\n\n/**\n * @file 是否 IE 并且小于 9\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ie = require('./ie');\n\n// HACK:\n// 1. IE8下，设置innerHTML时如果以html comment开头，comment会被自动滤掉\n//    为了保证stump存在，需要设置完html后，createComment并appendChild/insertBefore\n// 2. IE8下，innerHTML还不支持custom element，所以需要用div替代，不用createElement\n// 3. 虽然IE8已经优化了字符串+连接，碎片化连接性能不再退化\n//    但是由于上面多个兼容场景都用 < 9 判断，所以字符串连接也沿用\n//    所以结果是IE8下字符串连接用的是数组join的方式\n\n// #[begin] allua\n/**\n * 是否 IE 并且小于 9\n */\nvar ieOldThan9 = ie && ie < 9;\n// #[end]\n\n// exports = module.exports = ieOldThan9;\n\n\n/**\n * @file DOM 事件挂载\n * @author dafrok(o.o@mug.dog)\n */\n\n/**\n * DOM 事件挂载\n *\n * @inner\n * @param {HTMLElement} el DOM元素\n * @param {string} eventName 事件名\n */\nfunction trigger(el, eventName) {\n    var event = document.createEvent('HTMLEvents');\n    event.initEvent(eventName, true, true);\n    el.dispatchEvent(event);\n}\n\n// exports = module.exports = trigger;\n\n\n/**\n * @file 解决 IE9 在表单元素中删除字符时不触发事件的问题\n * @author dafrok(o.o@mug.dog)\n */\n\n// var ie = require('./ie');\n// var on = require('./on');\n// var trigger = require('./trigger');\n\n// #[begin] allua\nif (ie === 9) {\n    on(document, 'selectionchange', function () {\n        var el = document.activeElement;\n        if (el.tagName === 'TEXTAREA' || el.tagName === 'INPUT') {\n            trigger(el, 'input');\n        }\n    });\n}\n// #[end]\n\n\n/**\n * @file 自闭合标签表\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var splitStr2Obj = require('../util/split-str-2-obj');\n\n/**\n * 自闭合标签列表\n *\n * @type {Object}\n */\nvar autoCloseTags = splitStr2Obj('area,base,br,col,embed,hr,img,input,keygen,param,source,track,wbr');\n\n// exports = module.exports = autoCloseTags;\n\n\n/**\n * @file data types\n * @author leon <ludafa@outlook.com>\n */\n\n// var bind = require('./bind');\n// var empty = require('./empty');\n// var extend = require('./extend');\n\n// #[begin] error\nvar ANONYMOUS_CLASS_NAME = '<<anonymous>>';\n\n/**\n * 获取精确的类型\n *\n * @NOTE 如果 obj 是一个 DOMElement，我们会返回 `element`；\n *\n * @param  {*} obj 目标\n * @return {string}\n */\nfunction getDataType(obj) {\n\n    if (obj && obj.nodeType === 1) {\n        return 'element';\n    }\n\n    return Object.prototype.toString\n        .call(obj)\n        .slice(8, -1)\n        .toLowerCase();\n}\n// #[end]\n\n/**\n * 创建链式的数据类型校验器\n *\n * @param  {Function} validate 真正的校验器\n * @return {Function}\n */\nfunction createChainableChecker(validate) {\n    var chainedChecker = function () {};\n    chainedChecker.isRequired = empty;\n\n    // 只在 error 功能启用时才有实际上的 dataTypes 检测\n    // #[begin] error\n    var checkType = function (isRequired, data, dataName, componentName, fullDataName) {\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        componentName = componentName || ANONYMOUS_CLASS_NAME;\n\n        // 如果是 null 或 undefined，那么要提前返回啦\n        if (dataValue == null) {\n            // 是 required 就报错\n            if (isRequired) {\n                throw new Error('[SAN ERROR] '\n                    + 'The `' + dataName + '` '\n                    + 'is marked as required in `' + componentName + '`, '\n                    + 'but its value is ' + dataType\n                );\n            }\n            // 不是 required，那就是 ok 的\n            return;\n        }\n\n        validate(data, dataName, componentName, fullDataName);\n\n    };\n\n    chainedChecker = bind(checkType, null, false);\n    chainedChecker.isRequired = bind(checkType, null, true);\n    // #[end]\n\n\n\n    return chainedChecker;\n\n}\n\n// #[begin] error\n/**\n * 生成主要类型数据校验器\n *\n * @param  {string} type 主类型\n * @return {Function}\n */\nfunction createPrimaryTypeChecker(type) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        if (dataType !== type) {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\n                + '(' + dataType + ' supplied to ' + componentName + ', '\n                + 'expected ' + type + ')'\n            );\n        }\n\n    });\n\n}\n\n\n\n/**\n * 生成 arrayOf 校验器\n *\n * @param  {Function} arrayItemChecker 数组中每项数据的校验器\n * @return {Function}\n */\nfunction createArrayOfChecker(arrayItemChecker) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (typeof arrayItemChecker !== 'function') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `arrayOf`, expected `function`'\n            );\n        }\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        if (dataType !== 'array') {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\n                + '(' + dataType + ' supplied to ' + componentName + ', '\n                + 'expected array)'\n            );\n        }\n\n        for (var i = 0, len = dataValue.length; i < len; i++) {\n            arrayItemChecker(dataValue, i, componentName, fullDataName + '[' + i + ']');\n        }\n\n    });\n\n}\n\n/**\n * 生成 instanceOf 检测器\n *\n * @param  {Function|Class} expectedClass 期待的类\n * @return {Function}\n */\nfunction createInstanceOfChecker(expectedClass) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        var dataValue = data[dataName];\n\n        if (dataValue instanceof expectedClass) {\n            return;\n        }\n\n        var dataValueClassName = dataValue.constructor && dataValue.constructor.name\n            ? dataValue.constructor.name\n            : ANONYMOUS_CLASS_NAME;\n\n        var expectedClassName = expectedClass.name || ANONYMOUS_CLASS_NAME;\n\n        throw new Error('[SAN ERROR] '\n            + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\n            + '(' + dataValueClassName + ' supplied to ' + componentName + ', '\n            + 'expected instance of ' + expectedClassName + ')'\n        );\n\n\n    });\n\n}\n\n/**\n * 生成 shape 校验器\n *\n * @param  {Object} shapeTypes shape 校验规则\n * @return {Function}\n */\nfunction createShapeChecker(shapeTypes) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (getDataType(shapeTypes) !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + fullDataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `shape`, expected `object`'\n            );\n        }\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        if (dataType !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\n                + '(' + dataType + ' supplied to ' + componentName + ', '\n                + 'expected object)'\n            );\n        }\n\n        for (var shapeKeyName in shapeTypes) {\n            if (shapeTypes.hasOwnProperty(shapeKeyName)) {\n                var checker = shapeTypes[shapeKeyName];\n                if (typeof checker === 'function') {\n                    checker(dataValue, shapeKeyName, componentName, fullDataName + '.' + shapeKeyName);\n                }\n            }\n        }\n\n    });\n\n}\n\n/**\n * 生成 oneOf 校验器\n *\n * @param  {Array} expectedEnumValues 期待的枚举值\n * @return {Function}\n */\nfunction createOneOfChecker(expectedEnumValues) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (getDataType(expectedEnumValues) !== 'array') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + fullDataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `oneOf`, array is expected.'\n            );\n        }\n\n        var dataValue = data[dataName];\n\n        for (var i = 0, len = expectedEnumValues.length; i < len; i++) {\n            if (dataValue === expectedEnumValues[i]) {\n                return;\n            }\n        }\n\n        throw new Error('[SAN ERROR] '\n            + 'Invalid ' + componentName + ' data `' + fullDataName + '` of value'\n            + '(`' + dataValue + '` supplied to ' + componentName + ', '\n            + 'expected one of ' + expectedEnumValues.join(',') + ')'\n        );\n\n    });\n\n}\n\n/**\n * 生成 oneOfType 校验器\n *\n * @param  {Array<Function>} expectedEnumOfTypeValues 期待的枚举类型\n * @return {Function}\n */\nfunction createOneOfTypeChecker(expectedEnumOfTypeValues) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (getDataType(expectedEnumOfTypeValues) !== 'array') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `oneOf`, array is expected.'\n            );\n        }\n\n        var dataValue = data[dataName];\n\n        for (var i = 0, len = expectedEnumOfTypeValues.length; i < len; i++) {\n\n            var checker = expectedEnumOfTypeValues[i];\n\n            if (typeof checker !== 'function') {\n                continue;\n            }\n\n            try {\n                checker(data, dataName, componentName, fullDataName);\n                // 如果 checker 完成校验没报错，那就返回了\n                return;\n            }\n            catch (e) {\n                // 如果有错误，那么应该把错误吞掉\n            }\n\n        }\n\n        // 所有的可接受 type 都失败了，才丢一个异常\n        throw new Error('[SAN ERROR] '\n            + 'Invalid ' + componentName + ' data `' + dataName + '` of value'\n            + '(`' + dataValue + '` supplied to ' + componentName + ')'\n        );\n\n    });\n\n}\n\n/**\n * 生成 objectOf 校验器\n *\n * @param  {Function} typeChecker 对象属性值校验器\n * @return {Function}\n */\nfunction createObjectOfChecker(typeChecker) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (typeof typeChecker !== 'function') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `objectOf`, expected function'\n            );\n        }\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        if (dataType !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid ' + componentName + ' data `' + dataName + '` of type'\n                + '(' + dataType + ' supplied to ' + componentName + ', '\n                + 'expected object)'\n            );\n        }\n\n        for (var dataKeyName in dataValue) {\n            if (dataValue.hasOwnProperty(dataKeyName)) {\n                typeChecker(\n                    dataValue,\n                    dataKeyName,\n                    componentName,\n                    fullDataName + '.' + dataKeyName\n                );\n            }\n        }\n\n\n    });\n\n}\n\n/**\n * 生成 exact 校验器\n *\n * @param  {Object} shapeTypes object 形态定义\n * @return {Function}\n */\nfunction createExactChecker(shapeTypes) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName, secret) {\n\n        if (getDataType(shapeTypes) !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `exact`'\n            );\n        }\n\n        var dataValue = data[dataName];\n        var dataValueType = getDataType(dataValue);\n\n        if (dataValueType !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid data `' + fullDataName + '` of type `' + dataValueType + '`'\n                + '(supplied to ' + componentName + ', expected `object`)'\n            );\n        }\n\n        var allKeys = {};\n\n        // 先合入 shapeTypes\n        extend(allKeys, shapeTypes);\n        // 再合入 dataValue\n        extend(allKeys, dataValue);\n        // 保证 allKeys 的类型正确\n\n        for (var key in allKeys) {\n            if (allKeys.hasOwnProperty(key)) {\n                var checker = shapeTypes[key];\n\n                // dataValue 中有一个多余的数据项\n                if (!checker) {\n                    throw new Error('[SAN ERROR] '\n                        + 'Invalid data `' + fullDataName + '` key `' + key + '` '\n                        + 'supplied to `' + componentName + '`. '\n                        + '(`' + key + '` is not defined in `DataTypes.exact`)'\n                    );\n                }\n\n                if (!(key in dataValue)) {\n                    throw new Error('[SAN ERROR] '\n                        + 'Invalid data `' + fullDataName + '` key `' + key + '` '\n                        + 'supplied to `' + componentName + '`. '\n                        + '(`' + key + '` is marked `required` in `DataTypes.exact`)'\n                    );\n                }\n\n                checker(\n                    dataValue,\n                    key,\n                    componentName,\n                    fullDataName + '.' + key,\n                    secret\n                );\n\n            }\n        }\n\n    });\n\n}\n// #[end]\n\n\n\n/* eslint-disable fecs-valid-var-jsdoc */\nvar DataTypes = {\n    array: createChainableChecker(empty),\n    object: createChainableChecker(empty),\n    func: createChainableChecker(empty),\n    string: createChainableChecker(empty),\n    number: createChainableChecker(empty),\n    bool: createChainableChecker(empty),\n    symbol: createChainableChecker(empty),\n    any: createChainableChecker,\n    arrayOf: createChainableChecker,\n    instanceOf: createChainableChecker,\n    shape: createChainableChecker,\n    oneOf: createChainableChecker,\n    oneOfType: createChainableChecker,\n    objectOf: createChainableChecker,\n    exact: createChainableChecker\n};\n\n// #[begin] error\nDataTypes = {\n\n    any: createChainableChecker(empty),\n\n    // 类型检测\n    array: createPrimaryTypeChecker('array'),\n    object: createPrimaryTypeChecker('object'),\n    func: createPrimaryTypeChecker('function'),\n    string: createPrimaryTypeChecker('string'),\n    number: createPrimaryTypeChecker('number'),\n    bool: createPrimaryTypeChecker('boolean'),\n    symbol: createPrimaryTypeChecker('symbol'),\n\n    // 复合类型检测\n    arrayOf: createArrayOfChecker,\n    instanceOf: createInstanceOfChecker,\n    shape: createShapeChecker,\n    oneOf: createOneOfChecker,\n    oneOfType: createOneOfTypeChecker,\n    objectOf: createObjectOfChecker,\n    exact: createExactChecker\n\n};\n/* eslint-enable fecs-valid-var-jsdoc */\n// #[end]\n\n\n// module.exports = DataTypes;\n\n\n/**\n * @file 创建数据检测函数\n * @author leon<ludafa@outlook.com>\n */\n\n\n// #[begin] error\n\n/**\n * 创建数据检测函数\n *\n * @param  {Object} dataTypes     数据格式\n * @param  {string} componentName 组件名\n * @return {Function}\n */\nfunction createDataTypesChecker(dataTypes, componentName) {\n\n    /**\n     * 校验 data 是否满足 data types 的格式\n     *\n     * @param  {*} data 数据\n     */\n    return function (data) {\n\n        for (var dataTypeName in dataTypes) {\n\n            if (dataTypes.hasOwnProperty(dataTypeName)) {\n\n                var dataTypeChecker = dataTypes[dataTypeName];\n\n                if (typeof dataTypeChecker !== 'function') {\n                    throw new Error('[SAN ERROR] '\n                        + componentName + ':' + dataTypeName + ' is invalid; '\n                        + 'it must be a function, usually from san.DataTypes'\n                    );\n                }\n\n                dataTypeChecker(\n                    data,\n                    dataTypeName,\n                    componentName,\n                    dataTypeName\n                );\n\n\n            }\n        }\n\n    };\n\n}\n\n// #[end]\n\n// module.exports = createDataTypesChecker;\n\n\n/**\n * @file 字符串源码读取类\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 字符串源码读取类，用于模板字符串解析过程\n *\n * @class\n * @param {string} source 要读取的字符串\n */\nfunction Walker(source) {\n    this.source = source;\n    this.len = this.source.length;\n    this.index = 0;\n}\n\n/**\n * 获取当前字符码\n *\n * @return {number}\n */\nWalker.prototype.currentCode = function () {\n    return this.charCode(this.index);\n};\n\n/**\n * 截取字符串片段\n *\n * @param {number} start 起始位置\n * @param {number} end 结束位置\n * @return {string}\n */\nWalker.prototype.cut = function (start, end) {\n    return this.source.slice(start, end);\n};\n\n/**\n * 向前读取字符\n *\n * @param {number} distance 读取字符数\n */\nWalker.prototype.go = function (distance) {\n    this.index += distance;\n};\n\n/**\n * 读取下一个字符，返回下一个字符的 code\n *\n * @return {number}\n */\nWalker.prototype.nextCode = function () {\n    this.go(1);\n    return this.currentCode();\n};\n\n/**\n * 获取相应位置字符的 code\n *\n * @param {number} index 字符位置\n * @return {number}\n */\nWalker.prototype.charCode = function (index) {\n    return this.source.charCodeAt(index);\n};\n\n/**\n * 向前读取字符，直到遇到指定字符再停止\n *\n * @param {number=} charCode 指定字符的code\n * @return {boolean} 当指定字符时，返回是否碰到指定的字符\n */\nWalker.prototype.goUntil = function (charCode) {\n    var code;\n    while (this.index < this.len && (code = this.currentCode())) {\n        switch (code) {\n            case 32:\n            case 9:\n                this.index++;\n                break;\n            default:\n                if (code === charCode) {\n                    this.index++;\n                    return 1;\n                }\n                return;\n        }\n    }\n};\n\n/**\n * 向前读取符合规则的字符片段，并返回规则匹配结果\n *\n * @param {RegExp} reg 字符片段的正则表达式\n * @return {Array}\n */\nWalker.prototype.match = function (reg) {\n    reg.lastIndex = this.index;\n\n    var match = reg.exec(this.source);\n    if (match) {\n        this.index = reg.lastIndex;\n    }\n\n    return match;\n};\n\n// exports = module.exports = Walker;\n\n\n\n/**\n * @file 模板解析生成的抽象节点\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 创建模板解析生成的抽象节点\n *\n * @param {Object=} options 节点参数\n * @param {string=} options.tagName 标签名\n * @param {ANode=} options.parent 父节点\n * @param {boolean=} options.textExpr 文本节点表达式对象\n * @return {Object}\n */\nfunction createANode(options) {\n    options = options || {};\n\n    if (!options.textExpr) {\n        options.directives = options.directives || {};\n        options.props = options.props || [];\n        options.events = options.events || [];\n        options.children = options.children || [];\n    }\n\n    return options;\n}\n\n// exports = module.exports = createANode;\n\n\n/**\n * @file 把 kebab case 字符串转换成 camel case\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 把 kebab case 字符串转换成 camel case\n *\n * @param {string} source 源字符串\n * @return {string}\n */\nfunction kebab2camel(source) {\n    return source.replace(/-([a-z])/g, function (match, alpha) {\n        return alpha.toUpperCase();\n    });\n}\n\n// exports = module.exports = kebab2camel;\n\n\n/**\n * @file 表达式类型\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 表达式类型\n *\n * @const\n * @type {Object}\n */\nvar ExprType = {\n    STRING: 1,\n    NUMBER: 2,\n    BOOL: 3,\n    ACCESSOR: 4,\n    INTERP: 5,\n    CALL: 6,\n    TEXT: 7,\n    BINARY: 8,\n    UNARY: 9,\n    TERTIARY: 10\n};\n\n// exports = module.exports = ExprType;\n\n\n/**\n * @file 创建访问表达式对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n\n/**\n * 创建访问表达式对象\n *\n * @param {Array} paths 访问路径\n * @return {Object}\n */\nfunction createAccessor(paths) {\n    return {\n        type: ExprType.ACCESSOR,\n        paths: paths\n    };\n}\n\n// exports = module.exports = createAccessor;\n\n\n/**\n * @file 读取字符串\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var ExprType = require('./expr-type');\n\n/**\n * 读取字符串\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readString(walker) {\n    var startCode = walker.currentCode();\n    var startIndex = walker.index;\n    var charCode;\n\n    walkLoop: while ((charCode = walker.nextCode())) {\n        switch (charCode) {\n            case 92: // \\\n                walker.go(1);\n                break;\n            case startCode:\n                walker.go(1);\n                break walkLoop;\n        }\n    }\n\n    var literal = walker.cut(startIndex, walker.index);\n    return {\n        type: ExprType.STRING,\n        value: (new Function('return ' + literal))()\n    };\n}\n\n// exports = module.exports = readString;\n\n\n/**\n * @file 读取数字\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var ExprType = require('./expr-type');\n\n/**\n * 读取数字\n *\n * @inner\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readNumber(walker) {\n    var match = walker.match(/\\s*(-?[0-9]+(\\.[0-9]+)?)/g);\n\n    return {\n        type: ExprType.NUMBER,\n        value: match[1] - 0\n    };\n}\n\n// exports = module.exports = readNumber;\n\n\n/**\n * @file 读取ident\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 读取ident\n *\n * @inner\n * @param {Walker} walker 源码读取对象\n * @return {string}\n */\nfunction readIdent(walker) {\n    var match = walker.match(/\\s*([\\$0-9a-z_]+)/ig);\n    return match[1];\n}\n\n// exports = module.exports = readIdent;\n\n\n/**\n * @file 读取三元表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readLogicalORExpr = require('./read-logical-or-expr');\n\n/**\n * 读取三元表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readTertiaryExpr(walker) {\n    var conditional = readLogicalORExpr(walker);\n    walker.goUntil();\n\n    if (walker.currentCode() === 63) { // ?\n        walker.go(1);\n        var yesExpr = readTertiaryExpr(walker);\n        walker.goUntil();\n\n        if (walker.currentCode() === 58) { // :\n            walker.go(1);\n            return {\n                type: ExprType.TERTIARY,\n                segs: [\n                    conditional,\n                    yesExpr,\n                    readTertiaryExpr(walker)\n                ]\n            };\n        }\n    }\n\n    return conditional;\n}\n\n// exports = module.exports = readTertiaryExpr;\n\n\n/**\n * @file 读取访问表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var createAccessor = require('./create-accessor');\n// var readIdent = require('./read-ident');\n// var readTertiaryExpr = require('./read-tertiary-expr');\n\n/**\n * 读取访问表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readAccessor(walker) {\n    var firstSeg = readIdent(walker);\n    switch (firstSeg) {\n        case 'true':\n        case 'false':\n            return {\n                type: ExprType.BOOL,\n                value: firstSeg === 'true'\n            };\n    }\n\n    var result = createAccessor([\n        {\n            type: ExprType.STRING,\n            value: firstSeg\n        }\n    ]);\n\n    /* eslint-disable no-constant-condition */\n    accessorLoop: while (1) {\n    /* eslint-enable no-constant-condition */\n\n        switch (walker.currentCode()) {\n            case 46: // .\n                walker.go(1);\n\n                // ident as string\n                result.paths.push({\n                    type: ExprType.STRING,\n                    value: readIdent(walker)\n                });\n                break;\n\n            case 91: // [\n                walker.go(1);\n                result.paths.push(readTertiaryExpr(walker));\n                walker.goUntil(93); // ]\n                break;\n\n            default:\n                break accessorLoop;\n        }\n    }\n\n    return result;\n}\n\n// exports = module.exports = readAccessor;\n\n\n/**\n * @file 读取括号表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var readTertiaryExpr = require('./read-tertiary-expr');\n\n/**\n * 读取括号表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readParenthesizedExpr(walker) {\n    walker.go(1);\n    var expr = readTertiaryExpr(walker);\n    walker.goUntil(41); // )\n\n    return expr;\n}\n\n// exports = module.exports = readParenthesizedExpr;\n\n\n/**\n * @file 读取一元表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readString = require('./read-string');\n// var readNumber = require('./read-number');\n// var readAccessor = require('./read-accessor');\n// var readParenthesizedExpr = require('./read-parenthesized-expr');\n\n\n/**\n * 读取一元表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readUnaryExpr(walker) {\n    walker.goUntil();\n\n    switch (walker.currentCode()) {\n        case 33: // !\n            walker.go(1);\n            return {\n                type: ExprType.UNARY,\n                expr: readUnaryExpr(walker)\n            };\n        case 34: // \"\n        case 39: // '\n            return readString(walker);\n        case 45: // number\n        case 48:\n        case 49:\n        case 50:\n        case 51:\n        case 52:\n        case 53:\n        case 54:\n        case 55:\n        case 56:\n        case 57:\n            return readNumber(walker);\n        case 40: // (\n            return readParenthesizedExpr(walker);\n    }\n\n    return readAccessor(walker);\n}\n\n// exports = module.exports = readUnaryExpr;\n\n\n/**\n * @file 读取乘法表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readUnaryExpr = require('./read-unary-expr');\n\n/**\n * 读取乘法表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readMultiplicativeExpr(walker) {\n    var expr = readUnaryExpr(walker);\n\n    while (1) {\n        walker.goUntil();\n\n        var code = walker.currentCode();\n        switch (code) {\n            case 37: // %\n            case 42: // *\n            case 47: // /\n                walker.go(1);\n                expr = {\n                    type: ExprType.BINARY,\n                    operator: code,\n                    segs: [expr, readUnaryExpr(walker)]\n                };\n                continue;\n        }\n\n        break;\n    }\n\n\n    return expr;\n}\n\n// exports = module.exports = readMultiplicativeExpr;\n\n\n/**\n * @file 读取加法表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readMultiplicativeExpr = require('./read-multiplicative-expr');\n\n\n/**\n * 读取加法表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readAdditiveExpr(walker) {\n    var expr = readMultiplicativeExpr(walker);\n\n    while (1) {\n        walker.goUntil();\n        var code = walker.currentCode();\n\n        switch (code) {\n            case 43: // +\n            case 45: // -\n                walker.go(1);\n                expr = {\n                    type: ExprType.BINARY,\n                    operator: code,\n                    segs: [expr, readMultiplicativeExpr(walker)]\n                };\n                continue;\n        }\n\n        break;\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readAdditiveExpr;\n\n\n/**\n * @file 读取关系判断表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readAdditiveExpr = require('./read-additive-expr');\n\n/**\n * 读取关系判断表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readRelationalExpr(walker) {\n    var expr = readAdditiveExpr(walker);\n    walker.goUntil();\n\n    var code = walker.currentCode();\n    switch (code) {\n        case 60: // <\n        case 62: // >\n            if (walker.nextCode() === 61) {\n                code += 61;\n                walker.go(1);\n            }\n\n            return {\n                type: ExprType.BINARY,\n                operator: code,\n                segs: [expr, readAdditiveExpr(walker)]\n            };\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readRelationalExpr;\n\n\n/**\n * @file 读取相等比对表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readRelationalExpr = require('./read-relational-expr');\n\n/**\n * 读取相等比对表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readEqualityExpr(walker) {\n    var expr = readRelationalExpr(walker);\n    walker.goUntil();\n\n    var code = walker.currentCode();\n    switch (code) {\n        case 61: // =\n        case 33: // !\n            if (walker.nextCode() === 61) {\n                code += 61;\n                if (walker.nextCode() === 61) {\n                    code += 61;\n                    walker.go(1);\n                }\n\n                return {\n                    type: ExprType.BINARY,\n                    operator: code,\n                    segs: [expr, readRelationalExpr(walker)]\n                };\n            }\n\n            walker.go(-1);\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readEqualityExpr;\n\n\n/**\n * @file 读取逻辑与表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readEqualityExpr = require('./read-equality-expr');\n\n/**\n * 读取逻辑与表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readLogicalANDExpr(walker) {\n    var expr = readEqualityExpr(walker);\n    walker.goUntil();\n\n    if (walker.currentCode() === 38) { // &\n        if (walker.nextCode() === 38) {\n            walker.go(1);\n            return {\n                type: ExprType.BINARY,\n                operator: 76,\n                segs: [expr, readLogicalANDExpr(walker)]\n            };\n        }\n\n        walker.go(-1);\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readLogicalANDExpr;\n\n\n/**\n * @file 读取逻辑或表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readLogicalANDExpr = require('./read-logical-and-expr');\n\n/**\n * 读取逻辑或表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readLogicalORExpr(walker) {\n    var expr = readLogicalANDExpr(walker);\n    walker.goUntil();\n\n    if (walker.currentCode() === 124) { // |\n        if (walker.nextCode() === 124) {\n            walker.go(1);\n            return {\n                type: ExprType.BINARY,\n                operator: 248,\n                segs: [expr, readLogicalORExpr(walker)]\n            };\n        }\n\n        walker.go(-1);\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readLogicalORExpr;\n\n\n/**\n * @file 解析表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var Walker = require('./walker');\n// var readTertiaryExpr = require('./read-tertiary-expr');\n\n/**\n * 解析表达式\n *\n * @param {string} source 源码\n * @return {Object}\n */\nfunction parseExpr(source) {\n    if (typeof source === 'object' && source.type) {\n        return source;\n    }\n\n    var expr = readTertiaryExpr(new Walker(source));\n    expr.raw = source;\n    return expr;\n}\n\n// exports = module.exports = parseExpr;\n\n\n/**\n * @file 读取调用\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readAccessor = require('./read-accessor');\n// var readTertiaryExpr = require('./read-tertiary-expr');\n\n/**\n * 读取调用\n *\n * @param {Walker} walker 源码读取对象\n * @param {Array=} defaultArgs 默认参数\n * @return {Object}\n */\nfunction readCall(walker, defaultArgs) {\n    walker.goUntil();\n    var ident = readAccessor(walker);\n    var args = [];\n\n    if (walker.goUntil(40)) { // (\n        while (!walker.goUntil(41)) { // )\n            args.push(readTertiaryExpr(walker));\n            walker.goUntil(44); // ,\n        }\n    }\n    else if (defaultArgs) {\n        args = defaultArgs;\n    }\n\n    return {\n        type: ExprType.CALL,\n        name: ident,\n        args: args\n    };\n}\n\n// exports = module.exports = readCall;\n\n\n/**\n * @file 解析调用\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var Walker = require('./walker');\n// var readCall = require('./read-call');\n\n/**\n * 解析调用\n *\n * @param {string} source 源码\n * @param {Array=} defaultArgs 默认参数\n * @return {Object}\n */\nfunction parseCall(source, defaultArgs) {\n    var expr = readCall(new Walker(source), defaultArgs);\n    expr.raw = source;\n    return expr;\n}\n\n// exports = module.exports = parseCall;\n\n\n/**\n * @file 解析插值替换\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var Walker = require('./walker');\n// var readTertiaryExpr = require('./read-tertiary-expr');\n// var ExprType = require('./expr-type');\n// var readCall = require('./read-call');\n\n/**\n * 解析插值替换\n *\n * @param {string} source 源码\n * @return {Object}\n */\nfunction parseInterp(source) {\n    var walker = new Walker(source);\n\n    var interp = {\n        type: ExprType.INTERP,\n        expr: readTertiaryExpr(walker),\n        filters: [],\n        raw: source\n    };\n\n    while (walker.goUntil(124)) { // |\n        var callExpr = readCall(walker);\n        switch (callExpr.name.paths[0].value) {\n            case 'html':\n                break;\n            case 'raw':\n                interp.original = 1;\n                break;\n            default:\n                interp.filters.push(callExpr);\n        }\n    }\n\n    return interp;\n}\n\n// exports = module.exports = parseInterp;\n\n\n/**\n * @file 解码 HTML 字符实体\n * @author errorrik(errorrik@gmail.com)\n */\n\nvar ENTITY_DECODE_MAP = {\n    lt: '<',\n    gt: '>',\n    nbsp: ' ',\n    quot: '\\\"',\n    emsp: '\\u2003',\n    ensp: '\\u2002',\n    thinsp: '\\u2009',\n    copy: '\\xa9',\n    reg: '\\xae',\n    zwnj: '\\u200c',\n    zwj: '\\u200d',\n    amp: '&'\n};\n\n/**\n * 解码 HTML 字符实体\n *\n * @param {string} source 要解码的字符串\n * @return {string}\n */\nfunction decodeHTMLEntity(source) {\n    return source\n        .replace(/&#([0-9]+);/g, function (match, code) {\n            return String.fromCharCode(+code);\n        })\n        .replace(/&#x([0-9a-f]+);/ig, function (match, code) {\n            return String.fromCharCode(parseInt(code, 16));\n        })\n        .replace(/&([a-z]+);/ig, function (match, code) {\n            return ENTITY_DECODE_MAP[code] || match;\n        });\n}\n\n// exports = module.exports = decodeHTMLEntity;\n\n\n/**\n * @file 解析文本\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var Walker = require('./walker');\n// var ExprType = require('./expr-type');\n// var parseInterp = require('./parse-interp');\n// var decodeHTMLEntity = require('../util/decode-html-entity');\n\n/**\n * 对字符串进行可用于new RegExp的字面化\n *\n * @inner\n * @param {string} source 需要字面化的字符串\n * @return {string} 字符串字面化结果\n */\nfunction regexpLiteral(source) {\n    return source.replace(/[\\^\\[\\]\\$\\(\\)\\{\\}\\?\\*\\.\\+\\\\]/g, function (c) {\n        return '\\\\' + c;\n    });\n}\n\n/**\n * 解析文本\n *\n * @param {string} source 源码\n * @param {Array?} delimiters 分隔符。默认为 ['{{', '}}']\n * @return {Object}\n */\nfunction parseText(source, delimiters) {\n    delimiters = delimiters || ['{{', '}}'];\n    var exprStartReg = new RegExp(\n        regexpLiteral(delimiters[0]) + '\\\\s*([\\\\s\\\\S]+?)\\\\s*' + regexpLiteral(delimiters[1]),\n        'ig'\n    );\n\n    var exprMatch;\n\n    var walker = new Walker(source);\n    var beforeIndex = 0;\n\n    var expr = {\n        type: ExprType.TEXT,\n        segs: []\n    };\n\n    function pushStringToSeg(text) {\n        text && expr.segs.push({\n            type: ExprType.STRING,\n            literal: text,\n            value: decodeHTMLEntity(text)\n        });\n    }\n\n    while ((exprMatch = walker.match(exprStartReg)) != null) {\n        pushStringToSeg(walker.cut(\n            beforeIndex,\n            walker.index - exprMatch[0].length\n        ));\n\n        var interp = parseInterp(exprMatch[1]);\n        expr.original = expr.original || interp.original;\n\n        expr.segs.push(interp);\n        beforeIndex = walker.index;\n    }\n\n    pushStringToSeg(walker.cut(beforeIndex));\n\n\n\n    if (expr.segs.length === 1 && expr.segs[0].type === ExprType.STRING) {\n        expr.value = expr.segs[0].value;\n    }\n\n    return expr;\n}\n\n// exports = module.exports = parseText;\n\n\n/**\n * @file 解析指令\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var Walker = require('./walker');\n// var parseExpr = require('./parse-expr');\n// var parseCall = require('./parse-call');\n// var parseText = require('./parse-text');\n// var readAccessor = require('./read-accessor');\n\n/**\n * 指令解析器\n *\n * @inner\n * @type {Object}\n */\nvar directiveParsers = {\n    'for': function (value) {\n        var walker = new Walker(value);\n        var match = walker.match(/^\\s*([\\$0-9a-z_]+)(\\s*,\\s*([\\$0-9a-z_]+))?\\s+in\\s+/ig);\n\n        if (match) {\n            return {\n                item: parseExpr(match[1]),\n                index: parseExpr(match[3] || '$index'),\n                value: readAccessor(walker)\n            };\n        }\n\n        // #[begin] error\n        throw new Error('[SAN FATAL] for syntax error: ' + value);\n        // #[end]\n    },\n\n    'ref': function (value, options) {\n        return {\n            value: parseText(value, options.delimiters)\n        };\n    },\n\n    'if': function (value) {\n        return {\n            value: parseExpr(value.replace(/(^\\{\\{|\\}\\}$)/g, ''))\n        };\n    },\n\n    'elif': function (value) {\n        return {\n            value: parseExpr(value.replace(/(^\\{\\{|\\}\\}$)/g, ''))\n        };\n    },\n\n    'else': function (value) {\n        return {\n            value: {}\n        };\n    },\n\n    'html': function (value) {\n        return {\n            value: parseExpr(value.replace(/(^\\{\\{|\\}\\}$)/g, ''))\n        };\n    },\n\n    'transition': function (value) {\n        return {\n            value: parseCall(value)\n        };\n    }\n};\n\n/**\n * 解析指令\n *\n * @param {ANode} aNode 抽象节点\n * @param {string} name 指令名称\n * @param {string} value 指令值\n * @param {Object} options 解析参数\n * @param {Array?} options.delimiters 插值分隔符列表\n */\nfunction parseDirective(aNode, name, value, options) {\n    if (name === 'else-if') {\n        name = 'elif';\n    }\n\n    var parser = directiveParsers[name];\n    if (parser) {\n        (aNode.directives[name] = parser(value, options)).raw = value;\n    }\n}\n\n// exports = module.exports = parseDirective;\n\n\n/**\n * @file 对属性信息进行处理\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n\n/**\n * 对属性信息进行处理\n * 对组件的 binds 或者特殊的属性（比如 input 的 checked）需要处理\n *\n * 扁平化：\n * 当 text 解析只有一项时，要么就是 string，要么就是 interp\n * interp 有可能是绑定到组件属性的表达式，不希望被 eval text 成 string\n * 所以这里做个处理，只有一项时直接抽出来\n *\n * bool属性：\n * 当绑定项没有值时，默认为true\n *\n * @param {Object} prop 属性对象\n */\nfunction postProp(prop) {\n    var expr = prop.expr;\n\n    if (expr.type === ExprType.TEXT) {\n        switch (expr.segs.length) {\n            case 0:\n                prop.expr = {\n                    type: ExprType.BOOL,\n                    value: true\n                };\n                break;\n\n            case 1:\n                expr = prop.expr = expr.segs[0];\n                if (expr.type === ExprType.INTERP && expr.filters.length === 0) {\n                    prop.expr = expr.expr;\n                }\n        }\n    }\n}\n\n// exports = module.exports = postProp;\n\n\n/**\n * @file 解析抽象节点属性\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var kebab2camel = require('../util/kebab2camel');\n// var ExprType = require('./expr-type');\n// var createAccessor = require('./create-accessor');\n// var parseExpr = require('./parse-expr');\n// var parseCall = require('./parse-call');\n// var parseText = require('./parse-text');\n// var parseDirective = require('./parse-directive');\n// var postProp = require('./post-prop');\n\n\n/**\n * 解析抽象节点属性\n *\n * @param {ANode} aNode 抽象节点\n * @param {string} name 属性名称\n * @param {string} value 属性值\n * @param {Object} options 解析参数\n * @param {Array?} options.delimiters 插值分隔符列表\n */\nfunction integrateAttr(aNode, name, value, options) {\n    var prefixIndex = name.indexOf('-');\n    var realName;\n    var prefix;\n\n    if (prefixIndex > 0) {\n        prefix = name.slice(0, prefixIndex);\n        realName = name.slice(prefixIndex + 1);\n    }\n\n    switch (prefix) {\n        case 'on':\n            var event = {\n                name: realName,\n                modifier: {}\n            };\n            aNode.events.push(event);\n\n            var colonIndex;\n            while ((colonIndex = value.indexOf(':')) > 0) {\n                var modifier = value.slice(0, colonIndex);\n\n                // eventHandler(\"dd:aa\") 这种情况不能算modifier，需要辨识\n                if (!/^[a-z]+$/i.test(modifier)) {\n                    break;\n                }\n\n                event.modifier[modifier] = true;\n                value = value.slice(colonIndex + 1);\n            }\n\n            event.expr = parseCall(value, [\n                createAccessor([\n                    { type: ExprType.STRING, value: '$event' }\n                ])\n            ]);\n            break;\n\n        case 'san':\n        case 's':\n            parseDirective(aNode, realName, value, options);\n            break;\n\n        case 'prop':\n            integrateProp(aNode, realName, value, options);\n            break;\n\n        case 'var':\n            if (!aNode.vars) {\n                aNode.vars = [];\n            }\n\n            realName = kebab2camel(realName);\n            aNode.vars.push({\n                name: realName,\n                expr: parseExpr(value.replace(/(^\\{\\{|\\}\\}$)/g, ''))\n            });\n            break;\n\n        default:\n            integrateProp(aNode, name, value, options);\n    }\n}\n\n/**\n * 解析抽象节点绑定属性\n *\n * @inner\n * @param {ANode} aNode 抽象节点\n * @param {string} name 属性名称\n * @param {string} value 属性值\n * @param {Object} options 解析参数\n * @param {Array?} options.delimiters 插值分隔符列表\n */\nfunction integrateProp(aNode, name, value, options) {\n    // parse two way binding, e.g. value=\"{=ident=}\"\n    var xMatch = value.match(/^\\{=\\s*(.*?)\\s*=\\}$/);\n\n    if (xMatch) {\n        aNode.props.push({\n            name: name,\n            expr: parseExpr(xMatch[1]),\n            x: 1,\n            raw: value\n        });\n\n        return;\n    }\n\n    // parse normal prop\n    var prop = {\n        name: name,\n        expr: parseText(value, options.delimiters),\n        raw: value\n    };\n\n    // 这里不能把只有一个插值的属性抽取\n    // 因为插值里的值可能是html片段，容易被注入\n    // 组件的数据绑定在组件init时做抽取\n    switch (name) {\n        case 'class':\n        case 'style':\n            each(prop.expr.segs, function (seg) {\n                if (seg.type === ExprType.INTERP) {\n                    seg.filters.push({\n                        type: ExprType.CALL,\n                        name: createAccessor([\n                            {\n                                type: ExprType.STRING,\n                                value: '_' + prop.name\n                            }\n                        ]),\n                        args: []\n                    });\n                }\n            });\n            break;\n\n        case 'checked':\n            if (aNode.tagName === 'input') {\n                postProp(prop);\n            }\n            break;\n    }\n\n    aNode.props.push(prop);\n}\n\n\n// exports = module.exports = integrateAttr;\n\n\n/**\n * @file 解析模板\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var createANode = require('./create-a-node');\n// var Walker = require('./walker');\n// var integrateAttr = require('./integrate-attr');\n// var parseText = require('./parse-text');\n// var autoCloseTags = require('../browser/auto-close-tags');\n\n// #[begin] error\nfunction getXPath(stack, currentTagName) {\n    var path = ['ROOT'];\n    for (var i = 1, len = stack.length; i < len; i++) {\n        path.push(stack[i].tagName);\n    }\n    if (currentTagName) {\n        path.push(currentTagName);\n    }\n    return path.join('>');\n}\n// #[end]\n\n/* eslint-disable fecs-max-statements */\n\n/**\n * 解析 template\n *\n * @param {string} source template源码\n * @param {Object?} options 解析参数\n * @param {string?} options.trimWhitespace 空白文本的处理策略。none|blank|all\n * @param {Array?} options.delimiters 插值分隔符列表\n * @return {ANode}\n */\nfunction parseTemplate(source, options) {\n    options = options || {};\n    options.trimWhitespace = options.trimWhitespace || 'none';\n\n    var rootNode = createANode();\n\n    if (typeof source !== 'string') {\n        return rootNode;\n    }\n\n    source = source.replace(/<!--([\\s\\S]*?)-->/mg, '').replace(/(^\\s+|\\s+$)/g, '');\n    var walker = new Walker(source);\n\n    var tagReg = /<(\\/)?([a-z0-9-]+)\\s*/ig;\n    var attrReg = /([-:0-9a-z\\(\\)\\[\\]]+)(\\s*=\\s*(['\"])([^\\3]*?)\\3)?\\s*/ig;\n\n    var tagMatch;\n    var currentNode = rootNode;\n    var stack = [rootNode];\n    var stackIndex = 0;\n    var beforeLastIndex = 0;\n\n    while ((tagMatch = walker.match(tagReg)) != null) {\n        var tagEnd = tagMatch[1];\n        var tagName = tagMatch[2].toLowerCase();\n\n        pushTextNode(source.slice(\n            beforeLastIndex,\n            walker.index - tagMatch[0].length\n        ));\n\n        // 62: >\n        // 47: /\n        // 处理 </xxxx >\n        if (tagEnd && walker.currentCode() === 62) {\n            // 满足关闭标签的条件时，关闭标签\n            // 向上查找到对应标签，找不到时忽略关闭\n            var closeIndex = stackIndex;\n\n            // #[begin] error\n            // 如果正在闭合一个自闭合的标签，例如 </input>，报错\n            if (autoCloseTags[tagName]) {\n                throw new Error(''\n                    + '[SAN ERROR] ' + getXPath(stack, tagName) + ' is a `auto closed` tag, '\n                    + 'so it cannot be closed with </' + tagName + '>'\n                );\n            }\n\n            // 如果关闭的 tag 和当前打开的不一致，报错\n            if (\n                stack[closeIndex].tagName !== tagName\n                // 这里要把 table 自动添加 tbody 的情况给去掉\n                && !(tagName === 'table' && stack[closeIndex].tagName === 'tbody')\n            ) {\n                throw new Error('[SAN ERROR] ' + getXPath(stack) + ' is closed with ' + tagName);\n            }\n            // #[end]\n\n            while (closeIndex > 0 && stack[closeIndex].tagName !== tagName) {\n                closeIndex--;\n            }\n\n            if (closeIndex > 0) {\n                stackIndex = closeIndex - 1;\n                currentNode = stack[stackIndex];\n            }\n            walker.go(1);\n        }\n\n        // #[begin] error\n        // 处理 </xxx 非正常闭合标签\n        else if (tagEnd) {\n\n            // 如果闭合标签时，匹配后的下一个字符是 <，即下一个标签的开始，那么当前闭合标签未闭合\n            if (walker.currentCode() === 60) {\n                throw new Error(''\n                    + '[SAN ERROR] ' + getXPath(stack)\n                    + '\\'s close tag not closed'\n                );\n            }\n\n            // 闭合标签有属性\n            throw new Error(''\n                + '[SAN ERROR] ' + getXPath(stack)\n                + '\\'s close tag has attributes'\n            );\n\n        }\n        // #[end]\n\n        else if (!tagEnd) {\n            var aElement = createANode({\n                tagName: tagName\n            });\n            var tagClose = autoCloseTags[tagName];\n\n            // 解析 attributes\n\n            /* eslint-disable no-constant-condition */\n            while (1) {\n            /* eslint-enable no-constant-condition */\n\n                var nextCharCode = walker.currentCode();\n\n                // 标签结束时跳出 attributes 读取\n                // 标签可能直接结束或闭合结束\n                if (nextCharCode === 62) {\n                    walker.go(1);\n                    break;\n                }\n                // 遇到 /> 按闭合处理\n                else if (nextCharCode === 47\n                    && walker.charCode(walker.index + 1) === 62\n                ) {\n                    walker.go(2);\n                    tagClose = 1;\n                    break;\n                }\n\n                // #[begin] error\n                // 在处理一个 open 标签时，如果遇到了 <， 即下一个标签的开始，则当前标签未能正常闭合，报错\n                if (nextCharCode === 60) {\n                    throw new Error('[SAN ERROR] ' + getXPath(stack, tagName) + ' is not closed');\n                }\n                // #[end]\n\n                // 读取 attribute\n                var attrMatch = walker.match(attrReg);\n                if (attrMatch) {\n\n                    // #[begin] error\n                    // 如果属性有 =，但没取到 value，报错\n                    if (\n                        walker.charCode(attrMatch.index + attrMatch[1].length) === 61\n                        && !attrMatch[2]\n                    ) {\n                        throw new Error(''\n                            + '[SAN ERROR] ' + getXPath(stack, tagName) + ' attribute `'\n                            + attrMatch[1] + '` is not wrapped with \"\"'\n                        );\n                    }\n                    // #[end]\n\n                    integrateAttr(\n                        aElement,\n                        attrMatch[1],\n                        attrMatch[2] ? attrMatch[4] : '',\n                        options\n                    );\n                }\n\n            }\n\n            // match if directive for else/elif directive\n            var elseDirective = aElement.directives['else'] || aElement.directives.elif; // eslint-disable-line dot-notation\n            if (elseDirective) {\n                var parentChildrenLen = currentNode.children.length;\n\n                while (parentChildrenLen--) {\n                    var parentChild = currentNode.children[parentChildrenLen];\n                    if (parentChild.textExpr) {\n                        currentNode.children.splice(parentChildrenLen, 1);\n                        continue;\n                    }\n\n                    // #[begin] error\n                    if (!parentChild.directives['if']) { // eslint-disable-line dot-notation\n                        throw new Error('[SAN FATEL] else not match if.');\n                    }\n                    // #[end]\n\n                    parentChild.elses = parentChild.elses || [];\n                    parentChild.elses.push(aElement);\n\n                    break;\n                }\n            }\n            else {\n                if (aElement.tagName === 'tr' && currentNode.tagName === 'table') {\n                    var tbodyNode = createANode({\n                        tagName: 'tbody'\n                    });\n                    currentNode.children.push(tbodyNode);\n                    currentNode = tbodyNode;\n                    stack[++stackIndex] = tbodyNode;\n                }\n\n                currentNode.children.push(aElement);\n            }\n\n            if (!tagClose) {\n                currentNode = aElement;\n                stack[++stackIndex] = aElement;\n            }\n        }\n\n        beforeLastIndex = walker.index;\n    }\n\n    pushTextNode(walker.cut(beforeLastIndex));\n\n    return rootNode;\n\n    /**\n     * 在读取栈中添加文本节点\n     *\n     * @inner\n     * @param {string} text 文本内容\n     */\n    function pushTextNode(text) {\n        switch (options.trimWhitespace) {\n            case 'blank':\n                if (/^\\s+$/.test(text)) {\n                    text = null;\n                }\n                break;\n\n            case 'all':\n                text = text.replace(/(^\\s+|\\s+$)/g, '');\n                break;\n        }\n\n        if (text) {\n            currentNode.children.push(createANode({\n                textExpr: parseText(text, options.delimiters)\n            }));\n        }\n    }\n}\n\n/* eslint-enable fecs-max-statements */\n\n// exports = module.exports = parseTemplate;\n\n\n/**\n * @file 默认filter\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/* eslint-disable fecs-camelcase */\n/* eslint-disable guard-for-in */\n\n/**\n * 默认filter\n *\n * @const\n * @type {Object}\n */\nvar DEFAULT_FILTERS = {\n\n    /**\n     * URL编码filter\n     *\n     * @param {string} source 源串\n     * @return {string} 替换结果串\n     */\n    url: encodeURIComponent,\n\n    _class: function (source) {\n        if (source instanceof Array) {\n            return source.join(' ');\n        }\n\n        return source;\n    },\n\n    _style: function (source) {\n        if (typeof source === 'object') {\n            var result = '';\n            for (var key in source) {\n                result += key + ':' + source[key] + ';';\n            }\n\n            return result;\n        }\n\n        return source;\n    },\n\n    _sep: function (source, sep) {\n        return source ? sep + source : source;\n    }\n};\n/* eslint-enable fecs-camelcase */\n\n// exports = module.exports = DEFAULT_FILTERS;\n\n\n/**\n * @file 表达式计算\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n// var DEFAULT_FILTERS = require('./default-filters');\n// var evalArgs = require('./eval-args');\n// var dataCache = require('./data-cache');\n\n/**\n * 计算表达式的值\n *\n * @param {Object} expr 表达式对象\n * @param {Data} data 数据容器对象\n * @param {Component=} owner 所属组件环境\n * @return {*}\n */\nfunction evalExpr(expr, data, owner) {\n    if (expr.value != null) {\n        return expr.value;\n    }\n\n    var value = dataCache.get(data, expr);\n\n    if (value == null) {\n        switch (expr.type) {\n            case ExprType.UNARY:\n                value = !evalExpr(expr.expr, data, owner);\n                break;\n\n            case ExprType.BINARY:\n                var leftValue = evalExpr(expr.segs[0], data, owner);\n                var rightValue = evalExpr(expr.segs[1], data, owner);\n\n                /* eslint-disable eqeqeq */\n                switch (expr.operator) {\n                    case 37:\n                        value = leftValue % rightValue;\n                        break;\n                    case 43:\n                        value = leftValue + rightValue;\n                        break;\n                    case 45:\n                        value = leftValue - rightValue;\n                        break;\n                    case 42:\n                        value = leftValue * rightValue;\n                        break;\n                    case 47:\n                        value = leftValue / rightValue;\n                        break;\n                    case 60:\n                        value = leftValue < rightValue;\n                        break;\n                    case 62:\n                        value = leftValue > rightValue;\n                        break;\n                    case 76:\n                        value = leftValue && rightValue;\n                        break;\n                    case 94:\n                        value = leftValue != rightValue;\n                        break;\n                    case 121:\n                        value = leftValue <= rightValue;\n                        break;\n                    case 122:\n                        value = leftValue == rightValue;\n                        break;\n                    case 123:\n                        value = leftValue >= rightValue;\n                        break;\n                    case 155:\n                        value = leftValue !== rightValue;\n                        break;\n                    case 183:\n                        value = leftValue === rightValue;\n                        break;\n                    case 248:\n                        value = leftValue || rightValue;\n                        break;\n                }\n                /* eslint-enable eqeqeq */\n                break;\n\n            case ExprType.TERTIARY:\n                value = evalExpr(\n                    expr.segs[evalExpr(expr.segs[0], data, owner) ? 1 : 2],\n                    data,\n                    owner\n                );\n                break;\n\n            case ExprType.ACCESSOR:\n                value = data.get(expr);\n                break;\n\n            case ExprType.INTERP:\n                value = evalExpr(expr.expr, data, owner);\n\n                if (owner) {\n                    for (var i = 0, l = expr.filters.length; i < l; i++) {\n                        var filter = expr.filters[i];\n                        var filterName = filter.name.paths[0].value;\n\n                        if (owner.filters[filterName]) {\n                            value = owner.filters[filterName].apply(\n                                owner,\n                                [value].concat(evalArgs(filter.args, data, owner))\n                            );\n                        }\n                        else if (DEFAULT_FILTERS[filterName]) {\n                            value = DEFAULT_FILTERS[filterName](\n                                value,\n                                filter.args[0] ? filter.args[0].value : ''\n                            );\n                        }\n                    }\n                }\n\n                if (value == null) {\n                    value = '';\n                }\n\n                break;\n\n            /* eslint-disable no-redeclare */\n            case ExprType.TEXT:\n                var buf = '';\n                for (var i = 0, l = expr.segs.length; i < l; i++) {\n                    var seg = expr.segs[i];\n                    buf += seg.value || evalExpr(seg, data, owner);\n                }\n                return buf;\n        }\n\n        dataCache.set(data, expr, value);\n    }\n\n    return value;\n}\n\n// exports = module.exports = evalExpr;\n\n\n/**\n * @file 为函数调用计算参数数组的值\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var evalExpr = require('../runtime/eval-expr');\n\n/**\n * 为函数调用计算参数数组的值\n *\n * @param {Array} args 参数表达式列表\n * @param {Data} data 数据环境\n * @param {Component} owner 组件环境\n * @return {Array}\n */\nfunction evalArgs(args, data, owner) {\n    var result = [];\n    for (var i = 0; i < args.length; i++) {\n        result.push(evalExpr(args[i], data, owner));\n    }\n\n    return result;\n}\n\n// exports = module.exports = evalArgs;\n\n\n/**\n * @file 数据缓存管理器\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n\nvar dataCacheSource = {};\nvar dataCacheClearly = 1;\n\n/**\n * 数据缓存管理器\n *\n * @const\n * @type {Object}\n */\nvar dataCache = {\n    clear: function () {\n        if (!dataCacheClearly) {\n            dataCacheClearly = 1;\n            dataCacheSource = {};\n        }\n    },\n\n    set: function (data, expr, value) {\n        if (expr.raw) {\n            dataCacheClearly = 0;\n            (dataCacheSource[data.id] = dataCacheSource[data.id] || {})[expr.raw] = value;\n        }\n    },\n\n    get: function (data, expr) {\n        if (expr.raw && dataCacheSource[data.id]) {\n            return dataCacheSource[data.id][expr.raw];\n        }\n    }\n};\n\n\n// exports = module.exports = dataCache;\n\n\n/**\n * @file 比较变更表达式与目标表达式之间的关系\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n// var evalExpr = require('./eval-expr');\n// var each = require('../util/each');\n\n/**\n * 判断变更表达式与多个表达式之间的关系，0为完全没关系，1为有关系\n *\n * @inner\n * @param {Object} changeExpr 目标表达式\n * @param {Array} exprs 多个源表达式\n * @param {Data} data 表达式所属数据环境\n * @return {number}\n */\nfunction changeExprCompareExprs(changeExpr, exprs, data) {\n    for (var i = 0, l = exprs.length; i < l; i++) {\n        if (changeExprCompare(changeExpr, exprs[i], data)) {\n            return 1;\n        }\n    }\n\n    return 0;\n}\n\n/**\n * 比较变更表达式与目标表达式之间的关系，用于视图更新判断\n * 视图更新需要根据其关系，做出相应的更新行为\n *\n * 0: 完全没关系\n * 1: 变更表达式是目标表达式的母项(如a与a.b) 或 表示需要完全变化\n * 2: 变更表达式是目标表达式相等\n * >2: 变更表达式是目标表达式的子项，如a.b.c与a.b\n *\n * @param {Object} changeExpr 变更表达式\n * @param {Object} expr 要比较的目标表达式\n * @param {Data} data 表达式所属数据环境\n * @return {number}\n */\nfunction changeExprCompare(changeExpr, expr, data) {\n    switch (expr.type) {\n        case ExprType.ACCESSOR:\n            var paths = expr.paths;\n            var len = paths.length;\n            var changePaths = changeExpr.paths;\n            var changeLen = changePaths.length;\n\n            var result = 1;\n            for (var i = 0; i < len; i++) {\n                var pathExpr = paths[i];\n\n                if (pathExpr.type === ExprType.ACCESSOR\n                    && changeExprCompare(changeExpr, pathExpr, data)\n                ) {\n                    return 1;\n                }\n\n                if (result && i < changeLen\n                    /* eslint-disable eqeqeq */\n                    && (pathExpr.value || evalExpr(pathExpr, data))\n                        != (changePaths[i].value || evalExpr(changePaths[i], data))\n                    /* eslint-enable eqeqeq */\n                ) {\n                    result = 0;\n                }\n            }\n\n            if (result) {\n                result = Math.max(1, changeLen - len + 2);\n            }\n            return result;\n\n        case ExprType.UNARY:\n            return changeExprCompare(changeExpr, expr.expr, data) ? 1 : 0;\n\n\n        case ExprType.TEXT:\n        case ExprType.BINARY:\n        case ExprType.TERTIARY:\n            return changeExprCompareExprs(changeExpr, expr.segs, data);\n\n        case ExprType.INTERP:\n            if (!changeExprCompare(changeExpr, expr.expr, data)) {\n                var filterResult;\n                each(expr.filters, function (filter) {\n                    filterResult = changeExprCompareExprs(changeExpr, filter.args, data);\n                    return !filterResult;\n                });\n\n                return filterResult ? 1 : 0;\n            }\n\n            return 1;\n    }\n\n    return 0;\n}\n\n// exports = module.exports = changeExprCompare;\n\n\n/**\n * @file 数据变更类型枚举\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 数据变更类型枚举\n *\n * @const\n * @type {Object}\n */\nvar DataChangeType = {\n    SET: 1,\n    SPLICE: 2\n};\n\n// exports = module.exports = DataChangeType;\n\n\n/**\n * @file 生命周期类\n * @author errorrik(errorrik@gmail.com)\n */\n\nfunction lifeCycleOwnIs(name) {\n    return this[name];\n}\n\n/* eslint-disable fecs-valid-var-jsdoc */\n/**\n * 节点生命周期信息\n *\n * @inner\n * @type {Object}\n */\nvar LifeCycle = {\n    start: {},\n\n    compiled: {\n        is: lifeCycleOwnIs,\n        compiled: true\n    },\n\n    inited: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true\n    },\n\n    painting: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        painting: true\n    },\n\n    created: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        created: true\n    },\n\n    attached: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        created: true,\n        attached: true\n    },\n\n    leaving: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        created: true,\n        attached: true,\n        leaving: true\n    },\n\n    detached: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        created: true,\n        detached: true\n    },\n\n    disposed: {\n        is: lifeCycleOwnIs,\n        disposed: true\n    }\n};\n/* eslint-enable fecs-valid-var-jsdoc */\n\n\n// exports = module.exports = LifeCycle;\n\n\n/**\n * @file 节点类型\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 节点类型\n *\n * @const\n * @type {Object}\n */\nvar NodeType = {\n    TEXT: 1,\n    IF: 2,\n    FOR: 3,\n    ELEM: 4,\n    CMPT: 5,\n    SLOT: 6,\n    TPL: 7\n};\n\n// exports = module.exports = NodeType;\n\n\n/**\n * @file 获取 ANode props 数组中相应 name 的项\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 获取 ANode props 数组中相应 name 的项\n *\n * @param {Object} aNode ANode对象\n * @param {string} name name属性匹配串\n * @return {Object}\n */\nfunction getANodeProp(aNode, name) {\n    var index = aNode.hotspot.props[name];\n    if (index != null) {\n        return aNode.props[index];\n    }\n}\n\n// exports = module.exports = getANodeProp;\n\n\n/**\n * @file 获取属性处理对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var contains = require('../util/contains');\n// var empty = require('../util/empty');\n// var svgTags = require('../browser/svg-tags');\n// var evalExpr = require('../runtime/eval-expr');\n// var getANodeProp = require('./get-a-node-prop');\n// var NodeType = require('./node-type');\n\n\n/**\n * HTML 属性和 DOM 操作属性的对照表\n *\n * @inner\n * @const\n * @type {Object}\n */\nvar HTML_ATTR_PROP_MAP = {\n    'readonly': 'readOnly',\n    'cellpadding': 'cellPadding',\n    'cellspacing': 'cellSpacing',\n    'colspan': 'colSpan',\n    'rowspan': 'rowSpan',\n    'valign': 'vAlign',\n    'usemap': 'useMap',\n    'frameborder': 'frameBorder',\n    'for': 'htmlFor'\n};\n\n/**\n * 默认的元素的属性设置的变换方法\n *\n * @inner\n * @type {Object}\n */\nvar defaultElementPropHandler = {\n    prop: function (el, value, name, element) {\n        var propName = HTML_ATTR_PROP_MAP[name] || name;\n\n        // input 的 type 是个特殊属性，其实也应该用 setAttribute\n        // 但是 type 不应该运行时动态改变，否则会有兼容性问题\n        // 所以这里直接就不管了\n        if (propName in el) {\n            el[propName] = value == null ? '' : value;\n        }\n        else {\n            el.setAttribute(name, value);\n        }\n\n        // attribute 绑定的是 text，所以不会出现 null 的情况，这里无需处理\n        // 换句话来说，san 是做不到 attribute 时有时无的\n        // if (value == null) {\n        //     el.removeAttribute(name);\n        // }\n    },\n\n    output: function (element, bindInfo, data) {\n        data.set(bindInfo.expr, element.el[bindInfo.name], {\n            target: {\n                id: element.id,\n                prop: bindInfo.name\n            }\n        });\n    }\n};\n\nvar svgPropHandler = {\n    prop: function (el, value, name) {\n        el.setAttribute(name, value);\n    }\n};\n\nvar boolPropHandler = {\n    prop: function (el, value, name, element, prop) {\n        var propName = HTML_ATTR_PROP_MAP[name] || name;\n        el[propName] = !!(prop && prop.raw === ''\n            || value && value !== 'false' && value !== '0');\n    }\n};\n\n/* eslint-disable fecs-properties-quote */\n/**\n * 默认的属性设置变换方法\n *\n * @inner\n * @type {Object}\n */\nvar defaultElementPropHandlers = {\n    style: {\n        prop: function (el, value) {\n            el.style.cssText = value;\n        }\n    },\n\n    'class': { // eslint-disable-line\n        prop: function (el, value) {\n            el.className = value;\n        }\n    },\n\n    slot: {\n        prop: empty\n    },\n\n    readonly: boolPropHandler,\n    disabled: boolPropHandler,\n    autofocus: boolPropHandler,\n    required: boolPropHandler,\n    draggable: boolPropHandler\n};\n/* eslint-enable fecs-properties-quote */\n\nvar analInputChecker = {\n    checkbox: contains,\n    radio: function (a, b) {\n        return a === b;\n    }\n};\n\nfunction analInputCheckedState(element, value, oper) {\n    var bindValue = getANodeProp(element.aNode, 'value');\n    var bindType = getANodeProp(element.aNode, 'type');\n\n    if (bindValue && bindType) {\n        var type = evalExpr(bindType.expr, element.scope, element.owner);\n\n        if (analInputChecker[type]) {\n            var bindChecked = getANodeProp(element.aNode, 'checked');\n            if (!bindChecked.hintExpr) {\n                bindChecked.hintExpr = bindValue.expr;\n            }\n\n            return !!analInputChecker[type](\n                value,\n                evalExpr(bindValue.expr, element.scope, element.owner)\n            );\n        }\n    }\n}\n\nvar elementPropHandlers = {\n    input: {\n        multiple: boolPropHandler,\n        checked: {\n            prop: function (el, value, name, element) {\n                var state = analInputCheckedState(element, value);\n\n                boolPropHandler.prop(\n                    el,\n                    state != null ? state : value,\n                    'checked',\n                    element\n                );\n            },\n\n            output: function (element, bindInfo, data) {\n                var el = element.el;\n                var bindValue = getANodeProp(element.aNode, 'value');\n                var bindType = getANodeProp(element.aNode, 'type') || {};\n\n                if (bindValue && bindType) {\n                    switch (bindType.raw) {\n                        case 'checkbox':\n                            data[el.checked ? 'push' : 'remove'](bindInfo.expr, el.value);\n                            return;\n\n                        case 'radio':\n                            el.checked && data.set(bindInfo.expr, el.value, {\n                                target: {\n                                    id: element.id,\n                                    prop: bindInfo.name\n                                }\n                            });\n                            return;\n                    }\n                }\n\n                defaultElementPropHandler.output(element, bindInfo, data);\n            }\n        }\n    },\n\n    option: {\n        value: {\n            prop: function (el, value, name, element) {\n                defaultElementPropHandler.prop(el, value, name, element);\n\n                if (isOptionSelected(element, value)) {\n                    el.selected = true;\n                }\n            }\n        }\n    },\n\n    select: {\n        value: {\n            prop: function (el, value) {\n                el.value = value || '';\n            },\n\n            output: defaultElementPropHandler.output\n        }\n    }\n};\n\nfunction isOptionSelected(element, value) {\n    var parentSelect = element.parent;\n    while (parentSelect) {\n        if (parentSelect.tagName === 'select') {\n            break;\n        }\n\n        parentSelect = parentSelect.parent;\n    }\n\n\n    if (parentSelect) {\n        var selectValue = null;\n        var prop;\n        var expr;\n\n        if ((prop = getANodeProp(parentSelect.aNode, 'value'))\n            && (expr = prop.expr)\n        ) {\n            selectValue = parentSelect.nodeType === NodeType.CMPT\n                ? evalExpr(expr, parentSelect.data, parentSelect)\n                : evalExpr(expr, parentSelect.scope, parentSelect.owner)\n                || '';\n        }\n\n        if (selectValue === value) {\n            return 1;\n        }\n    }\n}\n\n\n/**\n * 获取属性处理对象\n *\n * @param {string} tagName 元素tag\n * @param {string} attrName 属性名\n * @return {Object}\n */\nfunction getPropHandler(tagName, attrName) {\n    if (svgTags[tagName]) {\n        return svgPropHandler;\n    }\n\n    var tagPropHandlers = elementPropHandlers[tagName];\n    if (!tagPropHandlers) {\n        tagPropHandlers = elementPropHandlers[tagName] = {};\n    }\n\n    var propHandler = tagPropHandlers[attrName];\n    if (!propHandler) {\n        propHandler = defaultElementPropHandlers[attrName] || defaultElementPropHandler;\n        tagPropHandlers[attrName] = propHandler;\n    }\n\n    return propHandler;\n}\n\n// exports = module.exports = getPropHandler;\n\n\n/**\n * @file 判断变更是否来源于元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 判断变更是否来源于元素，来源于元素时，视图更新需要阻断\n *\n * @param {Object} change 变更对象\n * @param {Element} element 元素\n * @param {string?} propName 属性名，可选。需要精确判断是否来源于此属性时传入\n * @return {boolean}\n */\nfunction isDataChangeByElement(change, element, propName) {\n    var changeTarget = change.option.target;\n    return changeTarget && changeTarget.id === element.id\n        && (!propName || changeTarget.prop === propName);\n}\n\n// exports = module.exports = isDataChangeByElement;\n\n\n/**\n * @file 在对象上使用accessor表达式查找方法\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var evalExpr = require('../runtime/eval-expr');\n\n/**\n * 在对象上使用accessor表达式查找方法\n *\n * @param {Object} source 源对象\n * @param {Object} nameExpr 表达式\n * @param {Data} data 所属数据环境\n * @return {Function}\n */\nfunction findMethod(source, nameExpr, data) {\n    var method = source;\n\n    for (var i = 0; method != null && i < nameExpr.paths.length; i++) {\n        method = method[evalExpr(nameExpr.paths[i], data)];\n    }\n\n    return method;\n}\n\n// exports = module.exports = findMethod;\n\n\n/**\n * @file 数据类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n// var evalExpr = require('./eval-expr');\n// var DataChangeType = require('./data-change-type');\n// var createAccessor = require('../parser/create-accessor');\n// var parseExpr = require('../parser/parse-expr');\n// var guid = require('../util/guid');\n// var dataCache = require('./data-cache');\n\n/**\n * 数据类\n *\n * @class\n * @param {Object?} data 初始数据\n * @param {Model?} parent 父级数据容器\n */\nfunction Data(data, parent) {\n    this.id = guid();\n    this.parent = parent;\n    this.raw = data || {};\n    this.listeners = [];\n}\n\n// #[begin] error\n// 以下两个函数只在开发模式下可用，在生产模式下不存在\n/**\n * DataTypes 检测\n */\nData.prototype.checkDataTypes = function () {\n    if (this.typeChecker) {\n        this.typeChecker(this.raw);\n    }\n};\n\n/**\n * 设置 type checker\n *\n * @param  {Function} typeChecker 类型校验器\n */\nData.prototype.setTypeChecker = function (typeChecker) {\n    this.typeChecker = typeChecker;\n};\n\n// #[end]\n\n/**\n * 添加数据变更的事件监听器\n *\n * @param {Function} listener 监听函数\n */\nData.prototype.listen = function (listener) {\n    if (typeof listener === 'function') {\n        this.listeners.push(listener);\n    }\n};\n\n/**\n * 移除数据变更的事件监听器\n *\n * @param {Function} listener 监听函数\n */\nData.prototype.unlisten = function (listener) {\n    var len = this.listeners.length;\n    while (len--) {\n        if (!listener || this.listeners[len] === listener) {\n            this.listeners.splice(len, 1);\n        }\n    }\n};\n\n/**\n * 触发数据变更\n *\n * @param {Object} change 变更信息对象\n */\nData.prototype.fire = function (change) {\n    if (change.option.silent || change.option.silence || change.option.quiet) {\n        return;\n    }\n\n    for (var i = 0; i < this.listeners.length; i++) {\n        this.listeners[i].call(this, change);\n    }\n};\n\n/**\n * 获取数据项\n *\n * @param {string|Object?} expr 数据项路径\n * @param {Data?} callee 当前数据获取的调用环境\n * @return {*}\n */\nData.prototype.get = function (expr, callee) {\n    var value = this.raw;\n    if (!expr) {\n        return value;\n    }\n\n    expr = parseExpr(expr);\n\n    var paths = expr.paths;\n    callee = callee || this;\n\n    value = value[paths[0].value];\n\n    if (value == null && this.parent) {\n        value = this.parent.get(expr, callee);\n    }\n    else {\n        for (var i = 1, l = paths.length; value != null && i < l; i++) {\n            value = value[paths[i].value || evalExpr(paths[i], callee)];\n        }\n    }\n\n    return value;\n};\n\n\n/**\n * 数据对象变更操作\n *\n * @inner\n * @param {Object|Array} source 要变更的源数据\n * @param {Array} exprPaths 属性路径\n * @param {*} value 变更属性值\n * @param {Data} data 对应的Data对象\n * @return {*} 变更后的新数据\n */\nfunction immutableSet(source, exprPaths, value, data) {\n    if (exprPaths.length === 0) {\n        return value;\n    }\n\n    var prop = evalExpr(exprPaths[0], data);\n    var result;\n\n    if (source instanceof Array) {\n        var index = +prop;\n\n        result = source.slice(0);\n        result[isNaN(index) ? prop : index] = immutableSet(source[index], exprPaths.slice(1), value, data);\n\n        return result;\n    }\n    else if (typeof source === 'object') {\n        result = {};\n\n        for (var key in source) {\n            if (key !== prop) {\n                result[key] = source[key];\n            }\n        }\n\n        result[prop] = immutableSet(source[prop] || {}, exprPaths.slice(1), value, data);\n\n        return result;\n    }\n\n    return source;\n}\n\n/**\n * 设置数据项\n *\n * @param {string|Object} expr 数据项路径\n * @param {*} value 数据值\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.set = function (expr, value, option) {\n    option = option || {};\n\n    // #[begin] error\n    var exprRaw = expr;\n    // #[end]\n\n    expr = parseExpr(expr);\n\n    // #[begin] error\n    if (expr.type !== ExprType.ACCESSOR) {\n        throw new Error('[SAN ERROR] Invalid Expression in Data set: ' + exprRaw);\n    }\n    // #[end]\n\n    if (this.get(expr) === value && !option.force) {\n        return;\n    }\n\n    dataCache.clear();\n    this.raw = immutableSet(this.raw, expr.paths, value, this);\n    this.fire({\n        type: DataChangeType.SET,\n        expr: expr,\n        value: value,\n        option: option\n    });\n\n    // #[begin] error\n    this.checkDataTypes();\n    // #[end]\n\n};\n\n/**\n * 合并更新数据项\n *\n * @param {string|Object} expr 数据项路径\n * @param {Object} source 待合并的数据值\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.merge = function (expr, source, option) {\n    option = option || {};\n\n    // #[begin] error\n    var exprRaw = expr;\n    // #[end]\n\n    expr = parseExpr(expr);\n\n    // #[begin] error\n    if (expr.type !== ExprType.ACCESSOR) {\n        throw new Error('[SAN ERROR] Invalid Expression in Data merge: ' + exprRaw);\n    }\n\n    if (typeof this.get(expr) !== 'object') {\n        throw new Error('[SAN ERROR] Merge Expects a Target of Type \\'object\\'; got ' + typeof oldValue);\n    }\n\n    if (typeof source !== 'object') {\n        throw new Error('[SAN ERROR] Merge Expects a Source of Type \\'object\\'; got ' + typeof source);\n    }\n    // #[end]\n\n    for (var key in source) { // eslint-disable-line\n        this.set(\n            createAccessor(\n                expr.paths.concat(\n                    [\n                        {\n                            type: ExprType.STRING,\n                            value: key\n                        }\n                    ]\n                )\n            ),\n            source[key],\n            option\n        );\n    }\n};\n\n/**\n * 基于更新函数更新数据项\n *\n * @param {string|Object} expr 数据项路径\n * @param {Function} fn 数据处理函数\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.apply = function (expr, fn, option) {\n    // #[begin] error\n    var exprRaw = expr;\n    // #[end]\n\n    expr = parseExpr(expr);\n\n    // #[begin] error\n    if (expr.type !== ExprType.ACCESSOR) {\n        throw new Error('[SAN ERROR] Invalid Expression in Data apply: ' + exprRaw);\n    }\n    // #[end]\n\n    var oldValue = this.get(expr);\n\n    // #[begin] error\n    if (typeof fn !== 'function') {\n        throw new Error(\n            '[SAN ERROR] Invalid Argument\\'s Type in Data apply: '\n            + 'Expected Function but got ' + typeof fn\n        );\n    }\n    // #[end]\n\n    this.set(expr, fn(oldValue), option);\n};\n\n/**\n * 数组数据项splice操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {Array} args splice 接受的参数列表，数组项与Array.prototype.splice的参数一致\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {Array} 新数组\n */\nData.prototype.splice = function (expr, args, option) {\n    option = option || {};\n    // #[begin] error\n    var exprRaw = expr;\n    // #[end]\n\n    expr = parseExpr(expr);\n\n    // #[begin] error\n    if (expr.type !== ExprType.ACCESSOR) {\n        throw new Error('[SAN ERROR] Invalid Expression in Data splice: ' + exprRaw);\n    }\n    // #[end]\n\n    var target = this.get(expr);\n    var returnValue = [];\n\n    if (target instanceof Array) {\n        var index = args[0];\n        if (index < 0 || index > target.length) {\n            return;\n        }\n\n        var newArray = target.slice(0);\n        returnValue = newArray.splice.apply(newArray, args);\n        dataCache.clear();\n        this.raw = immutableSet(this.raw, expr.paths, newArray, this);\n\n        this.fire({\n            expr: expr,\n            type: DataChangeType.SPLICE,\n            index: index,\n            deleteCount: returnValue.length,\n            value: returnValue,\n            insertions: args.slice(2),\n            option: option\n        });\n    }\n\n    // #[begin] error\n    this.checkDataTypes();\n    // #[end]\n\n    return returnValue;\n};\n\n/**\n * 数组数据项push操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {*} item 要push的值\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {number} 新数组的length属性\n */\nData.prototype.push = function (expr, item, option) {\n    var target = this.get(expr);\n\n    if (target instanceof Array) {\n        this.splice(expr, [target.length, 0, item], option);\n        return target.length + 1;\n    }\n};\n\n/**\n * 数组数据项pop操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {*}\n */\nData.prototype.pop = function (expr, option) {\n    var target = this.get(expr);\n\n    if (target instanceof Array) {\n        var len = target.length;\n        if (len) {\n            return this.splice(expr, [len - 1, 1], option)[0];\n        }\n    }\n};\n\n/**\n * 数组数据项shift操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {*}\n */\nData.prototype.shift = function (expr, option) {\n    return this.splice(expr, [0, 1], option)[0];\n};\n\n/**\n * 数组数据项unshift操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {*} item 要unshift的值\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {number} 新数组的length属性\n */\nData.prototype.unshift = function (expr, item, option) {\n    var target = this.get(expr);\n\n    if (target instanceof Array) {\n        this.splice(expr, [0, 0, item], option);\n        return target.length + 1;\n    }\n};\n\n/**\n * 数组数据项移除操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {number} index 要移除项的索引\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.removeAt = function (expr, index, option) {\n    this.splice(expr, [index, 1], option);\n};\n\n/**\n * 数组数据项移除操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {*} value 要移除的项\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.remove = function (expr, value, option) {\n    var target = this.get(expr);\n\n    if (target instanceof Array) {\n        var len = target.length;\n        while (len--) {\n            if (target[len] === value) {\n                this.splice(expr, [len, 1], option);\n                break;\n            }\n        }\n    }\n};\n\n// exports = module.exports = Data;\n\n\n/**\n * @file 声明式事件的监听函数\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var evalArgs = require('../runtime/eval-args');\n// var findMethod = require('../runtime/find-method');\n// var Data = require('../runtime/data');\n\n/**\n * 声明式事件的监听函数\n *\n * @param {Object} eventBind 绑定信息对象\n * @param {boolean} isComponentEvent 是否组件自定义事件\n * @param {Data} data 数据环境\n * @param {Event} e 事件对象\n */\nfunction eventDeclarationListener(eventBind, isComponentEvent, data, e) {\n    var method = findMethod(this, eventBind.expr.name, data);\n\n    if (typeof method === 'function') {\n        var scope = new Data(\n            {$event: isComponentEvent ? e : e || window.event},\n            data\n        );\n        method.apply(this, evalArgs(eventBind.expr.args, scope, this));\n    }\n}\n\n// exports = module.exports = eventDeclarationListener;\n\n\n/**\n * @file 自闭合标签表\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var splitStr2Obj = require('../util/split-str-2-obj');\n\n/**\n * 自闭合标签列表\n *\n * @type {Object}\n */\nvar hotTags = splitStr2Obj('div,span,input,button,textarea,form,label,dl,dt,dd,ul,ol,li,a,b,u,h1,h2,h3,h4,h5,h6');\n\n// exports = module.exports = hotTags;\n\n\n/**\n * @file 是否浏览器环境\n * @author errorrik(errorrik@gmail.com)\n */\n\nvar isBrowser = typeof window !== 'undefined';\n\n// exports = module.exports = isBrowser;\n\n\n/**\n * @file insertBefore 方法的兼容性封装\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * insertBefore 方法的兼容性封装\n *\n * @param {HTMLNode} targetEl 要插入的节点\n * @param {HTMLElement} parentEl 父元素\n * @param {HTMLElement?} beforeEl 在此元素之前插入\n */\nfunction insertBefore(targetEl, parentEl, beforeEl) {\n    if (parentEl) {\n        if (beforeEl) {\n            parentEl.insertBefore(targetEl, beforeEl);\n        }\n        else {\n            parentEl.appendChild(targetEl);\n        }\n    }\n}\n\n// exports = module.exports = insertBefore;\n\n\n/**\n * @file 判断元素是否不允许设置HTML\n * @author errorrik(errorrik@gmail.com)\n */\n\n// some html elements cannot set innerHTML in old ie\n// see: https://msdn.microsoft.com/en-us/library/ms533897(VS.85).aspx\n\n/**\n * 判断元素是否不允许设置HTML\n *\n * @param {HTMLElement} el 要判断的元素\n * @return {boolean}\n */\nfunction noSetHTML(el) {\n    return /^(col|colgroup|frameset|style|table|tbody|tfoot|thead|tr|select)$/i.test(el.tagName);\n}\n\n// exports = module.exports = noSetHTML;\n\n\n/**\n * @file  获取节点 stump 的 comment\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var noSetHTML = require('../browser/no-set-html');\n\n// #[begin] error\n/**\n * 获取节点 stump 的 comment\n *\n * @param {HTMLElement} el HTML元素\n */\nfunction warnSetHTML(el) {\n    // dont warn if not in browser runtime\n    if (!(typeof window !== 'undefined' && typeof navigator !== 'undefined' && window.document)) {\n        return;\n    }\n\n    // some html elements cannot set innerHTML in old ie\n    // see: https://msdn.microsoft.com/en-us/library/ms533897(VS.85).aspx\n    if (noSetHTML(el)) {\n        var message = '[SAN WARNING] set html for element \"' + el.tagName\n            + '\" may cause an error in old IE';\n        /* eslint-disable no-console */\n        if (typeof console === 'object' && console.warn) {\n            console.warn(message);\n        }\n        else {\n            throw new Error(message);\n        }\n        /* eslint-enable no-console */\n    }\n}\n// #[end]\n\n// exports = module.exports = warnSetHTML;\n\n\n/**\n * @file 判断是否结束桩\n * @author errorrik(errorrik@gmail.com)\n */\n\n// #[begin] reverse\n/**\n * 判断是否结束桩\n *\n * @param {HTMLElement|HTMLComment} target 要判断的元素\n * @param {string} type 桩类型\n * @return {boolean}\n */\nfunction isEndStump(target, type) {\n    return target.nodeType === 8 && target.data === '/s-' + type;\n}\n// #[end]\n\n// exports = module.exports = isEndStump;\n\n\n/**\n * @file 获取节点在组件树中的路径\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var NodeType = require('./node-type');\n\n// #[begin] reverse\n/**\n * 获取节点在组件树中的路径\n *\n * @param {Node} node 节点对象\n * @return {Array}\n */\nfunction getNodePath(node) {\n    var nodePaths = [];\n    var nodeParent = node;\n    while (nodeParent) {\n        switch (nodeParent.nodeType) {\n            case NodeType.ELEM:\n                nodePaths.unshift(nodeParent.tagName);\n                break;\n\n            case NodeType.IF:\n                nodePaths.unshift('if');\n                break;\n\n            case NodeType.FOR:\n                nodePaths.unshift('for[' + nodeParent.anode.directives['for'].raw + ']'); // eslint-disable-line dot-notation\n                break;\n\n            case NodeType.SLOT:\n                nodePaths.unshift('slot[' + (nodeParent.name || 'default') + ']');\n                break;\n\n            case NodeType.TPL:\n                nodePaths.unshift('template');\n                break;\n\n            case NodeType.CMPT:\n                nodePaths.unshift('component[' + (nodeParent.subTag || 'root') + ']');\n                break;\n\n            case NodeType.TEXT:\n                nodePaths.unshift('text');\n                break;\n        }\n\n        nodeParent = nodeParent.parent;\n    }\n\n    return nodePaths;\n}\n// #[end]\n\n// exports = module.exports = getNodePath;\n\n\n/**\n * @file text 节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var isBrowser = require('../browser/is-browser');\n// var removeEl = require('../browser/remove-el');\n// var insertBefore = require('../browser/insert-before');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var evalExpr = require('../runtime/eval-expr');\n// var NodeType = require('./node-type');\n// var warnSetHTML = require('./warn-set-html');\n// var isEndStump = require('./is-end-stump');\n// var getNodePath = require('./get-node-path');\n\n\n/**\n * text 节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction TextNode(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        var currentNode = reverseWalker.current;\n        if (currentNode) {\n            switch (currentNode.nodeType) {\n                case 8:\n                    if (currentNode.data === 's-text') {\n                        this.sel = currentNode;\n                        currentNode.data = this.id;\n                        reverseWalker.goNext();\n\n                        while (1) { // eslint-disable-line\n                            currentNode = reverseWalker.current;\n                            if (!currentNode) {\n                                throw new Error('[SAN REVERSE ERROR] Text end flag not found. \\nPaths: '\n                                    + getNodePath(this).join(' > '));\n                            }\n\n                            if (isEndStump(currentNode, 'text')) {\n                                this.el = currentNode;\n                                reverseWalker.goNext();\n                                currentNode.data = this.id;\n                                break;\n                            }\n\n                            reverseWalker.goNext();\n                        }\n                    }\n                    break;\n\n                case 3:\n                    reverseWalker.goNext();\n                    if (!this.aNode.textExpr.original) {\n                        this.el = currentNode;\n                    }\n                    break;\n            }\n        }\n        else {\n            this.el = document.createTextNode('');\n            insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n        }\n    }\n    // #[end]\n}\n\nTextNode.prototype.nodeType = NodeType.TEXT;\n\n/**\n * 将text attach到页面\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nTextNode.prototype.attach = function (parentEl, beforeEl) {\n    this.content = evalExpr(this.aNode.textExpr, this.scope, this.owner);\n\n    if (this.aNode.textExpr.original) {\n        this.sel = document.createComment(this.id);\n        insertBefore(this.sel, parentEl, beforeEl);\n\n        this.el = document.createComment(this.id);\n        insertBefore(this.el, parentEl, beforeEl);\n\n        var tempFlag = document.createElement('script');\n        parentEl.insertBefore(tempFlag, this.el);\n        tempFlag.insertAdjacentHTML('beforebegin', this.content);\n        parentEl.removeChild(tempFlag);\n    }\n    else {\n        this.el = document.createTextNode(this.content);\n        insertBefore(this.el, parentEl, beforeEl);\n    }\n};\n\n/**\n * 销毁 text 节点\n */\nTextNode.prototype.dispose = function () {\n    this._prev = null;\n    this.el = null;\n    this.sel = null;\n};\n\nvar textUpdateProp = isBrowser\n    && (typeof document.createTextNode('').textContent === 'string'\n        ? 'textContent'\n        : 'data');\n\n/**\n * 更新 text 节点的视图\n *\n * @param {Array} changes 数据变化信息\n */\nTextNode.prototype._update = function (changes) {\n    if (this.aNode.textExpr.value) {\n        return;\n    }\n\n    var len = changes ? changes.length : 0;\n    while (len--) {\n        if (changeExprCompare(changes[len].expr, this.aNode.textExpr, this.scope)) {\n            var text = evalExpr(this.aNode.textExpr, this.scope, this.owner);\n\n            if (text !== this.content) {\n                this.content = text;\n\n                if (this.aNode.textExpr.original) {\n                    var startRemoveEl = this.sel.nextSibling;\n                    var parentEl = this.el.parentNode;\n\n                    while (startRemoveEl !== this.el) {\n                        var removeTarget = startRemoveEl;\n                        startRemoveEl = startRemoveEl.nextSibling;\n                        removeEl(removeTarget);\n                    }\n\n                    // #[begin] error\n                    warnSetHTML(parentEl);\n                    // #[end]\n\n                    var tempFlag = document.createElement('script');\n                    parentEl.insertBefore(tempFlag, this.el);\n                    tempFlag.insertAdjacentHTML('beforebegin', text);\n                    parentEl.removeChild(tempFlag);\n                }\n                else {\n                    this.el[textUpdateProp] = text;\n                }\n            }\n\n            return;\n        }\n    }\n};\n\n// exports = module.exports = TextNode;\n\n\n/**\n * @file 判断变更数组是否影响到数据引用摘要\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 判断变更数组是否影响到数据引用摘要\n *\n * @param {Array} changes 变更数组\n * @param {Object} dataRef 数据引用摘要\n * @return {boolean}\n */\nfunction changesIsInDataRef(changes, dataRef) {\n    for (var i = 0; i < changes.length; i++) {\n        var change = changes[i];\n\n        if (!change.overview) {\n            var paths = change.expr.paths;\n            change.overview = paths[0].value;\n\n            if (paths.length > 1) {\n                change.extOverview = paths[0].value + '.' + paths[1].value;\n                change.wildOverview = paths[0].value + '.*';\n            }\n        }\n\n        if (dataRef[change.overview]\n            || change.wildOverview && dataRef[change.wildOverview]\n            || change.extOverview && dataRef[change.extOverview]\n        ) {\n            return true;\n        }\n    }\n}\n\n// exports = module.exports = changesIsInDataRef;\n\n\n/**\n * @file 元素子节点遍历操作类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var removeEl = require('../browser/remove-el');\n\n// #[begin] reverse\n/**\n * 元素子节点遍历操作类\n *\n * @inner\n * @class\n * @param {HTMLElement} el 要遍历的元素\n */\nfunction DOMChildrenWalker(el) {\n    this.raw = [];\n    this.index = 0;\n    this.target = el;\n\n    var child = el.firstChild;\n    var next;\n    while (child) {\n        next = child.nextSibling;\n\n        switch (child.nodeType) {\n            case 3:\n                if (/^\\s*$/.test(child.data || child.textContent)) {\n                    removeEl(child);\n                }\n                else {\n                    this.raw.push(child);\n                }\n                break;\n\n            case 1:\n            case 8:\n                this.raw.push(child);\n        }\n\n        child = next;\n    }\n\n    this.current = this.raw[this.index];\n    this.next = this.raw[this.index + 1];\n}\n\n/**\n * 往下走一个元素\n */\nDOMChildrenWalker.prototype.goNext = function () {\n    this.current = this.raw[++this.index];\n    this.next = this.raw[this.index + 1];\n};\n// #[end]\n\n// exports = module.exports = DOMChildrenWalker;\n\n\n/**\n * @file 元素节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var removeEl = require('../browser/remove-el');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var changesIsInDataRef = require('../runtime/changes-is-in-data-ref');\n// var evalExpr = require('../runtime/eval-expr');\n// var LifeCycle = require('./life-cycle');\n// var NodeType = require('./node-type');\n// var reverseElementChildren = require('./reverse-element-children');\n// var isDataChangeByElement = require('./is-data-change-by-element');\n// var elementUpdateChildren = require('./element-update-children');\n// var elementOwnCreate = require('./element-own-create');\n// var elementOwnAttach = require('./element-own-attach');\n// var elementOwnDetach = require('./element-own-detach');\n// var elementOwnDispose = require('./element-own-dispose');\n// var elementOwnOnEl = require('./element-own-on-el');\n// var elementOwnToPhase = require('./element-own-to-phase');\n// var elementOwnAttached = require('./element-own-attached');\n// var elementDispose = require('./element-dispose');\n// var elementInitTagName = require('./element-init-tag-name');\n// var handleProp = require('./handle-prop');\n// var warnSetHTML = require('./warn-set-html');\n// var getNodePath = require('./get-node-path');\n\n/**\n * 元素节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction Element(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n\n    this.lifeCycle = LifeCycle.start;\n    this.children = [];\n    this._elFns = [];\n    this.parentComponent = parent.nodeType === NodeType.CMPT\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n\n    elementInitTagName(this);\n\n    this._toPhase('inited');\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        var currentNode = reverseWalker.current;\n\n        if (!currentNode) {\n            throw new Error('[SAN REVERSE ERROR] Element not found. \\nPaths: '\n                + getNodePath(this).join(' > '));\n        }\n\n        if (currentNode.nodeType !== 1) {\n            throw new Error('[SAN REVERSE ERROR] Element type not match, expect 1 but '\n                + currentNode.nodeType + '.\\nPaths: '\n                + getNodePath(this).join(' > '));\n        }\n\n        if (currentNode.tagName.toLowerCase() !== this.tagName) {\n            throw new Error('[SAN REVERSE ERROR] Element tagName not match, expect '\n                + this.tagName + ' but meat ' + currentNode.tagName.toLowerCase() + '.\\nPaths: '\n                + getNodePath(this).join(' > '));\n        }\n\n        this.el = currentNode;\n        reverseWalker.goNext();\n\n        reverseElementChildren(this);\n\n        this._attached();\n    }\n    // #[end]\n}\n\n\n\nElement.prototype.nodeType = NodeType.ELEM;\n\n\nElement.prototype.attach = elementOwnAttach;\nElement.prototype.detach = elementOwnDetach;\nElement.prototype.dispose = elementOwnDispose;\nElement.prototype._create = elementOwnCreate;\nElement.prototype._toPhase = elementOwnToPhase;\nElement.prototype._onEl = elementOwnOnEl;\n\nElement.prototype._doneLeave = function () {\n    if (this.leaveDispose) {\n        if (!this.lifeCycle.disposed) {\n            elementDispose(\n                this,\n                this.disposeNoDetach,\n                this.disposeNoTransition\n            );\n        }\n    }\n    else if (this.lifeCycle.attached) {\n        removeEl(this.el);\n        this._toPhase('detached');\n    }\n};\n\n/**\n * 视图更新\n *\n * @param {Array} changes 数据变化信息\n */\nElement.prototype._update = function (changes) {\n    if (!changesIsInDataRef(changes, this.aNode.hotspot.data)) {\n        return;\n    }\n\n    var me = this;\n\n    var dynamicProps = this.aNode.hotspot.dynamicProps;\n    for (var i = 0, l = dynamicProps.length; i < l; i++) {\n        var prop = dynamicProps[i];\n\n        for (var j = 0, changeLen = changes.length; j < changeLen; j++) {\n            var change = changes[j];\n\n            if (!isDataChangeByElement(change, this, prop.name)\n                && (\n                    changeExprCompare(change.expr, prop.expr, this.scope)\n                    || prop.hintExpr && changeExprCompare(change.expr, prop.hintExpr, this.scope)\n                )\n            ) {\n                handleProp(this, evalExpr(prop.expr, this.scope, this.owner), prop);\n                break;\n            }\n        }\n    }\n\n    var htmlDirective = this.aNode.directives.html;\n    if (htmlDirective) {\n        each(changes, function (change) {\n            if (changeExprCompare(change.expr, htmlDirective.value, me.scope)) {\n                // #[begin] error\n                warnSetHTML(me.el);\n                // #[end]\n                me.el.innerHTML = evalExpr(htmlDirective.value, me.scope, me.owner);\n                return false;\n            }\n        });\n    }\n    else {\n        elementUpdateChildren(this, changes);\n    }\n};\n\n/**\n * 执行完成attached状态的行为\n */\nElement.prototype._attached = elementOwnAttached;\n\n// exports = module.exports = Element;\n\n\n/**\n * @file 销毁节点，清空节点上的无用成员\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 销毁节点\n *\n * @param {Object} node 节点对象\n */\nfunction nodeDispose(node) {\n    node.el = null;\n    node.sel = null;\n    node.owner = null;\n    node.scope = null;\n    node.aNode = null;\n    node.parent = null;\n    node.parentComponent = null;\n    node.children = null;\n\n    if (node._toPhase) {\n        node._toPhase('disposed');\n    }\n\n    if (node._ondisposed) {\n        node._ondisposed();\n    }\n}\n\n// exports = module.exports = nodeDispose;\n\n\n/**\n * @file 通过组件反解创建节点的工厂方法\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var hotTags = require('../browser/hot-tags');\n// var NodeType = require('./node-type');\n// var TextNode = require('./text-node');\n// var Element = require('./element');\n// var SlotNode = require('./slot-node');\n// var ForNode = require('./for-node');\n// var IfNode = require('./if-node');\n// var TemplateNode = require('./template-node');\n\n// #[begin] reverse\n/**\n * 通过组件反解创建节点\n *\n * @param {ANode} aNode 抽象节点\n * @param {DOMChildrenWalker} reverseWalker 子元素遍历对象\n * @param {Node} parent 父亲节点\n * @param {Model=} scope 所属数据环境\n * @return {Node}\n */\nfunction createReverseNode(aNode, reverseWalker, parent, scope) {\n    var parentIsComponent = parent.nodeType === NodeType.CMPT;\n    var owner = parentIsComponent ? parent : (parent.childOwner || parent.owner);\n    scope = scope || (parentIsComponent ? parent.data : (parent.childScope || parent.scope));\n\n    if (aNode.textExpr) {\n        return new TextNode(aNode, owner, scope, parent, reverseWalker);\n    }\n\n    if (aNode.directives['if']) { // eslint-disable-line dot-notation\n        return new IfNode(aNode, owner, scope, parent, reverseWalker);\n    }\n\n    if (aNode.directives['for']) { // eslint-disable-line dot-notation\n        return new ForNode(aNode, owner, scope, parent, reverseWalker);\n    }\n\n    if (hotTags[aNode.tagName]) {\n        return new Element(aNode, owner, scope, parent, reverseWalker);\n    }\n\n    switch (aNode.tagName) {\n        case 'slot':\n            return new SlotNode(aNode, owner, scope, parent, reverseWalker);\n\n        case 'template':\n            return new TemplateNode(aNode, owner, scope, parent, reverseWalker);\n\n        default:\n            var ComponentType = owner.getComponentType(aNode);\n            if (ComponentType) {\n                return new ComponentType({\n                    aNode: aNode,\n                    owner: owner,\n                    scope: scope,\n                    parent: parent,\n                    subTag: aNode.tagName,\n                    reverseWalker: reverseWalker\n                });\n            }\n    }\n\n    return new Element(aNode, owner, scope, parent, reverseWalker);\n}\n// #[end]\n\n// exports = module.exports = createReverseNode;\n\n\n/**\n * @file 销毁释放元素的子元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 销毁释放元素的子元素\n *\n * @param {Object} element 元素节点\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n * @param {boolean=} noTransition 是否不显示过渡动画效果\n */\nfunction elementDisposeChildren(element, noDetach, noTransition) {\n    var children = element.children;\n    var len = children && children.length;\n    while (len--) {\n        children[len].dispose(noDetach, noTransition);\n    }\n}\n\n// exports = module.exports = elementDisposeChildren;\n\n\n/**\n * @file 更新元素的子元素视图\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 更新元素的子元素视图\n *\n * @param {Object} element 要更新的元素\n * @param {Array} changes 数据变化信息\n */\nfunction elementUpdateChildren(element, changes) {\n    for (var i = 0, l = element.children.length; i < l; i++) {\n        element.children[i]._update(changes);\n    }\n}\n\n// exports = module.exports = elementUpdateChildren;\n\n\n/**\n * @file 使元素节点到达相应的生命周期\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var LifeCycle = require('./life-cycle');\n\n/**\n * 使元素节点到达相应的生命周期\n *\n * @param {string} name 生命周期名称\n */\nfunction elementOwnToPhase(name) {\n    this.lifeCycle = LifeCycle[name] || this.lifeCycle;\n}\n\n// exports = module.exports = elementOwnToPhase;\n\n\n/**\n * @file 创建节点的工厂方法\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var hotTags = require('../browser/hot-tags');\n// var NodeType = require('./node-type');\n// var TextNode = require('./text-node');\n// var Element = require('./element');\n// var SlotNode = require('./slot-node');\n// var ForNode = require('./for-node');\n// var IfNode = require('./if-node');\n// var TemplateNode = require('./template-node');\n\n\n/**\n * 创建节点\n *\n * @param {ANode} aNode 抽象节点\n * @param {Node} parent 父亲节点\n * @param {Model=} scope 所属数据环境\n * @return {Node}\n */\nfunction createNode(aNode, parent, scope) {\n    var parentIsComponent = parent.nodeType === NodeType.CMPT;\n    var owner = parentIsComponent ? parent : (parent.childOwner || parent.owner);\n    scope = scope || (parentIsComponent ? parent.data : (parent.childScope || parent.scope));\n\n\n    if (aNode.textExpr) {\n        return new TextNode(aNode, owner, scope, parent);\n    }\n\n    if (aNode.directives['if']) { // eslint-disable-line dot-notation\n        return new IfNode(aNode, owner, scope, parent);\n    }\n\n    if (aNode.directives['for']) { // eslint-disable-line dot-notation\n        return new ForNode(aNode, owner, scope, parent);\n    }\n\n    if (hotTags[aNode.tagName]) {\n        return new Element(aNode, owner, scope, parent);\n    }\n\n\n\n    switch (aNode.tagName) {\n        case 'slot':\n            return new SlotNode(aNode, owner, scope, parent);\n\n        case 'template':\n            return new TemplateNode(aNode, owner, scope, parent);\n\n        default:\n            var ComponentType = owner.getComponentType(aNode);\n            if (ComponentType) {\n                return new ComponentType({\n                    aNode: aNode,\n                    owner: owner,\n                    scope: scope,\n                    parent: parent,\n                    subTag: aNode.tagName\n                });\n            }\n    }\n\n    return new Element(aNode, owner, scope, parent);\n}\n\n// exports = module.exports = createNode;\n\n\n/**\n * @file 生成子元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var createNode = require('./create-node');\n\n/**\n * 生成子元素\n *\n * @param {Element} element 元素\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nfunction genElementChildren(element, parentEl, beforeEl) {\n    parentEl = parentEl || element.el;\n\n    var aNodeChildren = element.aNode.children;\n    for (var i = 0; i < aNodeChildren.length; i++) {\n        var child = createNode(aNodeChildren[i], element);\n        element.children.push(child);\n        child.attach(parentEl, beforeEl);\n    }\n}\n\n// exports = module.exports = genElementChildren;\n\n\n/**\n * @file 将没有 root 只有 children 的元素 attach 到页面\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var insertBefore = require('../browser/insert-before');\n// var genElementChildren = require('./gen-element-children');\n\n\n/**\n * 将没有 root 只有 children 的元素 attach 到页面\n * 主要用于 slot 和 template\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nfunction nodeOwnOnlyChildrenAttach(parentEl, beforeEl) {\n    this.sel = document.createComment(this.id);\n    insertBefore(this.sel, parentEl, beforeEl);\n\n    genElementChildren(this, parentEl, beforeEl);\n\n    this.el = document.createComment(this.id);\n    insertBefore(this.el, parentEl, beforeEl);\n\n    this._toPhase('attached');\n}\n\n// exports = module.exports = nodeOwnOnlyChildrenAttach;\n\n\n/**\n * @file slot 节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var createANode = require('../parser/create-a-node');\n// var ExprType = require('../parser/expr-type');\n// var createAccessor = require('../parser/create-accessor');\n// var evalExpr = require('../runtime/eval-expr');\n// var Data = require('../runtime/data');\n// var DataChangeType = require('../runtime/data-change-type');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var insertBefore = require('../browser/insert-before');\n// var NodeType = require('./node-type');\n// var LifeCycle = require('./life-cycle');\n// var getANodeProp = require('./get-a-node-prop');\n// var nodeDispose = require('./node-dispose');\n// var createReverseNode = require('./create-reverse-node');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var elementUpdateChildren = require('./element-update-children');\n// var elementOwnToPhase = require('./element-own-to-phase');\n// var nodeOwnOnlyChildrenAttach = require('./node-own-only-children-attach');\n\n\n/**\n * slot 节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction SlotNode(aNode, owner, scope, parent, reverseWalker) {\n    var realANode = createANode();\n    this.aNode = realANode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n    this.parentComponent = parent.nodeType === NodeType.CMPT\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n\n    this.lifeCycle = LifeCycle.start;\n    this.children = [];\n\n    // calc slot name\n    this.nameBind = getANodeProp(aNode, 'name');\n    if (this.nameBind) {\n        this.isNamed = true;\n        this.name = evalExpr(this.nameBind.expr, this.scope, this.owner);\n    }\n\n    // calc aNode children\n    var givenSlots = owner.givenSlots;\n    var givenChildren;\n    if (givenSlots) {\n        givenChildren = this.isNamed ? givenSlots.named[this.name] : givenSlots.noname;\n    }\n\n    if (givenChildren) {\n        this.isInserted = true;\n    }\n\n    realANode.children = givenChildren || aNode.children.slice(0);\n\n    var me = this;\n\n    // calc scoped slot vars\n    realANode.vars = aNode.vars;\n    var initData = {};\n    each(realANode.vars, function (varItem) {\n        me.isScoped = true;\n        initData[varItem.name] = evalExpr(varItem.expr, scope, owner);\n    });\n\n    // child owner & child scope\n    if (this.isInserted) {\n        this.childOwner = owner.owner;\n        this.childScope = owner.scope;\n    }\n\n    if (this.isScoped) {\n        this.childScope = new Data(initData, this.childScope || this.scope);\n    }\n\n\n    owner.slotChildren.push(this);\n\n    // #[begin] reverse\n    if (reverseWalker) {\n\n        this.sel = document.createComment(this.id);\n        insertBefore(this.sel, reverseWalker.target, reverseWalker.current);\n\n        each(this.aNode.children, function (aNodeChild) {\n            me.children.push(createReverseNode(aNodeChild, reverseWalker, me));\n        });\n\n        this.el = document.createComment(this.id);\n        insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n\n        this._toPhase('attached');\n    }\n    // #[end]\n}\n\nSlotNode.prototype.nodeType = NodeType.SLOT;\n\n/**\n * 销毁释放 slot\n *\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n * @param {boolean=} noTransition 是否不显示过渡动画效果\n */\nSlotNode.prototype.dispose = function (noDetach, noTransition) {\n    this.childOwner = null;\n    this.childScope = null;\n\n    elementDisposeChildren(this, noDetach, noTransition);\n    nodeDispose(this);\n};\n\nSlotNode.prototype.attach = nodeOwnOnlyChildrenAttach;\nSlotNode.prototype._toPhase = elementOwnToPhase;\n\n/**\n * 视图更新函数\n *\n * @param {Array} changes 数据变化信息\n * @param {boolean=} isFromOuter 变化信息是否来源于父组件之外的组件\n * @return {boolean}\n */\nSlotNode.prototype._update = function (changes, isFromOuter) {\n    var me = this;\n\n    if (this.nameBind && evalExpr(this.nameBind.expr, this.scope, this.owner) !== me.name) {\n        this.owner._notifyNeedReload();\n        return false;\n    }\n\n    if (isFromOuter) {\n        if (this.isInserted) {\n            elementUpdateChildren(this, changes);\n        }\n    }\n    else {\n        if (this.isScoped) {\n            each(this.aNode.vars, function (varItem) {\n                me.childScope.set(varItem.name, evalExpr(varItem.expr, me.scope, me.owner));\n            });\n\n\n            var scopedChanges = [];\n            each(changes, function (change) {\n                if (!me.isInserted) {\n                    scopedChanges.push(change);\n                }\n\n                each(me.aNode.vars, function (varItem) {\n                    var name = varItem.name;\n                    var relation = changeExprCompare(change.expr, varItem.expr, me.scope);\n\n                    if (relation < 1) {\n                        return;\n                    }\n\n                    if (change.type !== DataChangeType.SPLICE) {\n                        scopedChanges.push({\n                            type: DataChangeType.SET,\n                            expr: createAccessor([\n                                {type: ExprType.STRING, value: name}\n                            ]),\n                            value: me.childScope.get(name),\n                            option: change.option\n                        });\n                    }\n                    else if (relation === 2) {\n                        scopedChanges.push({\n                            expr: createAccessor([\n                                {type: ExprType.STRING, value: name}\n                            ]),\n                            type: DataChangeType.SPLICE,\n                            index: change.index,\n                            deleteCount: change.deleteCount,\n                            value: change.value,\n                            insertions: change.insertions,\n                            option: change.option\n                        });\n                    }\n                });\n            });\n\n            elementUpdateChildren(this, scopedChanges);\n        }\n        else if (!this.isInserted) {\n            elementUpdateChildren(this, changes);\n        }\n    }\n};\n\n// exports = module.exports = SlotNode;\n\n\n/**\n * @file 复制指令集合对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 复制指令集合对象\n *\n * @param {Object} source 要复制的指令集合对象\n * @param {Object=} excludes 需要排除的key集合\n * @return {Object}\n */\nfunction cloneDirectives(source, excludes) {\n    var result = {};\n    excludes = excludes || {};\n\n    for (var key in source) {\n        if (!excludes[key]) {\n            result[key] = source[key];\n        }\n    }\n\n    return result;\n}\n\n// exports = module.exports = cloneDirectives;\n\n\n/**\n * @file 简单执行销毁节点的行为\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var removeEl = require('../browser/remove-el');\n// var nodeDispose = require('./node-dispose');\n// var elementDisposeChildren = require('./element-dispose-children');\n\n/**\n * 简单执行销毁节点的行为\n *\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n */\nfunction nodeOwnSimpleDispose(noDetach) {\n    elementDisposeChildren(this, noDetach, 1);\n\n    if (!noDetach) {\n        removeEl(this.el);\n    }\n\n    nodeDispose(this);\n}\n\n// exports = module.exports = nodeOwnSimpleDispose;\n\n\n/**\n * @file 创建节点对应的 stump comment 元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n\n/**\n * 创建节点对应的 stump comment 主元素\n */\nfunction nodeOwnCreateStump() {\n    this.el = this.el || document.createComment(this.id);\n}\n\n// exports = module.exports = nodeOwnCreateStump;\n\n\n/**\n * @file for 指令节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var inherits = require('../util/inherits');\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var createANode = require('../parser/create-a-node');\n// var ExprType = require('../parser/expr-type');\n// var parseExpr = require('../parser/parse-expr');\n// var createAccessor = require('../parser/create-accessor');\n// var cloneDirectives = require('../parser/clone-directives');\n// var Data = require('../runtime/data');\n// var DataChangeType = require('../runtime/data-change-type');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var evalExpr = require('../runtime/eval-expr');\n// var changesIsInDataRef = require('../runtime/changes-is-in-data-ref');\n// var removeEl = require('../browser/remove-el');\n// var insertBefore = require('../browser/insert-before');\n// var LifeCycle = require('./life-cycle');\n// var NodeType = require('./node-type');\n// var createNode = require('./create-node');\n// var createReverseNode = require('./create-reverse-node');\n// var nodeOwnSimpleDispose = require('./node-own-simple-dispose');\n// var nodeOwnCreateStump = require('./node-own-create-stump');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var dataCache = require('../runtime/data-cache');\n\n\n/**\n * 循环项的数据容器类\n *\n * @inner\n * @class\n * @param {Object} forElement for元素对象\n * @param {*} item 当前项的数据\n * @param {number} index 当前项的索引\n */\nfunction ForItemData(forElement, item, index) {\n    this.id = guid();\n    this.parent = forElement.scope;\n    this.raw = {};\n    this.listeners = [];\n\n    this.directive = forElement.aNode.directives['for']; // eslint-disable-line dot-notation\n    this.raw[this.directive.item.raw] = item;\n    this.raw[this.directive.index.raw] = index;\n}\n\n/**\n * 将数据操作的表达式，转换成为对parent数据操作的表达式\n * 主要是对item和index进行处理\n *\n * @param {Object} expr 表达式\n * @return {Object}\n */\nForItemData.prototype.exprResolve = function (expr) {\n    var directive = this.directive;\n    var me = this;\n\n    function resolveItem(expr) {\n        if (expr.type === ExprType.ACCESSOR\n            && expr.paths[0].value === directive.item.paths[0].value\n        ) {\n            return createAccessor(\n                directive.value.paths.concat(\n                    {\n                        type: ExprType.NUMBER,\n                        value: me.get(directive.index)\n                    },\n                    expr.paths.slice(1)\n                )\n            );\n        }\n\n        return expr;\n    }\n\n    expr = resolveItem(expr);\n\n    var resolvedPaths = [];\n\n    each(expr.paths, function (item) {\n        resolvedPaths.push(\n            item.type === ExprType.ACCESSOR\n                && item.paths[0].value === directive.index.paths[0].value\n            ? {\n                type: ExprType.NUMBER,\n                value: me.get(directive.index)\n            }\n            : resolveItem(item)\n        );\n    });\n\n    return createAccessor(resolvedPaths);\n};\n\n// 代理数据操作方法\ninherits(ForItemData, Data);\neach(\n    ['set', 'remove', 'unshift', 'shift', 'push', 'pop', 'splice'],\n    function (method) {\n        ForItemData.prototype['_' + method] = Data.prototype[method];\n        ForItemData.prototype[method] = function (expr) {\n            expr = this.exprResolve(parseExpr(expr));\n            dataCache.clear();\n            this.parent[method].apply(\n                this.parent,\n                [expr].concat(Array.prototype.slice.call(arguments, 1))\n            );\n        };\n    }\n);\n\n/**\n * 创建 for 指令元素的子元素\n *\n * @inner\n * @param {ForDirective} forElement for 指令元素对象\n * @param {*} item 子元素对应数据\n * @param {number} index 子元素对应序号\n * @return {Element}\n */\nfunction createForDirectiveChild(forElement, item, index) {\n    var itemScope = new ForItemData(forElement, item, index);\n    return createNode(forElement.itemANode, forElement, itemScope);\n}\n\n/**\n * for 指令节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction ForNode(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n    this.parentComponent = parent.nodeType === NodeType.CMPT\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n    this.children = [];\n\n    this.itemANode = createANode({\n        children: aNode.children,\n        props: aNode.props,\n        events: aNode.events,\n        tagName: aNode.tagName,\n        vars: aNode.vars,\n        hotspot: aNode.hotspot,\n        directives: cloneDirectives(aNode.directives, {\n            'for': 1\n        })\n    });\n\n    this.param = aNode.directives['for']; // eslint-disable-line dot-notation\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        var me = this;\n        each(\n            evalExpr(this.param.value, this.scope, this.owner),\n            function (item, i) {\n                var itemScope = new ForItemData(me, item, i);\n                var child = createReverseNode(me.itemANode, reverseWalker, me, itemScope);\n                me.children.push(child);\n            }\n        );\n\n        this._create();\n        insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n    }\n    // #[end]\n}\n\n\nForNode.prototype.nodeType = NodeType.FOR;\nForNode.prototype._create = nodeOwnCreateStump;\nForNode.prototype.dispose = nodeOwnSimpleDispose;\n\n/**\n * 将元素attach到页面的行为\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nForNode.prototype.attach = function (parentEl, beforeEl) {\n    this._create();\n    insertBefore(this.el, parentEl, beforeEl);\n\n    // paint list\n    var el = this.el || parentEl.firstChild;\n    var data = evalExpr(this.param.value, this.scope, this.owner);\n    var len = data && data.length || 0;\n    for (var i = 0; i < len; i++) {\n        var child = createForDirectiveChild(this, data[i], i);\n        this.children.push(child);\n        child.attach(parentEl, el);\n    }\n};\n\n/**\n * 将元素从页面上移除的行为\n */\nForNode.prototype.detach = function () {\n    if (this.lifeCycle.attached) {\n        elementDisposeChildren(this);\n        this.children = [];\n        removeEl(this.el);\n        this.lifeCycle = LifeCycle.detached;\n    }\n};\n\n/* eslint-disable fecs-max-statements */\n\n/**\n * 视图更新函数\n *\n * @param {Array} changes 数据变化信息\n */\nForNode.prototype._update = function (changes) {\n\n    var me = this;\n    // 控制列表更新策略是否原样更新的变量\n    var originalUpdate = this.aNode.directives.transition;\n\n\n    var oldChildrenLen = this.children.length;\n    var childrenChanges = new Array(oldChildrenLen);\n\n    function pushToChildrenChanges(change) {\n        for (var i = 0, l = childrenChanges.length; i < l; i++) {\n            (childrenChanges[i] = childrenChanges[i] || []).push(change);\n        }\n    }\n\n    var disposeChildren = [];\n\n\n    // 判断列表是否父元素下唯一的元素\n    // 如果是的话，可以做一些更新优化\n    var parentEl = this.el.parentNode;\n    var parentFirstChild = parentEl.firstChild;\n    var parentLastChild = parentEl.lastChild;\n    var isOnlyParentChild = oldChildrenLen > 0 // 有孩子时\n            && parentFirstChild === this.children[0].el\n            && (parentLastChild === this.el || parentLastChild === this.children[oldChildrenLen - 1].el)\n        || oldChildrenLen === 0 // 无孩子时\n            && parentFirstChild === this.el\n            && parentLastChild === this.el;\n\n    // 控制列表是否整体更新的变量\n    var isChildrenRebuild;\n\n    var newList = evalExpr(this.param.value, this.scope, this.owner);\n    var newLen = newList && newList.length || 0;\n\n    /* eslint-disable no-redeclare */\n    for (var cIndex = 0, cLen = changes.length; cIndex < cLen; cIndex++) {\n        var change = changes[cIndex];\n        var relation = changeExprCompare(change.expr, this.param.value, this.scope);\n\n        if (!relation) {\n            // 无关时，直接传递给子元素更新，列表本身不需要动\n            pushToChildrenChanges(change);\n        }\n        else if (relation > 2) {\n            // 变更表达式是list绑定表达式的子项\n            // 只需要对相应的子项进行更新\n            var changePaths = change.expr.paths;\n            var forLen = this.param.value.paths.length;\n            var changeIndex = +evalExpr(changePaths[forLen], this.scope, this.owner);\n\n            if (isNaN(changeIndex)) {\n                pushToChildrenChanges(change);\n            }\n            else {\n                change = {\n                    type: change.type,\n                    expr: createAccessor(\n                        this.param.item.paths.concat(changePaths.slice(forLen + 1))\n                    ),\n                    value: change.value,\n                    index: change.index,\n                    deleteCount: change.deleteCount,\n                    insertions: change.insertions,\n                    option: change.option\n                };\n\n                (childrenChanges[changeIndex] = childrenChanges[changeIndex] || [])\n                    .push(change);\n\n                if (this.children[changeIndex]) {\n                    if (change.type === DataChangeType.SPLICE) {\n                        this.children[changeIndex].scope._splice(\n                            change.expr,\n                            [].concat(change.index, change.deleteCount, change.insertions),\n                            { silent: 1 }\n                        );\n                    }\n                    else {\n                        this.children[changeIndex].scope._set(\n                            change.expr,\n                            change.value,\n                            { silent: 1 }\n                        );\n                    }\n                }\n            }\n        }\n        else if (change.type !== DataChangeType.SPLICE) {\n            // 变更表达式是list绑定表达式本身或母项的重新设值\n            // 此时需要更新整个列表\n\n\n            // 老的比新的多的部分，标记需要dispose\n            if (oldChildrenLen > newLen) {\n                disposeChildren = disposeChildren.concat(this.children.slice(newLen));\n\n                childrenChanges = childrenChanges.slice(0, newLen);\n                this.children = this.children.slice(0, newLen);\n            }\n\n            // 整项变更\n            for (var i = 0; i < newLen; i++) {\n                (childrenChanges[i] = childrenChanges[i] || []).push({\n                    type: DataChangeType.SET,\n                    option: change.option,\n                    expr: createAccessor(this.param.item.paths.slice(0)),\n                    value: newList[i]\n                });\n\n                // 对list更上级数据的直接设置\n                if (relation < 2) {\n                    childrenChanges[i].push(change);\n                }\n\n                if (this.children[i]) {\n                    this.children[i].scope._set(\n                        this.param.item,\n                        newList[i],\n                        {silent: 1}\n                    );\n                }\n                else {\n                    this.children[i] = 0;\n                }\n            }\n\n            isChildrenRebuild = 1;\n        }\n        else if (relation === 2 && change.type === DataChangeType.SPLICE && !isChildrenRebuild) {\n            // 变更表达式是list绑定表达式本身数组的splice操作\n            // 此时需要删除部分项，创建部分项\n            var changeStart = change.index;\n            var deleteCount = change.deleteCount;\n            var insertionsLen = change.insertions.length;\n            var newCount = insertionsLen - deleteCount;\n\n            if (newCount) {\n                var indexChange = {\n                    type: DataChangeType.SET,\n                    option: change.option,\n                    expr: this.param.index\n                };\n\n                for (var i = changeStart + deleteCount; i < this.children.length; i++) {\n                    (childrenChanges[i] = childrenChanges[i] || []).push(indexChange);\n                    this.children[i] && this.children[i].scope._set(\n                        indexChange.expr,\n                        i - deleteCount + insertionsLen,\n                        {silent: 1}\n                    );\n                }\n            }\n\n            var deleteLen = deleteCount;\n            while (deleteLen--) {\n                if (deleteLen < insertionsLen) {\n                    var i = changeStart + deleteLen;\n                    // update\n                    (childrenChanges[i] = childrenChanges[i] || []).push({\n                        type: DataChangeType.SET,\n                        option: change.option,\n                        expr: createAccessor(this.param.item.paths.slice(0)),\n                        value: change.insertions[deleteLen]\n                    });\n                    if (this.children[i]) {\n                        this.children[i].scope._set(\n                            this.param.item,\n                            change.insertions[deleteLen],\n                            {silent: 1}\n                        );\n                    }\n                }\n            }\n\n            if (newCount < 0) {\n                disposeChildren = disposeChildren.concat(this.children.splice(changeStart + insertionsLen, -newCount));\n                childrenChanges.splice(changeStart + insertionsLen, -newCount);\n            }\n            else if (newCount > 0) {\n                var spliceArgs = [changeStart + deleteCount, 0].concat(new Array(newCount));\n                this.children.splice.apply(this.children, spliceArgs);\n                childrenChanges.splice.apply(childrenChanges, spliceArgs);\n            }\n        }\n    }\n\n    var newChildrenLen = this.children.length;\n\n    // 标记 length 是否发生变化\n    if (newChildrenLen !== oldChildrenLen) {\n        var lengthChange = {\n            type: DataChangeType.SET,\n            option: {},\n            expr: createAccessor(\n                this.param.value.paths.concat({\n                    type: ExprType.STRING,\n                    value: 'length'\n                })\n            )\n        };\n\n        if (changesIsInDataRef([lengthChange], this.aNode.hotspot.data)) {\n            pushToChildrenChanges(lengthChange);\n        }\n    }\n\n    // 清除应该干掉的 child\n    this._doCreateAndUpdate = doCreateAndUpdate;\n\n    // 这里不用getTransition，getTransition和scope相关，for和forItem的scope是不同的\n    // 所以getTransition结果本身也是不一致的。不如直接判断指令是否存在，如果存在就不进入暴力清除模式\n    // var violentClear = isOnlyParentChild && newChildrenLen === 0 && !elementGetTransition(me);\n    var violentClear = !originalUpdate && isOnlyParentChild && newChildrenLen === 0;\n\n    var disposedChildCount = 0;\n    for (var i = 0; i < disposeChildren.length; i++) {\n        var disposeChild = disposeChildren[i];\n        if (disposeChild) {\n            disposeChild._ondisposed = childDisposed;\n            disposeChild.dispose(violentClear, violentClear);\n        }\n        else {\n            childDisposed();\n        }\n    }\n\n    if (violentClear) {\n        // cloneNode + replaceChild is faster\n        // parentEl.innerHTML = '';\n        var replaceNode = parentEl.cloneNode(false);\n        parentEl.parentNode.replaceChild(replaceNode, parentEl);\n        this.el = document.createComment(this.id);\n        replaceNode.appendChild(this.el);\n    }\n\n    if (disposeChildren.length === 0) {\n        doCreateAndUpdate();\n    }\n\n\n    function childDisposed() {\n        disposedChildCount++;\n        if (disposedChildCount === disposeChildren.length\n            && doCreateAndUpdate === me._doCreateAndUpdate\n        ) {\n            doCreateAndUpdate();\n        }\n    }\n\n    function doCreateAndUpdate() {\n        me._doCreateAndUpdate = null;\n        if (violentClear) {\n            return;\n        }\n\n\n        var beforeEl = me.el;\n\n        // 对相应的项进行更新\n        if (oldChildrenLen === 0 && isOnlyParentChild) {\n            for (var i = 0; i < newChildrenLen; i++) {\n                me.children[i] = createForDirectiveChild(me, newList[i], i);\n                me.children[i].attach(parentEl, beforeEl);\n            }\n        }\n        else {\n            // 如果不attached则直接创建，如果存在则调用更新函数\n            var j = -1;\n            for (var i = 0; i < newChildrenLen; i++) {\n                var child = me.children[i];\n\n                if (child) {\n                    childrenChanges[i] && child._update(childrenChanges[i]);\n                }\n                else {\n                    if (j < i) {\n                        j = i + 1;\n                        beforeEl = null;\n                        while (j < newChildrenLen) {\n                            var nextChild = me.children[j];\n                            if (nextChild) {\n                                beforeEl = nextChild.sel || nextChild.el;\n                                break;\n                            }\n                            j++;\n                        }\n                    }\n\n                    me.children[i] = createForDirectiveChild(me, newList[i], i);\n                    me.children[i].attach(parentEl, beforeEl || me.el);\n                }\n            }\n        }\n    }\n};\n\n\n// exports = module.exports = ForNode;\n\n\n/**\n * @file 清洗条件 aNode\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var createANode = require('../parser/create-a-node');\n// var cloneDirectives = require('../parser/clone-directives');\n\n\n/**\n * 清洗条件 aNode，返回纯净无条件指令的 aNode\n *\n * @param {ANode} aNode 条件节点对象\n * @return {ANode}\n */\nfunction rinseCondANode(aNode) {\n    var clearANode = createANode({\n        children: aNode.children,\n        props: aNode.props,\n        events: aNode.events,\n        tagName: aNode.tagName,\n        vars: aNode.vars,\n        hotspot: aNode.hotspot,\n        directives: cloneDirectives(aNode.directives, {\n            'if': 1,\n            'else': 1,\n            'elif': 1\n        })\n    });\n\n    return clearANode;\n}\n\n// exports = module.exports = rinseCondANode;\n\n\n/**\n * @file if 指令节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var insertBefore = require('../browser/insert-before');\n// var evalExpr = require('../runtime/eval-expr');\n// var NodeType = require('./node-type');\n// var rinseCondANode = require('./rinse-cond-anode');\n// var createNode = require('./create-node');\n// var createReverseNode = require('./create-reverse-node');\n// var nodeOwnCreateStump = require('./node-own-create-stump');\n// var elementUpdateChildren = require('./element-update-children');\n// var nodeOwnSimpleDispose = require('./node-own-simple-dispose');\n\n/**\n * if 指令节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction IfNode(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n    this.parentComponent = parent.nodeType === NodeType.CMPT\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n    this.children = [];\n\n    this.cond = this.aNode.directives['if'].value; // eslint-disable-line dot-notation\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        if (evalExpr(this.cond, this.scope, this.owner)) {\n            this.elseIndex = -1;\n            this.children[0] = createReverseNode(\n                rinseCondANode(aNode),\n                reverseWalker,\n                this\n            );\n        }\n        else {\n            var me = this;\n            each(aNode.elses, function (elseANode, index) {\n                var elif = elseANode.directives.elif;\n\n                if (!elif || elif && evalExpr(elif.value, me.scope, me.owner)) {\n                    me.elseIndex = index;\n                    me.children[0] = createReverseNode(\n                        rinseCondANode(elseANode),\n                        reverseWalker,\n                        me\n                    );\n                    return false;\n                }\n            });\n        }\n\n        this._create();\n        insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n    }\n    // #[end]\n}\n\nIfNode.prototype.nodeType = NodeType.IF;\n\nIfNode.prototype._create = nodeOwnCreateStump;\nIfNode.prototype.dispose = nodeOwnSimpleDispose;\n\nIfNode.prototype.attach = function (parentEl, beforeEl) {\n    var me = this;\n    var elseIndex;\n    var child;\n\n    if (evalExpr(this.cond, this.scope, this.owner)) {\n        child = createNode(rinseCondANode(me.aNode), me);\n        elseIndex = -1;\n    }\n    else {\n        each(me.aNode.elses, function (elseANode, index) {\n            var elif = elseANode.directives.elif;\n\n            if (!elif || elif && evalExpr(elif.value, me.scope, me.owner)) {\n                child = createNode(rinseCondANode(elseANode), me);\n                elseIndex = index;\n                return false;\n            }\n        });\n    }\n\n    if (child) {\n        me.children[0] = child;\n        child.attach(parentEl, beforeEl);\n        me.elseIndex = elseIndex;\n    }\n\n\n    this._create();\n    insertBefore(this.el, parentEl, beforeEl);\n};\n\n\n/**\n * 视图更新函数\n *\n * @param {Array} changes 数据变化信息\n */\nIfNode.prototype._update = function (changes) {\n    var me = this;\n    var childANode = me.aNode;\n    var elseIndex;\n\n    if (evalExpr(this.cond, this.scope, this.owner)) {\n        elseIndex = -1;\n    }\n    else {\n        each(me.aNode.elses, function (elseANode, index) {\n            var elif = elseANode.directives.elif;\n\n            if (elif && evalExpr(elif.value, me.scope, me.owner) || !elif) {\n                elseIndex = index;\n                childANode = elseANode;\n                return false;\n            }\n        });\n    }\n\n    if (elseIndex === me.elseIndex) {\n        elementUpdateChildren(me, changes);\n    }\n    else {\n        var child = me.children[0];\n        me.children = [];\n        if (child) {\n            child._ondisposed = newChild;\n            child.dispose();\n        }\n        else {\n            newChild();\n        }\n\n        me.elseIndex = elseIndex;\n    }\n\n    function newChild() {\n        if (typeof elseIndex !== 'undefined') {\n            var child = createNode(rinseCondANode(childANode), me);\n            // var parentEl = getNodeStumpParent(me);\n            child.attach(me.el.parentNode, me.el);\n\n            me.children[0] = child;\n        }\n    }\n};\n\n// exports = module.exports = IfNode;\n\n\n/**\n * @file template 节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var insertBefore = require('../browser/insert-before');\n// var NodeType = require('./node-type');\n// var LifeCycle = require('./life-cycle');\n// var nodeDispose = require('./node-dispose');\n// var createReverseNode = require('./create-reverse-node');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var elementOwnToPhase = require('./element-own-to-phase');\n// var elementUpdateChildren = require('./element-update-children');\n// var nodeOwnOnlyChildrenAttach = require('./node-own-only-children-attach');\n\n/**\n * template 节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction TemplateNode(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n    this.parentComponent = parent.nodeType === NodeType.CMPT\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n    this.lifeCycle = LifeCycle.start;\n    this.children = [];\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        this.sel = document.createComment(this.id);\n        insertBefore(this.sel, reverseWalker.target, reverseWalker.current);\n\n        var me = this;\n        each(this.aNode.children, function (aNodeChild) {\n            me.children.push(createReverseNode(aNodeChild, reverseWalker, me));\n        });\n\n        this.el = document.createComment(this.id);\n        insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n\n        this._toPhase('attached');\n    }\n    // #[end]\n}\n\n\n\nTemplateNode.prototype.nodeType = NodeType.TPL;\n\nTemplateNode.prototype.attach = nodeOwnOnlyChildrenAttach;\n\n/**\n * 销毁释放\n *\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n * @param {boolean=} noTransition 是否不显示过渡动画效果\n */\nTemplateNode.prototype.dispose = function (noDetach, noTransition) {\n    elementDisposeChildren(this, noDetach, noTransition);\n    nodeDispose(this);\n};\n\n\nTemplateNode.prototype._toPhase = elementOwnToPhase;\n\n/**\n * 视图更新函数\n *\n * @param {Array} changes 数据变化信息\n */\nTemplateNode.prototype._update = function (changes) {\n    elementUpdateChildren(this, changes);\n};\n\n// exports = module.exports = TemplateNode;\n\n\n/**\n * @file 对元素的子节点进行反解\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var each = require('../util/each');\n// var DOMChildrenWalker = require('./dom-children-walker');\n// var createReverseNode = require('./create-reverse-node');\n\n// #[begin] reverse\n\n/**\n * 对元素的子节点进行反解\n *\n * @param {Object} element 元素\n */\nfunction reverseElementChildren(element) {\n    var htmlDirective = element.aNode.directives.html;\n\n    if (!htmlDirective) {\n        var reverseWalker = new DOMChildrenWalker(element.el);\n\n        each(element.aNode.children, function (aNodeChild) {\n            element.children.push(createReverseNode(aNodeChild, reverseWalker, element));\n        });\n    }\n}\n// #[end]\n\n// exports = module.exports = reverseElementChildren;\n\n\n/**\n * @file 处理元素的属性操作\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var getPropHandler = require('./get-prop-handler');\n\n/**\n * 处理元素属性操作\n *\n * @param {Object} element 元素对象\n * @param {*} value 属性值\n * @param {Object} prop 属性信息对象\n */\nfunction handleProp(element, value, prop) {\n    var name = prop.name;\n    getPropHandler(element.tagName, name).prop(element.el, value, name, element, prop);\n}\n\n// exports = module.exports = handleProp;\n\n\n/**\n * @file 创建节点对应的 HTMLElement 主元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var evalExpr = require('../runtime/eval-expr');\n// var createEl = require('../browser/create-el');\n// var handleProp = require('./handle-prop');\n// var LifeCycle = require('./life-cycle');\n// var NodeType = require('./node-type');\n\nvar emptyPropWhenCreate = {\n    'class': 1,\n    'style': 1,\n    'id': 1\n};\n\n/**\n * 创建节点对应的 HTMLElement 主元素\n */\nfunction elementOwnCreate() {\n    if (!this.lifeCycle.created) {\n        this.lifeCycle = LifeCycle.painting;\n\n        var isComponent = this.nodeType === NodeType.CMPT;\n        var sourceNode = this.aNode.hotspot.sourceNode;\n        var props = this.aNode.props;\n\n        if (sourceNode) {\n            this.el = sourceNode.cloneNode();\n            props = this.aNode.hotspot.dynamicProps;\n        }\n        else {\n            this.el = createEl(this.tagName);\n        }\n\n        for (var i = 0, l = props.length; i < l; i++) {\n            var prop = props[i];\n            var value = isComponent\n                ? evalExpr(prop.expr, this.data, this)\n                : evalExpr(prop.expr, this.scope, this.owner);\n\n            if (value || !emptyPropWhenCreate[prop.name]) {\n                handleProp(this, value, prop);\n            }\n        }\n\n        this._toPhase('created');\n    }\n}\n\n// exports = module.exports = elementOwnCreate;\n\n\n/**\n * @file 将元素attach到页面\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var createNode = require('./create-node');\n// var evalExpr = require('../runtime/eval-expr');\n// var insertBefore = require('../browser/insert-before');\n\n/**\n * 将元素attach到页面\n *\n * @param {Object} element 元素节点\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nfunction elementAttach(element, parentEl, beforeEl) {\n    element._create();\n    insertBefore(element.el, parentEl, beforeEl);\n\n    if (!element._contentReady) {\n        var htmlDirective = element.aNode.directives.html;\n\n        if (htmlDirective) {\n            element.el.innerHTML = evalExpr(htmlDirective.value, element.scope, element.owner);\n        }\n        else {\n            var aNodeChildren = element.aNode.children;\n            for (var i = 0; i < aNodeChildren.length; i++) {\n                var child = createNode(aNodeChildren[i], element);\n                element.children.push(child);\n                child.attach(element.el);\n            }\n        }\n\n        element._contentReady = 1;\n    }\n}\n\n\n// exports = module.exports = elementAttach;\n\n\n/**\n * @file 将元素attach到页面\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var elementAttach = require('./element-attach');\n\n/**\n * 将元素attach到页面\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nfunction elementOwnAttach(parentEl, beforeEl) {\n    if (!this.lifeCycle.attached) {\n        elementAttach(this, parentEl, beforeEl);\n        this._attached();\n    }\n}\n\n// exports = module.exports = elementOwnAttach;\n\n\n/**\n * @file 获取 element 的 transition 控制对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var evalArgs = require('../runtime/eval-args');\n// var findMethod = require('../runtime/find-method');\n// var NodeType = require('./node-type');\n\n/**\n * 获取 element 的 transition 控制对象\n *\n * @param {Object} element 元素\n * @return {Object?}\n */\nfunction elementGetTransition(element) {\n    var aNode = element.nodeType === NodeType.CMPT ? element.givenANode : element.aNode;\n    var directive = aNode && aNode.directives.transition;\n    var owner = element.owner;\n\n    var transition;\n    if (directive && owner) {\n        transition = findMethod(owner, directive.value.name);\n\n        if (typeof transition === 'function') {\n            transition = transition.apply(\n                owner,\n                evalArgs(directive.value.args, element.scope, owner)\n            );\n        }\n    }\n\n    return transition || element.transition;\n}\n\n// exports = module.exports = elementGetTransition;\n\n\n/**\n * @file 元素节点执行leave行为\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var elementGetTransition = require('./element-get-transition');\n\n\n/**\n * 元素节点执行leave行为\n *\n * @param {Object} element 元素\n */\nfunction elementLeave(element) {\n    var lifeCycle = element.lifeCycle;\n    if (lifeCycle.leaving) {\n        return;\n    }\n\n    if (element.disposeNoTransition) {\n        element._doneLeave();\n    }\n    else {\n        var transition = elementGetTransition(element);\n\n        if (transition && transition.leave) {\n            element._toPhase('leaving');\n            transition.leave(element.el, function () {\n                element._doneLeave();\n            });\n        }\n        else {\n            element._doneLeave();\n        }\n    }\n}\n\n// exports = module.exports = elementLeave;\n\n\n/**\n * @file 将元素从页面上移除\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var elementLeave = require('./element-leave');\n\n/**\n * 将元素从页面上移除\n */\nfunction elementOwnDetach() {\n    elementLeave(this);\n}\n\n\n// exports = module.exports = elementOwnDetach;\n\n\n/**\n * @file 销毁释放元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var elementLeave = require('./element-leave');\n\n/**\n * 销毁释放元素\n *\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n * @param {boolean=} noTransition 是否不显示过渡动画效果\n */\nfunction elementOwnDispose(noDetach, noTransition) {\n    this.leaveDispose = 1;\n    this.disposeNoDetach = noDetach;\n    this.disposeNoTransition = noTransition;\n\n    elementLeave(this);\n}\n\n// exports = module.exports = elementOwnDispose;\n\n\n/**\n * @file 为元素的 el 绑定事件\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var on = require('../browser/on');\n\n/**\n * 为元素的 el 绑定事件\n *\n * @param {string} name 事件名\n * @param {Function} listener 监听器\n * @param {boolean} capture 是否是捕获阶段触发\n */\nfunction elementOwnOnEl(name, listener, capture) {\n    if (typeof listener === 'function') {\n        capture = !!capture;\n        this._elFns.push([name, listener, capture]);\n        on(this.el, name, listener, capture);\n    }\n}\n\n// exports = module.exports = elementOwnOnEl;\n\n\n/**\n * @file  事件绑定不存在的 warning\n * @author varsha(wangshuonpu@gmail.com)\n */\n\n// var each = require('../util/each');\n\n// #[begin] error\n/**\n * 事件绑定不存在的 warning\n *\n * @param {Object} eventBind 事件绑定对象\n * @param {Component} owner 所属的组件对象\n */\nfunction warnEventListenMethod(eventBind, owner) {\n    var valid = true;\n    var method = owner;\n    each(eventBind.expr.name.paths, function (path) {\n        if (!path.value) {\n            return false;\n        }\n\n        method = method[path.value];\n        valid = !!method;\n        return valid;\n    });\n\n    if (!valid) {\n        var paths = [];\n        each(eventBind.expr.name.paths, function (path) {\n            paths.push(path.value);\n        });\n        var message = '[SAN WARNING] ' + eventBind.name + ' listen fail,\"' + paths.join('.') + '\" not exist';\n\n        /* eslint-disable no-console */\n        if (typeof console === 'object' && console.warn) {\n            console.warn(message);\n        }\n        else {\n            throw new Error(message);\n        }\n        /* eslint-enable no-console */\n    }\n}\n// #[end]\n\n// exports = module.exports = warnEventListenMethod;\n\n\n/**\n * @file 完成元素 attached 后的行为\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var bind = require('../util/bind');\n// var empty = require('../util/empty');\n// var isBrowser = require('../browser/is-browser');\n// var trigger = require('../browser/trigger');\n// var NodeType = require('./node-type');\n// var elementGetTransition = require('./element-get-transition');\n// var eventDeclarationListener = require('./event-declaration-listener');\n// var getPropHandler = require('./get-prop-handler');\n// var warnEventListenMethod = require('./warn-event-listen-method');\n\n/**\n * 双绑输入框CompositionEnd事件监听函数\n *\n * @inner\n */\nfunction inputOnCompositionEnd() {\n    if (!this.composing) {\n        return;\n    }\n\n    this.composing = 0;\n\n    trigger(this, 'input');\n}\n\n/**\n * 双绑输入框CompositionStart事件监听函数\n *\n * @inner\n */\nfunction inputOnCompositionStart() {\n    this.composing = 1;\n}\n\nfunction xPropOutputer(xProp, data) {\n    getPropHandler(this.tagName, xProp.name).output(this, xProp, data);\n}\n\nfunction inputXPropOutputer(element, xProp, data) {\n    var outputer = bind(xPropOutputer, element, xProp, data);\n    return function (e) {\n        if (!this.composing) {\n            outputer(e);\n        }\n    };\n}\n\n/**\n * 完成元素 attached 后的行为\n *\n * @param {Object} element 元素节点\n */\nfunction elementOwnAttached() {\n    this._toPhase('created');\n\n    var isComponent = this.nodeType === NodeType.CMPT;\n    var data = isComponent ? this.data : this.scope;\n\n    /* eslint-disable no-redeclare */\n\n    // 处理自身变化时双向绑定的逻辑\n    var xProps = this.aNode.hotspot.xProps;\n    for (var i = 0, l = xProps.length; i < l; i++) {\n        var xProp = xProps[i];\n\n        switch (xProp.name) {\n            case 'value':\n                switch (this.tagName) {\n                    case 'input':\n                    case 'textarea':\n                        if (isBrowser && window.CompositionEvent) {\n                            this._onEl('change', inputOnCompositionEnd);\n                            this._onEl('compositionstart', inputOnCompositionStart);\n                            this._onEl('compositionend', inputOnCompositionEnd);\n                        }\n\n                        this._onEl(\n                            ('oninput' in this.el) ? 'input' : 'propertychange',\n                            inputXPropOutputer(this, xProp, data)\n                        );\n\n                        break;\n\n                    case 'select':\n                        this._onEl('change', bind(xPropOutputer, this, xProp, data));\n                        break;\n                }\n                break;\n\n            case 'checked':\n                switch (this.tagName) {\n                    case 'input':\n                        switch (this.el.type) {\n                            case 'checkbox':\n                            case 'radio':\n                                this._onEl('click', bind(xPropOutputer, this, xProp, data));\n                        }\n                }\n                break;\n        }\n    }\n\n    // bind events\n    var events = isComponent\n        ? this.aNode.events.concat(this.nativeEvents)\n        : this.aNode.events;\n\n    for (var i = 0, l = events.length; i < l; i++) {\n        var eventBind = events[i];\n        var owner = isComponent ? this : this.owner;\n\n        // 判断是否是nativeEvent，下面的warn方法和事件绑定都需要\n        // 依此指定eventBind.expr.name位于owner还是owner.owner上\n        if (eventBind.modifier.native) {\n            owner = owner.owner;\n            data = this.scope || owner.data;\n        }\n\n        // #[begin] error\n        warnEventListenMethod(eventBind, owner);\n        // #[end]\n\n        this._onEl(\n            eventBind.name,\n            bind(\n                eventDeclarationListener,\n                owner,\n                eventBind,\n                0,\n                data\n            ),\n            eventBind.modifier.capture\n        );\n    }\n\n    this._toPhase('attached');\n\n\n    if (this._isInitFromEl) {\n        this._isInitFromEl = false;\n    }\n    else {\n        var transition = elementGetTransition(this);\n        if (transition && transition.enter) {\n            transition.enter(this.el, empty);\n        }\n    }\n}\n\n// exports = module.exports = elementOwnAttached;\n\n\n/**\n * @file 销毁元素节点\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var un = require('../browser/un');\n// var removeEl = require('../browser/remove-el');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var nodeDispose = require('./node-dispose');\n\n/**\n * 销毁元素节点\n *\n * @param {Object} element 要销毁的元素节点\n * @param {Object=} options 销毁行为的参数\n */\nfunction elementDispose(element) {\n    elementDisposeChildren(element, 1, 1);\n\n    // el 事件解绑\n    var len = element._elFns.length;\n    while (len--) {\n        var fn = element._elFns[len];\n        un(element.el, fn[0], fn[1], fn[2]);\n    }\n    element._elFns = null;\n\n\n    // 如果没有parent，说明是一个root component，一定要从dom树中remove\n    if (!element.disposeNoDetach || !element.parent) {\n        removeEl(element.el);\n    }\n\n    if (element._toPhase) {\n        element._toPhase('detached');\n    }\n\n    nodeDispose(element);\n}\n\n\n// exports = module.exports = elementDispose;\n\n\n/**\n * @file 初始化 element 节点的 tagName 处理\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ieOldThan9 = require('../browser/ie-old-than-9');\n\n/**\n * 初始化 element 节点的 tagName 处理\n *\n * @param {Object} node 节点对象\n */\nfunction elementInitTagName(node) {\n    node.tagName = node.tagName || node.aNode.tagName || 'div';\n\n    // #[begin] allua\n    // ie8- 不支持innerHTML输出自定义标签\n    if (ieOldThan9 && node.tagName.indexOf('-') > 0) {\n        node.tagName = 'div';\n    }\n    // #[end]\n}\n\n\n// exports = module.exports = elementInitTagName;\n\n\n/**\n * @file 给 devtool 发通知消息\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var isBrowser = require('../browser/is-browser');\n\n// #[begin] devtool\nvar san4devtool;\n\n/**\n * 给 devtool 发通知消息\n *\n * @param {string} name 消息名称\n * @param {*} arg 消息参数\n */\nfunction emitDevtool(name, arg) {\n    if (isBrowser && san4devtool && san4devtool.debug && window.__san_devtool__) {\n        window.__san_devtool__.emit(name, arg);\n    }\n}\n\nemitDevtool.start = function (main) {\n    san4devtool = main;\n    emitDevtool('san', main);\n};\n// #[end]\n\n// exports = module.exports = emitDevtool;\n\n\n/**\n * @file 组件类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var bind = require('../util/bind');\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var extend = require('../util/extend');\n// var nextTick = require('../util/next-tick');\n// var emitDevtool = require('../util/emit-devtool');\n// var ExprType = require('../parser/expr-type');\n// var parseExpr = require('../parser/parse-expr');\n// var createAccessor = require('../parser/create-accessor');\n// var postProp = require('../parser/post-prop');\n// var removeEl = require('../browser/remove-el');\n// var Data = require('../runtime/data');\n// var evalExpr = require('../runtime/eval-expr');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var compileComponent = require('./compile-component');\n// var componentPreheat = require('./component-preheat');\n// var LifeCycle = require('./life-cycle');\n// var getANodeProp = require('./get-a-node-prop');\n// var isDataChangeByElement = require('./is-data-change-by-element');\n// var eventDeclarationListener = require('./event-declaration-listener');\n// var reverseElementChildren = require('./reverse-element-children');\n// var camelComponentBinds = require('./camel-component-binds');\n// var NodeType = require('./node-type');\n// var elementInitTagName = require('./element-init-tag-name');\n// var elementOwnAttached = require('./element-own-attached');\n// var elementDispose = require('./element-dispose');\n// var elementUpdateChildren = require('./element-update-children');\n// var elementOwnOnEl = require('./element-own-on-el');\n// var elementOwnCreate = require('./element-own-create');\n// var elementOwnAttach = require('./element-own-attach');\n// var elementOwnDetach = require('./element-own-detach');\n// var elementOwnDispose = require('./element-own-dispose');\n// var warnEventListenMethod = require('./warn-event-listen-method');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var elementAttach = require('./element-attach');\n// var handleProp = require('./handle-prop');\n// var createDataTypesChecker = require('../util/create-data-types-checker');\n\n\n\n/**\n * 组件类\n *\n * @class\n * @param {Object} options 初始化参数\n */\nfunction Component(options) { // eslint-disable-line\n    options = options || {};\n\n    this.lifeCycle = LifeCycle.start;\n    this.children = [];\n    this._elFns = [];\n    this.listeners = {};\n    this.slotChildren = [];\n\n    var clazz = this.constructor;\n\n    this.filters = this.filters || clazz.filters || {};\n    this.computed = this.computed || clazz.computed || {};\n    this.messages = this.messages || clazz.messages || {};\n    this.subTag = options.subTag;\n\n    // compile\n    compileComponent(clazz);\n    componentPreheat(clazz);\n\n    var me = this;\n    var protoANode = clazz.prototype.aNode;\n\n    me.givenANode = options.aNode;\n    me.givenNamedSlotBinds = [];\n    me.givenSlots = {\n        named: {}\n    };\n\n    this.owner = options.owner;\n    this.scope = options.scope;\n    this.el = options.el;\n\n    var parent = options.parent;\n    if (parent) {\n        this.parent = parent;\n        this.parentComponent = parent.nodeType === NodeType.CMPT\n            ? parent\n            : parent && parent.parentComponent;\n    }\n\n    this.id = guid();\n\n    // #[begin] reverse\n    if (this.el) {\n        var firstCommentNode = this.el.firstChild;\n        if (firstCommentNode.nodeType === 3) {\n            firstCommentNode = firstCommentNode.nextSibling;\n        }\n\n        if (firstCommentNode && firstCommentNode.nodeType === 8) {\n            var stumpMatch = firstCommentNode.data.match(/^\\s*s-data:([\\s\\S]+)?$/);\n            if (stumpMatch) {\n                var stumpText = stumpMatch[1];\n\n                // fill component data\n                options.data = (new Function(\n                    'return ' + stumpText.replace(/^[\\s\\n]*/, '')\n                ))();\n\n                if (firstCommentNode.previousSibling) {\n                    removeEl(firstCommentNode.previousSibling);\n                }\n                removeEl(firstCommentNode);\n            }\n        }\n    }\n    // #[end]\n\n    // native事件数组\n    this.nativeEvents = [];\n\n    if (this.givenANode) {\n        // 组件运行时传入的结构，做slot解析\n        this._createGivenSlots();\n\n        each(this.givenANode.events, function (eventBind) {\n            // 保存当前实例的native事件，下面创建aNode时候做合并\n            if (eventBind.modifier.native) {\n                me.nativeEvents.push(eventBind);\n                return;\n            }\n\n            // #[begin] error\n            warnEventListenMethod(eventBind, options.owner);\n            // #[end]\n\n            me.on(\n                eventBind.name,\n                bind(eventDeclarationListener, options.owner, eventBind, 1, options.scope),\n                eventBind\n            );\n        });\n\n        this.tagName = protoANode.tagName || me.givenANode.tagName;\n        this.binds = camelComponentBinds(this.givenANode.props);\n    }\n\n    this._toPhase('compiled');\n\n    // init data\n    this.data = new Data(\n        extend(\n            typeof this.initData === 'function' && this.initData() || {},\n            options.data\n        )\n    );\n\n    elementInitTagName(this);\n\n    each(this.binds, function (bind) {\n        postProp(bind);\n\n        if (me.scope) {\n            var value = evalExpr(bind.expr, me.scope, me.owner);\n            if (typeof value !== 'undefined') {\n                // See: https://github.com/ecomfe/san/issues/191\n                me.data.set(bind.name, value);\n            }\n        }\n    });\n\n    // #[begin] error\n    // 在初始化 + 数据绑定后，开始数据校验\n    // NOTE: 只在开发版本中进行属性校验\n    var dataTypes = this.dataTypes || clazz.dataTypes;\n    if (dataTypes) {\n        var dataTypeChecker = createDataTypesChecker(\n            dataTypes,\n            this.subTag || this.name || clazz.name\n        );\n        this.data.setTypeChecker(dataTypeChecker);\n        this.data.checkDataTypes();\n    }\n    // #[end]\n\n    this.computedDeps = {};\n    /* eslint-disable guard-for-in */\n    for (var expr in this.computed) {\n        if (!this.computedDeps[expr]) {\n            this._calcComputed(expr);\n        }\n    }\n    /* eslint-enable guard-for-in */\n\n    if (!this.dataChanger) {\n        this.dataChanger = bind(this._dataChanger, this);\n        this.data.listen(this.dataChanger);\n    }\n    this._toPhase('inited');\n\n    // #[begin] reverse\n    if (this.el) {\n        reverseElementChildren(this);\n        this._attached();\n    }\n\n    var walker = options.reverseWalker;\n    if (walker) {\n        var currentNode = walker.current;\n        if (currentNode && currentNode.nodeType === 1) {\n            this.el = currentNode;\n            walker.goNext();\n        }\n\n        reverseElementChildren(this);\n\n        this._attached();\n    }\n    // #[end]\n}\n\n\n\nComponent.prototype.getComponentType = function (aNode) {\n    return this.components[aNode.tagName];\n};\n\n/**\n * 初始化创建组件外部传入的插槽对象\n *\n * @protected\n */\nComponent.prototype._createGivenSlots = function () {\n    var me = this;\n    me.givenSlots.named = {};\n\n    // 组件运行时传入的结构，做slot解析\n    me.givenANode && me.scope && each(me.givenANode.children, function (child) {\n        var target;\n\n        var slotBind = !child.textExpr && getANodeProp(child, 'slot');\n        if (slotBind) {\n            !me.givenSlotInited && me.givenNamedSlotBinds.push(slotBind);\n\n            var slotName = evalExpr(slotBind.expr, me.scope, me.owner);\n            target = me.givenSlots.named[slotName];\n            if (!target) {\n                target = me.givenSlots.named[slotName] = [];\n            }\n        }\n        else if (!me.givenSlotInited) {\n            target = me.givenSlots.noname;\n            if (!target) {\n                target = me.givenSlots.noname = [];\n            }\n        }\n\n        target && target.push(child);\n    });\n\n    me.givenSlotInited = true;\n};\n\n/**\n * 类型标识\n *\n * @type {string}\n */\nComponent.prototype.nodeType = NodeType.CMPT;\n\n/**\n * 在下一个更新周期运行函数\n *\n * @param {Function} fn 要运行的函数\n */\nComponent.prototype.nextTick = nextTick;\n\n/* eslint-disable operator-linebreak */\n/**\n * 使节点到达相应的生命周期\n *\n * @protected\n * @param {string} name 生命周期名称\n */\nComponent.prototype._callHook =\nComponent.prototype._toPhase = function (name) {\n    if (!this.lifeCycle[name]) {\n        this.lifeCycle = LifeCycle[name] || this.lifeCycle;\n        if (typeof this[name] === 'function') {\n            this[name]();\n        }\n\n        // 通知devtool\n        // #[begin] devtool\n        emitDevtool('comp-' + name, this);\n        // #[end]\n    }\n};\n/* eslint-enable operator-linebreak */\n\n\n/**\n * 添加事件监听器\n *\n * @param {string} name 事件名\n * @param {Function} listener 监听器\n * @param {string?} declaration 声明式\n */\nComponent.prototype.on = function (name, listener, declaration) {\n    if (typeof listener === 'function') {\n        if (!this.listeners[name]) {\n            this.listeners[name] = [];\n        }\n        this.listeners[name].push({fn: listener, declaration: declaration});\n    }\n};\n\n/**\n * 移除事件监听器\n *\n * @param {string} name 事件名\n * @param {Function=} listener 监听器\n */\nComponent.prototype.un = function (name, listener) {\n    var nameListeners = this.listeners[name];\n    var len = nameListeners && nameListeners.length;\n\n    while (len--) {\n        if (!listener || listener === nameListeners[len].fn) {\n            nameListeners.splice(len, 1);\n        }\n    }\n};\n\n\n/**\n * 派发事件\n *\n * @param {string} name 事件名\n * @param {Object} event 事件对象\n */\nComponent.prototype.fire = function (name, event) {\n    var me = this;\n    each(this.listeners[name], function (listener) {\n        listener.fn.call(me, event);\n    });\n};\n\n/**\n * 计算 computed 属性的值\n *\n * @private\n * @param {string} computedExpr computed表达式串\n */\nComponent.prototype._calcComputed = function (computedExpr) {\n    var computedDeps = this.computedDeps[computedExpr];\n    if (!computedDeps) {\n        computedDeps = this.computedDeps[computedExpr] = {};\n    }\n\n    this.data.set(computedExpr, this.computed[computedExpr].call({\n        data: {\n            get: bind(function (expr) {\n                // #[begin] error\n                if (!expr) {\n                    throw new Error('[SAN ERROR] call get method in computed need argument');\n                }\n                // #[end]\n\n                if (!computedDeps[expr]) {\n                    computedDeps[expr] = 1;\n\n                    if (this.computed[expr]) {\n                        this._calcComputed(expr);\n                    }\n\n                    this.watch(expr, function () {\n                        this._calcComputed(computedExpr);\n                    });\n                }\n\n                return this.data.get(expr);\n            }, this)\n        }\n    }));\n};\n\n/**\n * 派发消息\n * 组件可以派发消息，消息将沿着组件树向上传递，直到遇上第一个处理消息的组件\n *\n * @param {string} name 消息名称\n * @param {*?} value 消息值\n */\nComponent.prototype.dispatch = function (name, value) {\n    var parentComponent = this.parentComponent;\n\n    while (parentComponent) {\n        var receiver = parentComponent.messages[name] || parentComponent.messages['*'];\n        if (typeof receiver === 'function') {\n            receiver.call(\n                parentComponent,\n                {target: this, value: value, name: name}\n            );\n            break;\n        }\n\n        parentComponent = parentComponent.parentComponent;\n    }\n};\n\n/**\n * 获取组件内部的 slot\n *\n * @param {string=} name slot名称，空为default slot\n * @return {Array}\n */\nComponent.prototype.slot = function (name) {\n    var result = [];\n    var me = this;\n\n    function childrenTraversal(children) {\n        each(children, function (child) {\n            if (child.nodeType === NodeType.SLOT && child.owner === me) {\n                if (child.isNamed && child.name === name\n                    || !child.isNamed && !name\n                ) {\n                    result.push(child);\n                }\n            }\n            else {\n                childrenTraversal(child.children);\n            }\n        });\n    }\n\n    childrenTraversal(this.children);\n    return result;\n};\n\n/**\n * 获取带有 san-ref 指令的子组件引用\n *\n * @param {string} name 子组件的引用名\n * @return {Component}\n */\nComponent.prototype.ref = function (name) {\n    var refTarget;\n    var owner = this;\n\n    function childrenTraversal(children) {\n        each(children, function (child) {\n            elementTraversal(child);\n            return !refTarget;\n        });\n    }\n\n    function elementTraversal(element) {\n        var nodeType = element.nodeType;\n        if (nodeType === NodeType.TEXT) {\n            return;\n        }\n\n        if (element.owner === owner) {\n            var ref;\n            switch (element.nodeType) {\n                case NodeType.ELEM:\n                    ref = element.aNode.directives.ref;\n                    if (ref && evalExpr(ref.value, element.scope, owner) === name) {\n                        refTarget = element.el;\n                    }\n                    break;\n\n                case NodeType.CMPT:\n                    ref = element.givenANode.directives.ref;\n                    if (ref && evalExpr(ref.value, element.scope, owner) === name) {\n                        refTarget = element;\n                    }\n            }\n\n            !refTarget && childrenTraversal(element.slotChildren);\n        }\n\n        !refTarget && childrenTraversal(element.children);\n    }\n\n    childrenTraversal(this.children);\n\n    return refTarget;\n};\n\n\n/**\n * 视图更新函数\n *\n * @param {Array?} changes 数据变化信息\n */\nComponent.prototype._update = function (changes) {\n    if (this.lifeCycle.disposed) {\n        return;\n    }\n\n    var me = this;\n\n\n    var needReloadForSlot = false;\n    this._notifyNeedReload = function () {\n        needReloadForSlot = true;\n    };\n\n    if (changes) {\n        each(changes, function (change) {\n            var changeExpr = change.expr;\n\n            each(me.binds, function (bindItem) {\n                var relation;\n                var setExpr = bindItem.name;\n                var updateExpr = bindItem.expr;\n\n                if (!isDataChangeByElement(change, me, setExpr)\n                    && (relation = changeExprCompare(changeExpr, updateExpr, me.scope))\n                ) {\n                    if (relation > 2) {\n                        setExpr = createAccessor(\n                            [\n                                {\n                                    type: ExprType.STRING,\n                                    value: setExpr\n                                }\n                            ].concat(changeExpr.paths.slice(updateExpr.paths.length))\n                        );\n\n                        updateExpr = changeExpr;\n                    }\n\n                    me.data.set(setExpr, evalExpr(updateExpr, me.scope, me.owner), {\n                        target: {\n                            id: me.owner.id\n                        }\n                    });\n                }\n            });\n\n            each(me.givenNamedSlotBinds, function (bindItem) {\n                needReloadForSlot = needReloadForSlot || changeExprCompare(changeExpr, bindItem.expr, me.scope);\n                return !needReloadForSlot;\n            });\n        });\n\n        if (needReloadForSlot) {\n            this._createGivenSlots();\n            this._repaintChildren();\n        }\n        else {\n            var slotChildrenLen = this.slotChildren.length;\n            while (slotChildrenLen--) {\n                var slotChild = this.slotChildren[slotChildrenLen];\n\n                if (slotChild.lifeCycle.disposed) {\n                    this.slotChildren.splice(slotChildrenLen, 1);\n                }\n                else if (slotChild.isInserted) {\n                    slotChild._update(changes, 1);\n                }\n            }\n        }\n    }\n\n    var dataChanges = this.dataChanges;\n    if (dataChanges) {\n        this.dataChanges = null;\n        each(this.aNode.hotspot.dynamicProps, function (prop) {\n            each(dataChanges, function (change) {\n                if (changeExprCompare(change.expr, prop.expr, me.data)\n                    || prop.hintExpr && changeExprCompare(change.expr, prop.hintExpr, me.data)\n                ) {\n                    handleProp(me, evalExpr(prop.expr, me.data, me), prop);\n                    return false;\n                }\n            });\n        });\n\n        elementUpdateChildren(this, dataChanges);\n        if (needReloadForSlot) {\n            this._createGivenSlots();\n            this._repaintChildren();\n        }\n\n        this._toPhase('updated');\n\n        if (this.owner) {\n            this._updateBindxOwner(dataChanges);\n            this.owner._update();\n        }\n    }\n\n    this._notifyNeedReload = null;\n};\n\nComponent.prototype._updateBindxOwner = function (dataChanges) {\n    var me = this;\n\n    if (this.owner) {\n        each(dataChanges, function (change) {\n            each(me.binds, function (bindItem) {\n                var changeExpr = change.expr;\n                if (bindItem.x\n                    && !isDataChangeByElement(change, me.owner)\n                    && changeExprCompare(changeExpr, parseExpr(bindItem.name), me.data)\n                ) {\n                    var updateScopeExpr = bindItem.expr;\n                    if (changeExpr.paths.length > 1) {\n                        updateScopeExpr = createAccessor(\n                            bindItem.expr.paths.concat(changeExpr.paths.slice(1))\n                        );\n                    }\n\n                    me.scope.set(\n                        updateScopeExpr,\n                        evalExpr(changeExpr, me.data, me),\n                        {\n                            target: {\n                                id: me.id,\n                                prop: bindItem.name\n                            }\n                        }\n                    );\n                }\n            });\n        });\n    }\n};\n\n/**\n * 重新绘制组件的内容\n * 当 dynamic slot name 发生变更或 slot 匹配发生变化时，重新绘制\n * 在组件级别重绘有点粗暴，但是能保证视图结果正确性\n */\nComponent.prototype._repaintChildren = function () {\n    elementDisposeChildren(this, 0, 1);\n    this.children = [];\n\n    this._contentReady = 0;\n    this.slotChildren = [];\n    elementAttach(this);\n};\n\n\n/**\n * 组件内部监听数据变化的函数\n *\n * @private\n * @param {Object} change 数据变化信息\n */\nComponent.prototype._dataChanger = function (change) {\n    if (this.lifeCycle.painting || this.lifeCycle.created) {\n        if (!this.dataChanges) {\n            nextTick(this._update, this);\n            this.dataChanges = [];\n        }\n\n        this.dataChanges.push(change);\n    }\n    else if (this.lifeCycle.inited && this.owner) {\n        this._updateBindxOwner([change]);\n    }\n};\n\n\n/**\n * 监听组件的数据变化\n *\n * @param {string} dataName 变化的数据项\n * @param {Function} listener 监听函数\n */\nComponent.prototype.watch = function (dataName, listener) {\n    var dataExpr = parseExpr(dataName);\n\n    this.data.listen(bind(function (change) {\n        if (changeExprCompare(change.expr, dataExpr, this.data)) {\n            listener.call(this, evalExpr(dataExpr, this.data, this), change);\n        }\n    }, this));\n};\n\n/**\n * 组件销毁的行为\n *\n * @param {Object} options 销毁行为的参数\n */\nComponent.prototype.dispose = elementOwnDispose;\n\nComponent.prototype._doneLeave = function () {\n    if (this.leaveDispose) {\n        if (!this.lifeCycle.disposed) {\n            // 这里不用挨个调用 dispose 了，因为 children 释放链会调用的\n            this.slotChildren = null;\n\n            this.data.unlisten();\n            this.dataChanger = null;\n            this.dataChanges = null;\n\n            elementDispose(\n                this,\n                this.disposeNoDetach,\n                this.disposeNoTransition\n            );\n            this.listeners = null;\n\n            this.givenANode = null;\n            this.givenSlots = null;\n            this.givenNamedSlotBinds = null;\n        }\n    }\n    else if (this.lifeCycle.attached) {\n        removeEl(this.el);\n        this._toPhase('detached');\n    }\n};\n\n/**\n * 完成组件 attached 后的行为\n *\n * @param {Object} element 元素节点\n */\nComponent.prototype._attached = elementOwnAttached;\n\nComponent.prototype.attach = elementOwnAttach;\nComponent.prototype.detach = elementOwnDetach;\nComponent.prototype._create = elementOwnCreate;\nComponent.prototype._onEl = elementOwnOnEl;\n\n\n// exports = module.exports = Component;\n\n\n/**\n * @file 创建组件类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var Component = require('./component');\n// var inherits = require('../util/inherits');\n\n/**\n * 创建组件类\n *\n * @param {Object} proto 组件类的方法表\n * @return {Function}\n */\nfunction defineComponent(proto) {\n    // 如果传入一个不是 san component 的 constructor，直接返回不是组件构造函数\n    // 这种场景导致的错误 san 不予考虑\n    if (typeof proto === 'function') {\n        return proto;\n    }\n\n    // #[begin] error\n    if (typeof proto !== 'object') {\n        throw new Error('[SAN FATAL] param must be a plain object.');\n    }\n    // #[end]\n\n    function ComponentClass(option) { // eslint-disable-line\n        Component.call(this, option);\n    }\n\n    ComponentClass.prototype = proto;\n    inherits(ComponentClass, Component);\n\n    return ComponentClass;\n}\n\n// exports = module.exports = defineComponent;\n\n\n/**\n * @file 编译组件类\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var createANode = require('../parser/create-a-node');\n// var parseTemplate = require('../parser/parse-template');\n// var parseText = require('../parser/parse-text');\n// var defineComponent = require('./define-component');\n\n\n/**\n * 编译组件类。预解析template和components\n *\n * @param {Function} ComponentClass 组件类\n */\nfunction compileComponent(ComponentClass) {\n    var proto = ComponentClass.prototype;\n\n    // pre define components class\n    if (!proto.hasOwnProperty('_cmptReady')) {\n        proto.components = ComponentClass.components || proto.components || {};\n        var components = proto.components;\n\n        for (var key in components) { // eslint-disable-line\n            var componentClass = components[key];\n\n            if (typeof componentClass === 'object') {\n                components[key] = defineComponent(componentClass);\n            }\n            else if (componentClass === 'self') {\n                components[key] = ComponentClass;\n            }\n        }\n\n        proto._cmptReady = 1;\n    }\n\n\n    // pre compile template\n    if (!proto.hasOwnProperty('aNode')) {\n        proto.aNode = createANode();\n\n        var tpl = ComponentClass.template || proto.template;\n        if (tpl) {\n            var aNode = parseTemplate(tpl, {\n                trimWhitespace: proto.trimWhitespace || ComponentClass.trimWhitespace,\n                delimiters: proto.delimiters || ComponentClass.delimiters\n            });\n            var firstChild = aNode.children[0];\n\n            // #[begin] error\n            if (aNode.children.length !== 1 || firstChild.textExpr) {\n                throw new Error('[SAN FATAL] template must have a root element.');\n            }\n            // #[end]\n\n            proto.aNode = firstChild;\n            if (firstChild.tagName === 'template') {\n                firstChild.tagName = null;\n            }\n\n            var componentPropExtra = {\n                'class': {name: 'class', expr: parseText('{{class | _class | _sep(\" \")}}')},\n                'style': {name: 'style', expr: parseText('{{style | _style | _sep(\";\")}}')},\n                'id': {name: 'id', expr: parseText('{{id}}')}\n            };\n\n            var len = firstChild.props.length;\n            while (len--) {\n                var prop = firstChild.props[len];\n                var extra = componentPropExtra[prop.name];\n\n                if (extra) {\n                    firstChild.props.splice(len, 1);\n                    componentPropExtra[prop.name] = prop;\n\n                    if (prop.name !== 'id') {\n                        prop.expr.segs.push(extra.expr.segs[0]);\n                        prop.expr.value = null;\n                    }\n                }\n            }\n\n            firstChild.props.push(\n                componentPropExtra['class'], // eslint-disable-line dot-notation\n                componentPropExtra.style,\n                componentPropExtra.id\n            );\n        }\n    }\n}\n\n// exports = module.exports = compileComponent;\n\n\n/**\n * @file 组件预热\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n// var each = require('../util/each');\n// var createEl = require('../browser/create-el');\n// var getPropHandler = require('./get-prop-handler');\n// var getANodeProp = require('./get-a-node-prop');\n// var isBrowser = require('../browser/is-browser');\n\n/**\n * 组件预热，分析组件aNode的数据引用等信息\n *\n * @param {Function} ComponentClass 组件类\n */\nfunction componentPreheat(ComponentClass) {\n    var stack = [];\n\n    function recordHotspotData(refs, notContentData) {\n        var len = stack.length;\n        each(stack, function (aNode, index) {\n            if (!notContentData || index !== len - 1) {\n                each(refs, function (ref) {\n                    aNode.hotspot.data[ref] = 1;\n                });\n            }\n        });\n    }\n\n\n    function analyseANodeHotspot(aNode) {\n        if (!aNode.hotspot) {\n            stack.push(aNode);\n\n\n            if (aNode.textExpr) {\n                aNode.hotspot = {data: {}};\n                recordHotspotData(analyseExprDataHotspot(aNode.textExpr));\n            }\n            else {\n                var sourceNode;\n                if (isBrowser && aNode.tagName && !/^(template|slot|select|input|option)$/i.test(aNode.tagName)) {\n                    sourceNode = createEl(aNode.tagName);\n                }\n\n                aNode.hotspot = {\n                    data: {},\n                    dynamicProps: [],\n                    xProps: [],\n                    props: {},\n                    sourceNode: sourceNode\n                };\n\n\n                // === analyse hotspot data: start\n                each(aNode.vars, function (varItem) {\n                    recordHotspotData(analyseExprDataHotspot(varItem.expr));\n                });\n\n                each(aNode.props, function (prop) {\n                    recordHotspotData(analyseExprDataHotspot(prop.expr));\n                });\n\n                /* eslint-disable guard-for-in */\n                for (var key in aNode.directives) {\n                    var directive = aNode.directives[key];\n                    recordHotspotData(analyseExprDataHotspot(directive.value), key !== 'html');\n                }\n                /* eslint-enable guard-for-in */\n\n                each(aNode.elses, function (child) {\n                    analyseANodeHotspot(child);\n                });\n\n                each(aNode.children, function (child) {\n                    analyseANodeHotspot(child);\n                });\n                // === analyse hotspot data: end\n\n\n                // === analyse hotspot props: start\n                each(aNode.props, function (prop, index) {\n                    aNode.hotspot.props[prop.name] = index;\n\n                    if (prop.name === 'id') {\n                        prop.id = true;\n                        aNode.hotspot.idProp = prop;\n                        aNode.hotspot.dynamicProps.push(prop);\n                    }\n                    else if (prop.expr.value != null) {\n                        if (sourceNode) {\n                            getPropHandler(aNode.tagName, prop.name)\n                                .prop(sourceNode, prop.expr.value, prop.name, aNode);\n                        }\n                    }\n                    else {\n                        if (prop.x) {\n                            aNode.hotspot.xProps.push(prop);\n                        }\n                        aNode.hotspot.dynamicProps.push(prop);\n                    }\n                });\n\n                // ie 下，如果 option 没有 value 属性，select.value = xx 操作不会选中 option\n                // 所以没有设置 value 时，默认把 option 的内容作为 value\n                if (aNode.tagName === 'option'\n                    && !getANodeProp(aNode, 'value')\n                    && aNode.children[0]\n                ) {\n                    var valueProp = {\n                        name: 'value',\n                        expr: aNode.children[0].textExpr\n                    };\n                    aNode.props.push(valueProp);\n                    aNode.hotspot.dynamicProps.push(valueProp);\n                    aNode.hotspot.props.value = aNode.props.length - 1;\n                }\n                // === analyse hotspot props: end\n            }\n\n            stack.pop();\n        }\n    }\n\n    analyseANodeHotspot(ComponentClass.prototype.aNode);\n}\n\n/**\n * 分析表达式的数据引用\n *\n * @param {Object} expr 要分析的表达式\n * @return {Array}\n */\nfunction analyseExprDataHotspot(expr) {\n    var refs = [];\n\n    function analyseExprs(exprs) {\n        each(exprs, function (expr) {\n            refs = refs.concat(analyseExprDataHotspot(expr));\n        });\n    }\n\n    switch (expr.type) {\n        case ExprType.ACCESSOR:\n            var paths = expr.paths;\n            refs.push(paths[0].value);\n\n            if (paths.length > 1) {\n                refs.push(paths[0].value + '.' + (paths[1].value || '*'));\n            }\n\n            analyseExprs(paths.slice(1));\n            break;\n\n        case ExprType.UNARY:\n            return analyseExprDataHotspot(expr.expr);\n\n        case ExprType.TEXT:\n        case ExprType.BINARY:\n        case ExprType.TERTIARY:\n            analyseExprs(expr.segs);\n            break;\n\n        case ExprType.INTERP:\n            refs = analyseExprDataHotspot(expr.expr);\n\n            each(expr.filters, function (filter) {\n                analyseExprs(filter.name.paths);\n                analyseExprs(filter.args);\n            });\n\n            break;\n\n    }\n\n    return refs;\n}\n\n// exports = module.exports = componentPreheat;\n\n\n/**\n * @file 将 binds 的 name 从 kebabcase 转换成 camelcase\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var kebab2camel = require('../util/kebab2camel');\n// var each = require('../util/each');\n\n/**\n * 将 binds 的 name 从 kebabcase 转换成 camelcase\n *\n * @param {Array} binds binds集合\n * @return {Array}\n */\nfunction camelComponentBinds(binds) {\n    var result = [];\n    each(binds, function (bind) {\n        result.push({\n            name: kebab2camel(bind.name),\n            expr: bind.expr,\n            x: bind.x,\n            raw: bind.raw\n        });\n    });\n\n    return result;\n}\n\n// exports = module.exports = camelComponentBinds;\n\n\n/**\n * @file 编译源码的 helper 方法集合\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var ExprType = require('../parser/expr-type');\n\n// #[begin] ssr\n// \n// /**\n//  * 编译源码的 helper 方法集合对象\n//  */\n// var compileExprSource = {\n// \n//     /**\n//      * 字符串字面化\n//      *\n//      * @param {string} source 需要字面化的字符串\n//      * @return {string} 字符串字面化结果\n//      */\n//     stringLiteralize: function (source) {\n//         return '\"'\n//             + source\n//                 .replace(/\\x5C/g, '\\\\\\\\')\n//                 .replace(/\"/g, '\\\\\"')\n//                 .replace(/\\x0A/g, '\\\\n')\n//                 .replace(/\\x09/g, '\\\\t')\n//                 .replace(/\\x0D/g, '\\\\r')\n//                 // .replace( /\\x08/g, '\\\\b' )\n//                 // .replace( /\\x0C/g, '\\\\f' )\n//             + '\"';\n//     },\n// \n//     /**\n//      * 生成数据访问表达式代码\n//      *\n//      * @param {Object?} accessorExpr accessor表达式对象\n//      * @return {string}\n//      */\n//     dataAccess: function (accessorExpr) {\n//         var code = 'componentCtx.data';\n//         if (accessorExpr) {\n//             each(accessorExpr.paths, function (path) {\n//                 if (path.type === ExprType.ACCESSOR) {\n//                     code += '[' + compileExprSource.dataAccess(path) + ']';\n//                     return;\n//                 }\n// \n//                 switch (typeof path.value) {\n//                     case 'string':\n//                         code += '.' + path.value;\n//                         break;\n// \n//                     case 'number':\n//                         code += '[' + path.value + ']';\n//                         break;\n//                 }\n//             });\n//         }\n// \n//         return code;\n//     },\n// \n//     /**\n//      * 生成插值代码\n//      *\n//      * @param {Object} interpExpr 插值表达式对象\n//      * @return {string}\n//      */\n//     interp: function (interpExpr) {\n//         var code = compileExprSource.expr(interpExpr.expr);\n// \n// \n//         each(interpExpr.filters, function (filter) {\n//             code = 'componentCtx.callFilter(\"' + filter.name.paths[0].value + '\", [' + code;\n//             each(filter.args, function (arg) {\n//                 code += ', ' + compileExprSource.expr(arg);\n//             });\n//             code += '])';\n//         });\n// \n//         if (!interpExpr.original) {\n//             return 'escapeHTML(' + code + ')';\n//         }\n// \n//         return code;\n//     },\n// \n//     /**\n//      * 生成文本片段代码\n//      *\n//      * @param {Object} textExpr 文本片段表达式对象\n//      * @return {string}\n//      */\n//     text: function (textExpr) {\n//         if (textExpr.segs.length === 0) {\n//             return '\"\"';\n//         }\n// \n//         var code = '';\n// \n//         each(textExpr.segs, function (seg) {\n//             var segCode = compileExprSource.expr(seg);\n//             code += code ? ' + ' + segCode : segCode;\n//         });\n// \n//         return code;\n//     },\n// \n//     /**\n//      * 二元表达式操作符映射表\n//      *\n//      * @type {Object}\n//      */\n//     binaryOp: {\n//         /* eslint-disable */\n//         43: '+',\n//         45: '-',\n//         42: '*',\n//         47: '/',\n//         60: '<',\n//         62: '>',\n//         76: '&&',\n//         94: '!=',\n//         121: '<=',\n//         122: '==',\n//         123: '>=',\n//         155: '!==',\n//         183: '===',\n//         248: '||'\n//         /* eslint-enable */\n//     },\n// \n//     /**\n//      * 生成表达式代码\n//      *\n//      * @param {Object} expr 表达式对象\n//      * @return {string}\n//      */\n//     expr: function (expr) {\n//         switch (expr.type) {\n//             case ExprType.UNARY:\n//                 return '!' + compileExprSource.expr(expr.expr);\n// \n//             case ExprType.BINARY:\n//                 return compileExprSource.expr(expr.segs[0])\n//                     + compileExprSource.binaryOp[expr.operator]\n//                     + compileExprSource.expr(expr.segs[1]);\n// \n//             case ExprType.TERTIARY:\n//                 return compileExprSource.expr(expr.segs[0])\n//                     + '?' + compileExprSource.expr(expr.segs[1])\n//                     + ':' + compileExprSource.expr(expr.segs[2]);\n// \n//             case ExprType.STRING:\n//                 return compileExprSource.stringLiteralize(expr.literal || expr.value);\n// \n//             case ExprType.NUMBER:\n//                 return expr.value;\n// \n//             case ExprType.BOOL:\n//                 return expr.value ? 'true' : 'false';\n// \n//             case ExprType.ACCESSOR:\n//                 return compileExprSource.dataAccess(expr);\n// \n//             case ExprType.INTERP:\n//                 return compileExprSource.interp(expr);\n// \n//             case ExprType.TEXT:\n//                 return compileExprSource.text(expr);\n//         }\n//     }\n// };\n// #[end]\n\n// exports = module.exports = compileExprSource;\n\n\n/**\n * @file 编译源码的中间buffer类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var compileExprSource = require('./compile-expr-source');\n\n\n// #[begin] ssr\n// /**\n//  * 编译源码的中间buffer类\n//  *\n//  * @class\n//  */\n// function CompileSourceBuffer() {\n//     this.segs = [];\n// }\n// \n// /**\n//  * 添加原始代码，将原封不动输出\n//  *\n//  * @param {string} code 原始代码\n//  */\n// CompileSourceBuffer.prototype.addRaw = function (code) {\n//     this.segs.push({\n//         type: 'RAW',\n//         code: code\n//     });\n// };\n// \n// /**\n//  * 添加被拼接为html的原始代码\n//  *\n//  * @param {string} code 原始代码\n//  */\n// CompileSourceBuffer.prototype.joinRaw = function (code) {\n//     this.segs.push({\n//         type: 'JOIN_RAW',\n//         code: code\n//     });\n// };\n// \n// /**\n//  * 添加renderer方法的起始源码\n//  */\n// CompileSourceBuffer.prototype.addRendererStart = function () {\n//     this.addRaw('function (data, parentCtx, givenSlots) {');\n//     this.addRaw('var html = \"\";');\n// };\n// \n// /**\n//  * 添加renderer方法的结束源码\n//  */\n// CompileSourceBuffer.prototype.addRendererEnd = function () {\n//     this.addRaw('return html;');\n//     this.addRaw('}');\n// };\n// \n// /**\n//  * 添加被拼接为html的静态字符串\n//  *\n//  * @param {string} str 被拼接的字符串\n//  */\n// CompileSourceBuffer.prototype.joinString = function (str) {\n//     this.segs.push({\n//         str: str,\n//         type: 'JOIN_STRING'\n//     });\n// };\n// \n// /**\n//  * 添加被拼接为html的数据访问\n//  *\n//  * @param {Object?} accessor 数据访问表达式对象\n//  */\n// CompileSourceBuffer.prototype.joinDataStringify = function () {\n//     this.segs.push({\n//         type: 'JOIN_DATA_STRINGIFY'\n//     });\n// };\n// \n// /**\n//  * 添加被拼接为html的表达式\n//  *\n//  * @param {Object} expr 表达式对象\n//  */\n// CompileSourceBuffer.prototype.joinExpr = function (expr) {\n//     this.segs.push({\n//         expr: expr,\n//         type: 'JOIN_EXPR'\n//     });\n// };\n// \n// /**\n//  * 生成编译后代码\n//  *\n//  * @return {string}\n//  */\n// CompileSourceBuffer.prototype.toCode = function () {\n//     var code = [];\n//     var temp = '';\n// \n//     function genStrLiteral() {\n//         if (temp) {\n//             code.push('html += ' + compileExprSource.stringLiteralize(temp) + ';');\n//         }\n// \n//         temp = '';\n//     }\n// \n//     each(this.segs, function (seg) {\n//         if (seg.type === 'JOIN_STRING') {\n//             temp += seg.str;\n//             return;\n//         }\n// \n//         genStrLiteral();\n//         switch (seg.type) {\n//             case 'JOIN_DATA_STRINGIFY':\n//                 code.push('html += stringifier.any(' + compileExprSource.dataAccess() + ');');\n//                 break;\n// \n//             case 'JOIN_EXPR':\n//                 code.push('html += ' + compileExprSource.expr(seg.expr) + ';');\n//                 break;\n// \n//             case 'JOIN_RAW':\n//                 code.push('html += ' + seg.code + ';');\n//                 break;\n// \n//             case 'RAW':\n//                 code.push(seg.code);\n//                 break;\n// \n//         }\n//     });\n// \n//     genStrLiteral();\n// \n//     return code.join('\\n');\n// };\n// \n// #[end]\n\n// exports = module.exports = CompileSourceBuffer;\n\n\n/**\n * @file 将组件编译成 render 方法的 js 源码\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var parseExpr = require('../parser/parse-expr');\n// var createANode = require('../parser/create-a-node');\n// var cloneDirectives = require('../parser/clone-directives');\n// var autoCloseTags = require('../browser/auto-close-tags');\n// var CompileSourceBuffer = require('./compile-source-buffer');\n// var compileExprSource = require('./compile-expr-source');\n// var rinseCondANode = require('./rinse-cond-anode');\n// var getANodeProp = require('./get-a-node-prop');\n\n// #[begin] ssr\n// \n// /**\n//  * 生成序列化时起始桩的html\n//  *\n//  * @param {string} type 桩类型标识\n//  * @param {string?} content 桩内的内容\n//  * @return {string}\n//  */\n// function serializeStump(type, content) {\n//     return '<!--s-' + type + (content ? ':' + content : '') + '-->';\n// }\n// \n// /**\n//  * 生成序列化时结束桩的html\n//  *\n//  * @param {string} type 桩类型标识\n//  * @return {string}\n//  */\n// function serializeStumpEnd(type) {\n//     return '<!--/s-' + type + '-->';\n// }\n// \n// /**\n//  * element 的编译方法集合对象\n//  *\n//  * @inner\n//  */\n// var elementSourceCompiler = {\n// \n//     /* eslint-disable max-params */\n//     /**\n//      * 编译元素标签头\n//      *\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {string} tagName 标签名\n//      * @param {Array} props 属性列表\n//      * @param {string?} extraProp 额外的属性串\n//      * @param {boolean?} isClose 是否闭合\n//      */\n//     tagStart: function (sourceBuffer, tagName, props, extraProp, isClose) {\n//         sourceBuffer.joinString('<' + tagName);\n//         sourceBuffer.joinString(extraProp || '');\n// \n//         // index list\n//         var propsIndex = {};\n//         each(props, function (prop) {\n//             propsIndex[prop.name] = prop;\n//         });\n// \n//         each(props, function (prop) {\n//             if (prop.name === 'slot') {\n//                 return;\n//             }\n// \n//             if (prop.name === 'value') {\n//                 switch (tagName) {\n//                     case 'textarea':\n//                         return;\n// \n//                     case 'select':\n//                         sourceBuffer.addRaw('$selectValue = '\n//                             + compileExprSource.expr(prop.expr)\n//                             + ' || \"\";'\n//                         );\n//                         return;\n// \n//                     case 'option':\n//                         sourceBuffer.addRaw('$optionValue = '\n//                             + compileExprSource.expr(prop.expr)\n//                             + ';'\n//                         );\n//                         // value\n//                         sourceBuffer.addRaw('if ($optionValue != null) {');\n//                         sourceBuffer.joinRaw('\" value=\\\\\"\" + $optionValue + \"\\\\\"\"');\n//                         sourceBuffer.addRaw('}');\n// \n//                         // selected\n//                         sourceBuffer.addRaw('if ($optionValue === $selectValue) {');\n//                         sourceBuffer.joinString(' selected');\n//                         sourceBuffer.addRaw('}');\n//                         return;\n//                 }\n//             }\n// \n//             switch (prop.name) {\n//                 case 'readonly':\n//                 case 'disabled':\n//                 case 'multiple':\n//                     if (prop.raw === '') {\n//                         sourceBuffer.joinString(' ' + prop.name);\n//                     }\n//                     else {\n//                         sourceBuffer.joinRaw('boolAttrFilter(\"' + prop.name + '\", '\n//                             + compileExprSource.expr(prop.expr)\n//                             + ')'\n//                         );\n//                     }\n//                     break;\n// \n//                 case 'checked':\n//                     if (tagName === 'input') {\n//                         var valueProp = propsIndex.value;\n//                         var valueCode = compileExprSource.expr(valueProp.expr);\n// \n//                         if (valueProp) {\n//                             switch (propsIndex.type.raw) {\n//                                 case 'checkbox':\n//                                     sourceBuffer.addRaw('if (contains('\n//                                         + compileExprSource.expr(prop.expr)\n//                                         + ', '\n//                                         + valueCode\n//                                         + ')) {'\n//                                     );\n//                                     sourceBuffer.joinString(' checked');\n//                                     sourceBuffer.addRaw('}');\n//                                     break;\n// \n//                                 case 'radio':\n//                                     sourceBuffer.addRaw('if ('\n//                                         + compileExprSource.expr(prop.expr)\n//                                         + ' === '\n//                                         + valueCode\n//                                         + ') {'\n//                                     );\n//                                     sourceBuffer.joinString(' checked');\n//                                     sourceBuffer.addRaw('}');\n//                                     break;\n//                             }\n//                         }\n//                     }\n//                     break;\n// \n//                 default:\n//                     if (prop.attr) {\n//                         sourceBuffer.joinString(' ' + prop.attr);\n//                     }\n//                     else {\n//                         sourceBuffer.joinRaw('attrFilter(\"' + prop.name + '\", '\n//                             + (prop.x ? 'escapeHTML(' : '')\n//                             + compileExprSource.expr(prop.expr)\n//                             + (prop.x ? ')' : '')\n//                             + ')'\n//                         );\n//                     }\n//                     break;\n//             }\n//         });\n// \n//         sourceBuffer.joinString(isClose ? '/>' : '>');\n//     },\n//     /* eslint-enable max-params */\n// \n//     /**\n//      * 编译元素闭合\n//      *\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {string} tagName 标签名\n//      */\n//     tagEnd: function (sourceBuffer, tagName) {\n//         if (!autoCloseTags[tagName]) {\n//             sourceBuffer.joinString('</' + tagName + '>');\n//         }\n// \n//         if (tagName === 'select') {\n//             sourceBuffer.addRaw('$selectValue = null;');\n//         }\n// \n//         if (tagName === 'option') {\n//             sourceBuffer.addRaw('$optionValue = null;');\n//         }\n//     },\n// \n//     /**\n//      * 编译元素内容\n//      *\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {ANode} aNode 元素的抽象节点信息\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     inner: function (sourceBuffer, aNode, owner) {\n//         // inner content\n//         if (aNode.tagName === 'textarea') {\n//             var valueProp = getANodeProp(aNode, 'value');\n//             if (valueProp) {\n//                 sourceBuffer.joinRaw('escapeHTML('\n//                     + compileExprSource.expr(valueProp.expr)\n//                     + ')'\n//                 );\n//             }\n// \n//             return;\n//         }\n// \n//         var htmlDirective = aNode.directives.html;\n//         if (htmlDirective) {\n//             sourceBuffer.joinExpr(htmlDirective.value);\n//         }\n//         else {\n//             /* eslint-disable no-use-before-define */\n//             each(aNode.children, function (aNodeChild) {\n//                 sourceBuffer.addRaw(aNodeCompiler.compile(aNodeChild, sourceBuffer, owner));\n//             });\n//             /* eslint-enable no-use-before-define */\n//         }\n//     }\n// };\n// \n// /**\n//  * ANode 的编译方法集合对象\n//  *\n//  * @inner\n//  */\n// var aNodeCompiler = {\n// \n//     /**\n//      * 编译节点\n//      *\n//      * @param {ANode} aNode 抽象节点\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      * @param {Object} extra 编译所需的一些额外信息\n//      */\n//     compile: function (aNode, sourceBuffer, owner, extra) {\n//         extra = extra || {};\n//         var compileMethod = 'compileElement';\n// \n//         if (aNode.textExpr) {\n//             compileMethod = 'compileText';\n//         }\n//         else if (aNode.directives['if']) { // eslint-disable-line dot-notation\n//             compileMethod = 'compileIf';\n//         }\n//         else if (aNode.directives['for']) { // eslint-disable-line dot-notation\n//             compileMethod = 'compileFor';\n//         }\n//         else if (aNode.tagName === 'slot') {\n//             compileMethod = 'compileSlot';\n//         }\n//         else if (aNode.tagName === 'template') {\n//             compileMethod = 'compileTemplate';\n//         }\n//         else {\n//             var ComponentType = owner.getComponentType(aNode);\n//             if (ComponentType) {\n//                 compileMethod = 'compileComponent';\n//                 extra.ComponentClass = ComponentType;\n//             }\n//         }\n// \n//         aNodeCompiler[compileMethod](aNode, sourceBuffer, owner, extra);\n//     },\n// \n//     /**\n//      * 编译文本节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      */\n//     compileText: function (aNode, sourceBuffer) {\n//         if (aNode.textExpr.original) {\n//             sourceBuffer.joinString(serializeStump('text'));\n//         }\n// \n//         sourceBuffer.joinExpr(aNode.textExpr);\n// \n//         if (aNode.textExpr.original) {\n//             sourceBuffer.joinString(serializeStumpEnd('text'));\n//         }\n//     },\n// \n//     /**\n//      * 编译template节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     compileTemplate: function (aNode, sourceBuffer, owner) {\n//         elementSourceCompiler.inner(sourceBuffer, aNode, owner);\n//     },\n// \n//     /**\n//      * 编译 if 节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     compileIf: function (aNode, sourceBuffer, owner) {\n//         sourceBuffer.addRaw('(function () {');\n// \n//         sourceBuffer.addRaw('var ifIndex = null;');\n// \n//         // output main if\n//         var ifDirective = aNode.directives['if']; // eslint-disable-line dot-notation\n//         sourceBuffer.addRaw('if (' + compileExprSource.expr(ifDirective.value) + ') {');\n//         sourceBuffer.addRaw(\n//             aNodeCompiler.compile(\n//                 rinseCondANode(aNode),\n//                 sourceBuffer,\n//                 owner\n//             )\n//         );\n//         sourceBuffer.addRaw('}');\n// \n//         // output elif and else\n//         each(aNode.elses, function (elseANode, index) {\n//             var elifDirective = elseANode.directives.elif;\n//             if (elifDirective) {\n//                 sourceBuffer.addRaw('else if (' + compileExprSource.expr(elifDirective.value) + ') {');\n//             }\n//             else {\n//                 sourceBuffer.addRaw('else {');\n//             }\n// \n//             sourceBuffer.addRaw(\n//                 aNodeCompiler.compile(\n//                     rinseCondANode(elseANode),\n//                     sourceBuffer,\n//                     owner\n//                 )\n//             );\n//             sourceBuffer.addRaw('}');\n//         });\n// \n//         sourceBuffer.addRaw('})();');\n//     },\n// \n//     /**\n//      * 编译 for 节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     compileFor: function (aNode, sourceBuffer, owner) {\n//         var forElementANode = createANode({\n//             children: aNode.children,\n//             props: aNode.props,\n//             events: aNode.events,\n//             tagName: aNode.tagName,\n//             directives: cloneDirectives(aNode.directives, {\n//                 'for': 1\n//             }),\n//             hotspot: aNode.hotspot\n//         });\n// \n//         var forDirective = aNode.directives['for']; // eslint-disable-line dot-notation\n//         var itemName = forDirective.item.raw;\n//         var indexName = forDirective.index.raw;\n//         var listName = compileExprSource.dataAccess(forDirective.value);\n// \n//         if (indexName === '$index') {\n//             indexName = guid();\n//         }\n// \n//         sourceBuffer.addRaw('for ('\n//             + 'var ' + indexName + ' = 0; '\n//             + indexName + ' < ' + listName + '.length; '\n//             + indexName + '++) {'\n//         );\n//         sourceBuffer.addRaw('componentCtx.data.' + indexName + '=' + indexName + ';');\n//         sourceBuffer.addRaw('componentCtx.data.' + itemName + '= ' + listName + '[' + indexName + '];');\n//         sourceBuffer.addRaw(\n//             aNodeCompiler.compile(\n//                 forElementANode,\n//                 sourceBuffer,\n//                 owner\n//             )\n//         );\n//         sourceBuffer.addRaw('}');\n//     },\n// \n//     /**\n//      * 编译 slot 节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     compileSlot: function (aNode, sourceBuffer, owner) {\n//         sourceBuffer.addRaw('(function () {');\n// \n//         sourceBuffer.addRaw('function $defaultSlotRender(componentCtx) {');\n//         sourceBuffer.addRaw('  var html = \"\";');\n//         each(aNode.children, function (aNodeChild) {\n//             sourceBuffer.addRaw(aNodeCompiler.compile(aNodeChild, sourceBuffer, owner));\n//         });\n//         sourceBuffer.addRaw('  return html;');\n//         sourceBuffer.addRaw('}');\n// \n//         sourceBuffer.addRaw('  var $givenSlot = [];');\n// \n//         var nameProp = getANodeProp(aNode, 'name');\n//         if (nameProp) {\n//             sourceBuffer.addRaw('var $slotName = ' + compileExprSource.expr(nameProp.expr) + ';');\n//         }\n//         else {\n//             sourceBuffer.addRaw('var $slotName = null;');\n//         }\n// \n//         sourceBuffer.addRaw('var $ctxGivenSlots = componentCtx.givenSlots;');\n//         sourceBuffer.addRaw('for (var $i = 0; $i < $ctxGivenSlots.length; $i++) {');\n//         sourceBuffer.addRaw('  if ($ctxGivenSlots[$i][1] == $slotName) {');\n//         sourceBuffer.addRaw('    $givenSlot.push($ctxGivenSlots[$i][0]);');\n//         sourceBuffer.addRaw('  }');\n//         sourceBuffer.addRaw('}');\n// \n// \n//         sourceBuffer.addRaw('var $isInserted = $givenSlot.length > 0;');\n//         sourceBuffer.addRaw('if (!$isInserted) { $givenSlot.push($defaultSlotRender); }');\n// \n//         sourceBuffer.addRaw('var $slotCtx = $isInserted ? componentCtx.owner : componentCtx;');\n//         if (aNode.vars) {\n//             sourceBuffer.addRaw('$slotCtx = {data: extend({}, $slotCtx.data), filters: $slotCtx.filters, callFilter: $slotCtx.callFilter};'); // eslint-disable-line\n//             each(aNode.vars, function (varItem) {\n//                 sourceBuffer.addRaw(\n//                     '$slotCtx.data[\"' + varItem.name + '\"] = '\n//                     + compileExprSource.expr(varItem.expr)\n//                     + ';'\n//                 );\n//             });\n//         }\n// \n//         sourceBuffer.addRaw('for (var $renderIndex = 0; $renderIndex < $givenSlot.length; $renderIndex++) {');\n//         sourceBuffer.addRaw('  html += $givenSlot[$renderIndex]($slotCtx);');\n//         sourceBuffer.addRaw('}');\n// \n//         sourceBuffer.addRaw('})();');\n//     },\n// \n//     /**\n//      * 编译普通节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      * @param {Object} extra 编译所需的一些额外信息\n//      */\n//     compileElement: function (aNode, sourceBuffer, owner, extra) {\n//         extra = extra || {};\n//         // if (aNode.tagName === 'option'\n//         //     && !getANodeProp(aNode, 'value')\n//         //     && aNode.children[0]\n//         // ) {\n//         //     aNode.props.push({\n//         //         name: 'value',\n//         //         expr: aNode.children[0].textExpr\n//         //     });\n//         // }\n// \n//         elementSourceCompiler.tagStart(\n//             sourceBuffer,\n//             aNode.tagName,\n//             aNode.props,\n//             extra.prop\n//         );\n// \n//         elementSourceCompiler.inner(sourceBuffer, aNode, owner);\n//         elementSourceCompiler.tagEnd(sourceBuffer, aNode.tagName);\n//     },\n// \n//     /**\n//      * 编译组件节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      * @param {Object} extra 编译所需的一些额外信息\n//      * @param {Function} extra.ComponentClass 对应组件类\n//      */\n//     compileComponent: function (aNode, sourceBuffer, owner, extra) {\n//         if (aNode) {\n//             sourceBuffer.addRaw('var $slotName = null;');\n//             sourceBuffer.addRaw('var $givenSlots = [];');\n//             each(aNode.children, function (child) {\n//                 var slotBind = !child.textExpr && getANodeProp(child, 'slot');\n//                 if (slotBind) {\n//                     sourceBuffer.addRaw('$slotName = ' + compileExprSource.expr(slotBind.expr) + ';');\n//                     sourceBuffer.addRaw('$givenSlots.push([function (componentCtx) {');\n//                     sourceBuffer.addRaw('  var html = \"\";');\n//                     sourceBuffer.addRaw(aNodeCompiler.compile(child, sourceBuffer, owner));\n//                     sourceBuffer.addRaw('  return html;');\n//                     sourceBuffer.addRaw('}, $slotName]);');\n//                 }\n//                 else {\n//                     sourceBuffer.addRaw('$givenSlots.push([function (componentCtx) {');\n//                     sourceBuffer.addRaw('  var html = \"\";');\n//                     sourceBuffer.addRaw(aNodeCompiler.compile(child, sourceBuffer, owner));\n//                     sourceBuffer.addRaw('  return html;');\n//                     sourceBuffer.addRaw('}]);');\n//                 }\n//             });\n//         }\n// \n//         var ComponentClass = extra.ComponentClass;\n//         var component = new ComponentClass({\n//             aNode: aNode,\n//             owner: owner,\n//             subTag: aNode.tagName\n//         });\n// \n//         var givenData = [];\n// \n//         each(component.binds, function (prop) {\n//             givenData.push(\n//                 compileExprSource.stringLiteralize(prop.name)\n//                 + ':'\n//                 + compileExprSource.expr(prop.expr)\n//             );\n//         });\n// \n//         sourceBuffer.addRaw('html += (');\n//         sourceBuffer.addRendererStart();\n//         compileComponentSource(sourceBuffer, component, extra && extra.prop);\n//         sourceBuffer.addRendererEnd();\n//         sourceBuffer.addRaw(')({' + givenData.join(',\\n') + '}, componentCtx, $givenSlots);');\n//         sourceBuffer.addRaw('$givenSlots = null;');\n//     }\n// };\n// /* eslint-disable guard-for-in */\n// \n// /**\n//  * 生成组件 renderer 时 ctx 对象构建的代码\n//  *\n//  * @inner\n//  * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//  * @param {Object} component 组件实例\n//  * @param {string?} extraProp 额外的属性串\n//  */\n// function compileComponentSource(sourceBuffer, component, extraProp) {\n//     sourceBuffer.addRaw(genComponentContextCode(component));\n//     sourceBuffer.addRaw('componentCtx.owner = parentCtx;');\n//     sourceBuffer.addRaw('componentCtx.givenSlots = givenSlots;');\n// \n// \n//     sourceBuffer.addRaw('data = extend(componentCtx.data, data);');\n//     sourceBuffer.addRaw('for (var $i = 0; $i < componentCtx.computedNames.length; $i++) {');\n//     sourceBuffer.addRaw('  var $computedName = componentCtx.computedNames[$i];');\n//     sourceBuffer.addRaw('  data[$computedName] = componentCtx.computed[$computedName]();');\n//     sourceBuffer.addRaw('}');\n// \n//     extraProp = extraProp || '';\n// \n//     var eventDeclarations = [];\n//     for (var key in component.listeners) {\n//         each(component.listeners[key], function (listener) {\n//             if (listener.declaration) {\n//                 eventDeclarations.push(listener.declaration);\n//             }\n//         });\n//     }\n// \n//     elementSourceCompiler.tagStart(\n//         sourceBuffer,\n//         component.tagName,\n//         component.aNode.props,\n//         extraProp\n//     );\n// \n//     if (!component.owner) {\n//         sourceBuffer.joinString('<!--s-data:');\n//         sourceBuffer.joinDataStringify();\n//         sourceBuffer.joinString('-->');\n//     }\n// \n// \n// \n//     elementSourceCompiler.inner(sourceBuffer, component.aNode, component);\n//     elementSourceCompiler.tagEnd(sourceBuffer, component.tagName);\n// }\n// \n// var stringifier = {\n//     obj: function (source) {\n//         var prefixComma;\n//         var result = '{';\n// \n//         for (var key in source) {\n//             if (typeof source[key] === 'undefined') {\n//                 continue;\n//             }\n// \n//             if (prefixComma) {\n//                 result += ',';\n//             }\n//             prefixComma = 1;\n// \n//             result += compileExprSource.stringLiteralize(key) + ':' + stringifier.any(source[key]);\n//         }\n// \n//         return result + '}';\n//     },\n// \n//     arr: function (source) {\n//         var prefixComma;\n//         var result = '[';\n// \n//         each(source, function (value) {\n//             if (prefixComma) {\n//                 result += ',';\n//             }\n//             prefixComma = 1;\n// \n//             result += stringifier.any(value);\n//         });\n// \n//         return result + ']';\n//     },\n// \n//     str: function (source) {\n//         return compileExprSource.stringLiteralize(source);\n//     },\n// \n//     date: function (source) {\n//         return 'new Date(' + source.getTime() + ')';\n//     },\n// \n//     any: function (source) {\n//         switch (typeof source) {\n//             case 'string':\n//                 return stringifier.str(source);\n// \n//             case 'number':\n//                 return '' + source;\n// \n//             case 'boolean':\n//                 return source ? 'true' : 'false';\n// \n//             case 'object':\n//                 if (!source) {\n//                     return null;\n//                 }\n// \n//                 if (source instanceof Array) {\n//                     return stringifier.arr(source);\n//                 }\n// \n//                 if (source instanceof Date) {\n//                     return stringifier.date(source);\n//                 }\n// \n//                 return stringifier.obj(source);\n//         }\n// \n//         throw new Error('Cannot Stringify:' + source);\n//     }\n// };\n// \n// /**\n//  * 生成组件 renderer 时 ctx 对象构建的代码\n//  *\n//  * @inner\n//  * @param {Object} component 组件实例\n//  * @return {string}\n//  */\n// function genComponentContextCode(component) {\n//     var code = ['var componentCtx = {'];\n// \n//     // given anode\n//     code.push('givenSlots: [],');\n// \n//     // filters\n//     code.push('filters: {');\n//     var filterCode = [];\n//     for (var key in component.filters) {\n//         var filter = component.filters[key];\n// \n//         if (typeof filter === 'function') {\n//             filterCode.push(key + ': ' + filter.toString());\n//         }\n//     }\n//     code.push(filterCode.join(','));\n//     code.push('},');\n// \n//     code.push(\n//         'callFilter: function (name, args) {',\n//         '    var filter = this.filters[name] || DEFAULT_FILTERS[name];',\n//         '    if (typeof filter === \"function\") {',\n//         '        return filter.apply(this, args);',\n//         '    }',\n//         '},'\n//     );\n// \n//     /* eslint-disable no-redeclare */\n//     // computed obj\n//     code.push('computed: {');\n//     var computedCode = [];\n//     for (var key in component.computed) {\n//         var computed = component.computed[key];\n// \n//         if (typeof computed === 'function') {\n//             computedCode.push(key + ': '\n//                 + computed.toString().replace(\n//                     /this.data.get\\(([^\\)]+)\\)/g,\n//                     function (match, exprLiteral) {\n//                         var exprStr = (new Function('return ' + exprLiteral))();\n//                         var expr = parseExpr(exprStr);\n// \n//                         return compileExprSource.expr(expr);\n//                     })\n//             );\n//         }\n//     }\n//     code.push(computedCode.join(','));\n//     code.push('},');\n// \n//     // computed names\n//     code.push('computedNames: [');\n//     computedCode = [];\n//     for (var key in component.computed) {\n//         var computed = component.computed[key];\n// \n//         if (typeof computed === 'function') {\n//             computedCode.push('\"' + key + '\"');\n//         }\n//     }\n//     code.push(computedCode.join(','));\n//     code.push('],');\n//     /* eslint-enable no-redeclare */\n// \n//     // data\n//     code.push('data: ' + stringifier.any(component.data.get()) + ',');\n// \n//     // tagName\n//     code.push('tagName: \"' + component.tagName + '\"');\n//     code.push('};');\n// \n//     return code.join('\\n');\n// }\n// \n// /* eslint-enable guard-for-in */\n// \n// /* eslint-disable no-unused-vars */\n// /* eslint-disable fecs-camelcase */\n// \n// /**\n//  * 组件编译的模板函数\n//  *\n//  * @inner\n//  */\n// function componentCompilePreCode() {\n//     var $version = '3.5.7';\n// \n//     function extend(target, source) {\n//         if (source) {\n//             Object.keys(source).forEach(function (key) {\n//                 let value = source[key];\n//                 if (typeof value !== 'undefined') {\n//                     target[key] = value;\n//                 }\n//             });\n//         }\n// \n//         return target;\n//     }\n// \n//     function each(array, iterator) {\n//         if (array && array.length > 0) {\n//             for (var i = 0, l = array.length; i < l; i++) {\n//                 if (iterator(array[i], i) === false) {\n//                     break;\n//                 }\n//             }\n//         }\n//     }\n// \n//     function contains(array, value) {\n//         var result;\n//         each(array, function (item) {\n//             result = item === value;\n//             return !result;\n//         });\n// \n//         return result;\n//     }\n// \n//     var HTML_ENTITY = {\n//         /* jshint ignore:start */\n//         '&': '&amp;',\n//         '<': '&lt;',\n//         '>': '&gt;',\n//         '\"': '&quot;',\n//         /* eslint-disable quotes */\n//         \"'\": '&#39;'\n//         /* eslint-enable quotes */\n//         /* jshint ignore:end */\n//     };\n// \n//     function htmlFilterReplacer(c) {\n//         return HTML_ENTITY[c];\n//     }\n// \n//     function escapeHTML(source) {\n//         if (source == null) {\n//             return '';\n//         }\n// \n//         return String(source).replace(/[&<>\"']/g, htmlFilterReplacer);\n//     }\n// \n//     var DEFAULT_FILTERS = {\n//         url: encodeURIComponent,\n//         _class: function (source) {\n//             if (source instanceof Array) {\n//                 return source.join(' ');\n//             }\n// \n//             return source;\n//         },\n//         _style: function (source) {\n//             if (typeof source === 'object') {\n//                 var result = '';\n//                 if (source) {\n//                     Object.keys(source).forEach(function (key) {\n//                         result += key + ':' + source[key] + ';';\n//                     });\n//                 }\n// \n//                 return result;\n//             }\n// \n//             return source || '';\n//         },\n//         _sep: function (source, sep) {\n//             return source ? sep + source : '';\n//         }\n//     };\n// \n//     function attrFilter(name, value) {\n//         if (value) {\n//             return ' ' + name + '=\"' + value + '\"';\n//         }\n// \n//         return '';\n//     }\n// \n//     function boolAttrFilter(name, value) {\n//         if (value && value !== 'false' && value !== '0') {\n//             return ' ' + name;\n//         }\n// \n//         return '';\n//     }\n// \n//     function stringLiteralize(source) {\n//         return '\"'\n//             + source\n//                 .replace(/\\x5C/g, '\\\\\\\\')\n//                 .replace(/\"/g, '\\\\\"')\n//                 .replace(/\\x0A/g, '\\\\n')\n//                 .replace(/\\x09/g, '\\\\t')\n//                 .replace(/\\x0D/g, '\\\\r')\n//             + '\"';\n//     }\n// \n//     var stringifier = {\n//         obj: function (source) {\n//             var prefixComma;\n//             var result = '{';\n// \n//             Object.keys(source).forEach(function (key) {\n//                 if (typeof source[key] === 'undefined') {\n//                     return;\n//                 }\n// \n//                 if (prefixComma) {\n//                     result += ',';\n//                 }\n//                 prefixComma = 1;\n// \n//                 result += stringLiteralize(key) + ':' + stringifier.any(source[key]);\n//             });\n// \n//             return result + '}';\n//         },\n// \n//         arr: function (source) {\n//             var prefixComma;\n//             var result = '[';\n// \n//             each(source, function (value) {\n//                 if (prefixComma) {\n//                     result += ',';\n//                 }\n//                 prefixComma = 1;\n// \n//                 result += stringifier.any(value);\n//             });\n// \n//             return result + ']';\n//         },\n// \n//         str: function (source) {\n//             return stringLiteralize(source);\n//         },\n// \n//         date: function (source) {\n//             return 'new Date(' + source.getTime() + ')';\n//         },\n// \n//         any: function (source) {\n//             switch (typeof source) {\n//                 case 'string':\n//                     return stringifier.str(source);\n// \n//                 case 'number':\n//                     return '' + source;\n// \n//                 case 'boolean':\n//                     return source ? 'true' : 'false';\n// \n//                 case 'object':\n//                     if (!source) {\n//                         return null;\n//                     }\n// \n//                     if (source instanceof Array) {\n//                         return stringifier.arr(source);\n//                     }\n// \n//                     if (source instanceof Date) {\n//                         return stringifier.date(source);\n//                     }\n// \n//                     return stringifier.obj(source);\n//             }\n// \n//             throw new Error('Cannot Stringify:' + source);\n//         }\n//     };\n// }\n// /* eslint-enable no-unused-vars */\n// /* eslint-enable fecs-camelcase */\n// \n// /**\n//  * 将组件编译成 render 方法的 js 源码\n//  *\n//  * @param {Function} ComponentClass 组件类\n//  * @return {string}\n//  */\n// function compileJSSource(ComponentClass) {\n//     var sourceBuffer = new CompileSourceBuffer();\n// \n//     sourceBuffer.addRendererStart();\n//     sourceBuffer.addRaw(\n//         componentCompilePreCode.toString()\n//             .split('\\n')\n//             .slice(1)\n//             .join('\\n')\n//             .replace(/\\}\\s*$/, '')\n//     );\n// \n//     // 先初始化个实例，让模板编译成 ANode，并且能获得初始化数据\n//     var component = new ComponentClass();\n// \n//     compileComponentSource(sourceBuffer, component);\n//     sourceBuffer.addRendererEnd();\n//     return sourceBuffer.toCode();\n// }\n// #[end]\n\n// exports = module.exports = compileJSSource;\n\n    /* eslint-disable no-unused-vars */\n//     var nextTick = require('./util/next-tick');\n//     var inherits = require('./util/inherits');\n//     var parseTemplate = require('./parser/parse-template');\n//     var parseExpr = require('./parser/parse-expr');\n//     var ExprType = require('./parser/expr-type');\n//     var LifeCycle = require('./view/life-cycle');\n//     var NodeType = require('./view/node-type');\n//     var Component = require('./view/component');\n//     var compileComponent = require('./view/compile-component');\n//     var defineComponent = require('./view/define-component');\n//     var emitDevtool = require('./util/emit-devtool');\n//     var compileJSSource = require('./view/compile-js-source');\n//     var Data = require('./runtime/data');\n//     var evalExpr = require('./runtime/eval-expr');\n//     var DataTypes = require('./util/data-types');\n\n\n    var san = {\n        /**\n         * san版本号\n         *\n         * @type {string}\n         */\n        version: '3.5.7',\n\n        // #[begin] devtool\n        /**\n         * 是否开启调试。开启调试时 devtool 会工作\n         *\n         * @type {boolean}\n         */\n        debug: true,\n        // #[end]\n\n        // #[begin] ssr\n//         /**\n//          * 将组件类编译成 renderer 方法\n//          *\n//          * @param {Function} ComponentClass 组件类\n//          * @return {function(Object):string}\n//          */\n//         compileToRenderer: function (ComponentClass) {\n//             var renderer = ComponentClass.__ssrRenderer;\n// \n//             if (!renderer) {\n//                 var code = compileJSSource(ComponentClass);\n//                 renderer = (new Function('return ' + code))();\n//                 ComponentClass.__ssrRenderer = renderer;\n//             }\n// \n//             return renderer;\n//         },\n// \n//         /**\n//          * 将组件类编译成 renderer 方法的源文件\n//          *\n//          * @param {Function} ComponentClass 组件类\n//          * @return {string}\n//          */\n//         compileToSource: compileJSSource,\n        // #[end]\n\n        /**\n         * 组件基类\n         *\n         * @type {Function}\n         */\n        Component: Component,\n\n        /**\n         * 创建组件类\n         *\n         * @param {Object} proto 组件类的方法表\n         * @return {Function}\n         */\n        defineComponent: defineComponent,\n\n        /**\n         * 编译组件类。预解析template和components\n         *\n         * @param {Function} ComponentClass 组件类\n         */\n        compileComponent: compileComponent,\n\n        /**\n         * 解析 template\n         *\n         * @inner\n         * @param {string} source template 源码\n         * @return {ANode}\n         */\n        parseTemplate: parseTemplate,\n\n        /**\n         * 解析表达式\n         *\n         * @param {string} source 源码\n         * @return {Object}\n         */\n        parseExpr: parseExpr,\n\n        /**\n         * 表达式类型枚举\n         *\n         * @const\n         * @type {Object}\n         */\n        ExprType: ExprType,\n\n        /**\n         * 生命周期\n         */\n        LifeCycle: LifeCycle,\n\n        /**\n         * 节点类型\n         *\n         * @const\n         * @type {Object}\n         */\n        NodeType: NodeType,\n\n        /**\n         * 在下一个更新周期运行函数\n         *\n         * @param {Function} fn 要运行的函数\n         */\n        nextTick: nextTick,\n\n        /**\n         * 数据类\n         *\n         * @class\n         * @param {Object?} data 初始数据\n         * @param {Data?} parent 父级数据对象\n         */\n        Data: Data,\n\n        /**\n         * 计算表达式的值\n         *\n         * @param {Object} expr 表达式对象\n         * @param {Data} data 数据对象\n         * @param {Component=} owner 组件对象，用于表达式中filter的执行\n         * @return {*}\n         */\n        evalExpr: evalExpr,\n\n        /**\n         * 构建类之间的继承关系\n         *\n         * @param {Function} subClass 子类函数\n         * @param {Function} superClass 父类函数\n         */\n        inherits: inherits,\n\n        /**\n         * DataTypes\n         *\n         * @type {Object}\n         */\n        DataTypes: DataTypes\n    };\n\n    // export\n    if (typeof exports === 'object' && typeof module === 'object') {\n        // For CommonJS\n        exports = module.exports = san;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        // For AMD\n        define('san', [], san);\n    }\n    else {\n        // For <script src=\"...\"\n        root.san = san;\n    }\n\n    // #[begin] devtool\n    emitDevtool.start(san);\n    // #[end]\n})(this);\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","import san , { DataTypes } from 'san';\r\n\r\nconst App = san.defineComponent({\r\n    template: `\r\n\t\t\t<main>\r\n\t\t\t\t<form action=\"\">\r\n\t\t\t\t\t<input type=\"text\" id=\"name\" placeholder=\"姓名\" value=\"{= name =}\">\r\n\t\t\t\t\t<input type=\"number\" id=\"age\" placeholder=\"年龄\" value=\"{= age =}\" >\r\n\t\t\t\t\t<input type=\"text\" id=\"des\" placeholder=\"简介\" value=\"{= des =}\">\r\n\t\t\t\t</form>\r\n\t\t\t\t<p>姓名：{{ name }}</p>\r\n\t\t\t\t<p>年龄：{{ age | isZero}}</p>\r\n\t\t\t\t<p>简介：{{ des }}</p>\r\n\t\t\t\t<button on-click=\"reset\">移除信息</button>\r\n\t\t\t</main>\r\n\t\t`,\r\n    initData:() => ({\r\n        name: 'Eric',\r\n        age: 21,\r\n        des: 'hdu'\r\n    }),\r\n    filters:{\r\n        isZero: val => val==0 ? '' : val\r\n    },\r\n    reset:function(data) {\r\n        this.data.set('name','')\r\n        this.data.set('age',0)\r\n        this.data.set('des','')\r\n    }\r\n})\r\n\r\nconst app = new App()\r\n\r\napp.attach(document.body)"],"sourceRoot":""}